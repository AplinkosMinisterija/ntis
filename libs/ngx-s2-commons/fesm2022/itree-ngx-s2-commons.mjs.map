{"version":3,"file":"itree-ngx-s2-commons.mjs","sources":["../../../projects/ngx-s2-commons/src/lib/ngx-s2-commons.module.ts","../../../projects/ngx-s2-commons/src/lib/message/app.messages.ts","../../../projects/ngx-s2-commons/src/lib/service/loader.service.ts","../../../projects/ngx-s2-commons/src/lib/i18n/lang.util.ts","../../../projects/ngx-s2-commons/src/lib/i18n/missing.translation.handler.ts","../../../projects/ngx-s2-commons/src/lib/model/spr_paging_ot.ts","../../../projects/ngx-s2-commons/src/lib/enums/extended-search.ts","../../../projects/ngx-s2-commons/src/lib/form/common.form.services.ts","../../../projects/ngx-s2-commons/src/lib/form/base.browse.form.ts","../../../projects/ngx-s2-commons/src/lib/ui/utils.ts","../../../projects/ngx-s2-commons/src/lib/auth/auth.util.ts","../../../projects/ngx-s2-commons/src/lib/auth/auth.event.ts","../../../projects/ngx-s2-commons/src/lib/log/console-logger.service.ts","../../../projects/ngx-s2-commons/src/lib/log/logger.factory.ts","../../../projects/ngx-s2-commons/src/lib/error/s2error.ts","../../../projects/ngx-s2-commons/src/lib/error/servererror.ts","../../../projects/ngx-s2-commons/src/lib/error/unauthorized.ts","../../../projects/ngx-s2-commons/src/lib/error/server-unavailable-error.ts","../../../projects/ngx-s2-commons/src/lib/service/client-log.service.ts","../../../projects/ngx-s2-commons/src/lib/error/app.error.handler.ts","../../../projects/ngx-s2-commons/src/lib/ui/field/validation/message.resolver.ts","../../../projects/ngx-s2-commons/src/lib/form/deprecated-base.edit.form.ts","../../../projects/ngx-s2-commons/src/lib/form/base.edit.form.ts","../../../projects/ngx-s2-commons/src/lib/base.app.component.ts","../../../projects/ngx-s2-commons/src/lib/service/interceptor/content.type.interceptor.ts","../../../projects/ngx-s2-commons/src/lib/service/interceptor/jwt.interceptor.ts","../../../projects/ngx-s2-commons/src/lib/service/interceptor/s2.interceptor.ts","../../../projects/ngx-s2-commons/src/lib/auth/common.auth.service.ts","../../../projects/ngx-s2-commons/src/lib/auth/auth.guard.ts","../../../projects/ngx-s2-commons/src/lib/auth/can-deactivate.guard.ts","../../../projects/ngx-s2-commons/src/lib/model/spr_id_values_ot.ts","../../../projects/ngx-s2-commons/src/lib/model/spr_key_values_ot.ts","../../../projects/ngx-s2-commons/src/public-api.ts","../../../projects/ngx-s2-commons/src/itree-ngx-s2-commons.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule, HttpClientModule, TranslateModule],\r\n  exports: [],\r\n})\r\nexport class NgxS2CommonsModule {}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport interface AppMessage {\r\n  severity?: string;\r\n  detail?: string;\r\n  id?: unknown;\r\n  sticky?: boolean;\r\n  data?: unknown;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppMessages {\r\n  public static readonly SEVERITY_ERROR = 'error';\r\n  public static readonly SEVERITY_WARN = 'warn';\r\n  public static readonly SEVERITY_SUCCESS = 'success';\r\n  public static readonly SEVERITY_INFO = 'info';\r\n\r\n  public readonly add$ = new Subject<AppMessage>();\r\n  public readonly clear$ = new Subject<void>();\r\n\r\n  private messages: AppMessage[] = [];\r\n\r\n  constructor(private ngZone: NgZone) {}\r\n\r\n  private showMessage(message: AppMessage): void {\r\n    if (\r\n      message.id === 'VALIDATION' ||\r\n      message.severity === AppMessages.SEVERITY_ERROR ||\r\n      message.severity === AppMessages.SEVERITY_WARN\r\n    ) {\r\n      message.sticky = true;\r\n    }\r\n    this.ngZone.run(() => {\r\n      if (\r\n        this.messages.some(\r\n          (messageFromArray) =>\r\n            messageFromArray.severity === message.severity && messageFromArray.detail === message.detail\r\n        )\r\n      ) {\r\n        this.clearMessages();\r\n        this.messages.push(message);\r\n        this.add$.next(message);\r\n      } else if (\r\n        (message.data as Record<string, unknown>)?.allowMultiple ||\r\n        !this.messages.some(\r\n          (messageFromArray) =>\r\n            messageFromArray.severity === message.severity && messageFromArray.detail === message.detail\r\n        )\r\n      ) {\r\n        this.messages.push(message);\r\n        this.add$.next(message);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearMessages(): void {\r\n    this.clear$.next();\r\n    this.messages = [];\r\n  }\r\n\r\n  clearMessagesExceptSuccess(): void {\r\n    if (this.messages.some((message) => message.severity !== AppMessages.SEVERITY_SUCCESS)) {\r\n      this.clear$.next();\r\n      this.messages = [];\r\n    }\r\n  }\r\n\r\n  removeMessage(message: AppMessage): void {\r\n    const messageIndex = this.messages.findIndex(\r\n      (messageFromArray) => messageFromArray.severity === message.severity && messageFromArray.detail === message.detail\r\n    );\r\n    if (messageIndex !== -1) {\r\n      this.messages.splice(messageIndex, 1);\r\n    }\r\n  }\r\n\r\n  showError(summary: string, detail: string, id?: string): void {\r\n    this.showMessage({ severity: AppMessages.SEVERITY_ERROR, detail, id });\r\n  }\r\n\r\n  showWarning(summary: string, detail: string, id?: string): void {\r\n    this.showMessage({ severity: AppMessages.SEVERITY_WARN, detail, id });\r\n  }\r\n\r\n  showSuccess(summary: string, detail: string, id?: string): void {\r\n    this.showMessage({ severity: AppMessages.SEVERITY_SUCCESS, detail, id });\r\n  }\r\n\r\n  showInfo(summary: string, detail: string, id?: string): void {\r\n    this.showMessage({ severity: AppMessages.SEVERITY_INFO, detail, id });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AppMessages } from '../message/app.messages';\r\n\r\nexport interface LoaderParams {\r\n  show: boolean;\r\n  dimmed?: boolean;\r\n  message?: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoaderService {\r\n  private showCount = 0;\r\n  private timeOutInterval: ReturnType<typeof setTimeout>;\r\n  showLoader: BehaviorSubject<LoaderParams> = new BehaviorSubject<LoaderParams>({ show: false });\r\n\r\n  constructor(private appMessages: AppMessages) {}\r\n\r\n  show(message?: string, dimmed?: boolean): void {\r\n    if (this.showCount === 0) {\r\n      this.showLoader.next({ show: true, message, dimmed });\r\n    }\r\n    this.showCount++;\r\n  }\r\n\r\n  hide(): void {\r\n    if (this.showCount > 0) {\r\n      this.showCount--;\r\n    }\r\n    if (this.showCount === 0) {\r\n      this.showLoader.next({ show: false });\r\n      if (this.timeOutInterval !== undefined) {\r\n        clearTimeout(this.timeOutInterval);\r\n        this.timeOutInterval = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  showWithOptions({\r\n    message,\r\n    dimmed,\r\n    timeout,\r\n    timeoutMessage,\r\n  }: {\r\n    message?: string;\r\n    dimmed?: boolean;\r\n    timeout?: number;\r\n    timeoutMessage?: string;\r\n  }): void {\r\n    this.show(message, dimmed);\r\n    if (timeout) {\r\n      this.timeOutInterval = setTimeout(() => {\r\n        this.onTimeout(timeoutMessage);\r\n      }, timeout);\r\n    }\r\n  }\r\n\r\n  protected onTimeout(timeoutMessage?: string): void {\r\n    this.hide();\r\n    if (timeoutMessage) {\r\n      this.appMessages.showError('', timeoutMessage);\r\n    }\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\n\r\nexport const DEFAULT_LANGUAGE = 'lt';\r\nexport const LOCAL_STORAGE_LANG_KEY = 'lang';\r\n\r\n/**\r\n * Gets language from localstorage\r\n */\r\nexport function getLang(): string {\r\n    return localStorage.getItem(LOCAL_STORAGE_LANG_KEY);\r\n}\r\n\r\n/**\r\n * Sets language, updates localstorage ant ngx-translate language\r\n */\r\nexport function setLang(translate: TranslateService, lang: string): void {\r\n    localStorage.setItem(LOCAL_STORAGE_LANG_KEY, lang);\r\n    translate.use(lang);\r\n}\r\n\r\n/**\r\n * Used to init translations on app startup\r\n */\r\nexport function initLang(translate: TranslateService): void {\r\n    const userLang = localStorage.getItem(LOCAL_STORAGE_LANG_KEY);\r\n    // ------------ Isjungta nes nekorektiskai veikia kalbos setinimas is url parametru --------------\r\n    // translate.setDefaultLang(DEFAULT_LANGUAGE);\r\n    if (userLang != null) {\r\n        translate.use(userLang);\r\n    } else {\r\n        setLang(translate, DEFAULT_LANGUAGE);\r\n    }\r\n}\r\n","import { MissingTranslationHandler, MissingTranslationHandlerParams } from '@ngx-translate/core';\r\n\r\nexport class AppMissingTranslationHandler implements MissingTranslationHandler {\r\n  handle(params: MissingTranslationHandlerParams): string {\r\n    return `#!!!${params.key}!!!`;\r\n  }\r\n}\r\n","/* eslint-disable @typescript-eslint/naming-convention, no-underscore-dangle, id-blacklist, id-match */\r\n\r\nimport { Spr_key_values_ot } from './spr_key_values_ot';\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport class Spr_paging_ot {\r\n    cnt: number;\r\n    skip_rows: number;\r\n    page_size: number;\r\n    order_clause: string;\r\n    sum_values: Spr_key_values_ot[];\r\n\r\n    constructor(cnt: number, skip_rows: number, page_size: number, order_clause: string) {\r\n        this.cnt = cnt;\r\n        this.skip_rows = skip_rows;\r\n        this.page_size = page_size;\r\n        this.order_clause = order_clause;\r\n    }\r\n}\r\n\r\n","export enum ExtendedSearchCondition {\r\n  More = '>',\r\n  Less = '<',\r\n  Equals = '=',\r\n  NotEqual = '!=',\r\n  StartsWith = '%-',\r\n  EndsWith = '-%',\r\n  Contains = '%-%',\r\n  Empty = 'null',\r\n  NotEmpty = 'notnull',\r\n  Period = '[]',\r\n}\r\n\r\nexport enum ExtendedSearchUpperLower {\r\n  Regular = 'regular',\r\n  Lowercase = 'lowercase',\r\n  Uppercase = 'uppercase',\r\n  CaseInsensitiveLatin = 'caseInsensitiveLatin',\r\n  RegularLatin = 'regularLatin',\r\n}\r\n","import { ConfirmationService } from 'primeng/api';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { AppMessages } from '../message/app.messages';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommonFormServices {\r\n  calendarLt = {\r\n    closeText: 'Done',\r\n    prevText: 'Prev',\r\n    nextText: 'Next',\r\n    currentText: 'Today',\r\n    today: 'Šiandien',\r\n    clear: 'Išvalyti',\r\n    monthNames: [\r\n      'sausis',\r\n      'vasaris',\r\n      'kovas',\r\n      'balandis',\r\n      'gegužė',\r\n      'birželis',\r\n      'liepa',\r\n      'rugpjūtis',\r\n      'rugsėjis',\r\n      'spalis',\r\n      'lapkritis',\r\n      'gruodis',\r\n    ],\r\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n    dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n    dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n    dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\r\n    weekHeader: 'Wk',\r\n    dateFormat: 'dd/mm/yy',\r\n    firstDay: 1,\r\n    isRTL: false,\r\n    showMonthAfterYear: false,\r\n    yearSuffix: '',\r\n  };\r\n\r\n  constructor(\r\n    public route: ActivatedRoute,\r\n    public router: Router,\r\n    public appMessages: AppMessages,\r\n    public translate: TranslateService,\r\n    public confirmationService: ConfirmationService\r\n  ) {}\r\n}\r\n","import { Spr_id_values_ot } from '../model/spr_id_values_ot';\nimport { FormGroup } from '@angular/forms';\nimport { Component, ViewChild } from '@angular/core';\nimport { FilterMetadata } from 'primeng/api';\nimport { Table, TableLazyLoadEvent } from 'primeng/table';\nimport { Spr_paging_ot } from '../model/spr_paging_ot';\nimport { CommonFormServices } from './common.form.services';\nimport { Spr_key_values_ot } from '../model/spr_key_values_ot';\nimport { ExtendedSearchParam } from '../model/extended-search';\nimport { ExtendedSearchCondition, ExtendedSearchUpperLower } from '../enums/extended-search';\n\nexport const BROWSE_SEARCH_DATA_KEY = 'browseSearchData';\n\ninterface BrowseSearchData {\n  url: string;\n  paramsObj: Record<string, unknown>;\n  extendedParams: ExtendedSearchParam[];\n  searchFormValues: Record<string, unknown>;\n  first: number;\n  pageSize: number;\n  sortField: string;\n  order: number;\n}\n\n@Component({ template: '' })\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport abstract class BaseBrowseForm<T> {\n  public static DEFAULT_ROWS_TO_SHOW = 20;\n\n  keepFilters: boolean;\n  data: T[];\n  totalRecords: number;\n  rowsPerPageOptions = [20, 50, 100];\n  showRows = this.getDefaultRowsToShow();\n  searchForm: FormGroup = new FormGroup({});\n  useExtendedSearchParams = false;\n\n  @ViewChild(Table, { static: true }) dataTableComponent: Table;\n\n  constructor(protected commonFormServices: CommonFormServices) {\n    this.keepFilters = !!this.commonFormServices?.router?.getCurrentNavigation()?.extras?.state?.keepFilters;\n    this.restoreOrClearFilters();\n  }\n\n  static getSortOrder(sortField: string, order: number, defaultSort: string): string {\n    let orderClause: string = defaultSort;\n    if (sortField) {\n      orderClause = sortField + (order === 1 ? ' ASC' : ' DESC');\n    }\n    return orderClause;\n  }\n\n  static getPagingParams(\n    first: number,\n    pageSize: number,\n    sortField: string,\n    order: number,\n    defaultSort: string\n  ): Spr_paging_ot {\n    return new Spr_paging_ot(null, first, pageSize, BaseBrowseForm.getSortOrder(sortField, order, defaultSort));\n  }\n\n  protected abstract load(\n    first: number,\n    pageSize: number,\n    sortField: string,\n    order: number,\n    params: Map<string, unknown>\n  ): void;\n\n  protected abstract load(\n    first: number,\n    pageSize: number,\n    sortField: string,\n    order: number,\n    params: Map<string, unknown>,\n    extendedParams?: ExtendedSearchParam[]\n  ): void;\n\n  loadDataLazy(event: TableLazyLoadEvent): void {\n    this.doLoad(\n      event.first,\n      event.rows,\n      typeof event.sortField === 'string' ? event.sortField : undefined,\n      event.sortOrder,\n      this.getSearchParamMap(event),\n      this.useExtendedSearchParams ? this.getExtendedSearchParams(event) : undefined\n    );\n  }\n\n  search(table: Table, resetPage = true): void {\n    table.first = resetPage ? 0 : table.first;\n    this.doLoad(\n      table.first,\n      table.rows,\n      typeof table.sortField === 'string' ? table.sortField : undefined,\n      table.sortOrder,\n      this.getSearchParamMap(table),\n      this.useExtendedSearchParams ? this.getExtendedSearchParams(table) : undefined\n    );\n  }\n\n  protected doLoad(\n    first: number,\n    pageSize: number,\n    sortField: string,\n    order: number,\n    params: Map<string, unknown>,\n    extendedParams?: ExtendedSearchParam[]\n  ): void {\n    if (this.keepFilters) {\n      const searchData = this.getSearchDataFromSession();\n      if (searchData) {\n        if (typeof searchData.first === 'number') {\n          first = searchData.first;\n          if (this.dataTableComponent) {\n            this.dataTableComponent.first = searchData.first;\n          }\n        }\n        if (typeof searchData.pageSize === 'number') {\n          this.showRows = searchData.pageSize;\n        }\n        if (typeof searchData.sortField === 'string') {\n          sortField = searchData.sortField;\n        }\n        if (typeof searchData.order === 'number') {\n          order = searchData.order;\n        }\n        if (searchData.paramsObj) {\n          params = new Map(Object.entries(searchData.paramsObj));\n        }\n        if (searchData.extendedParams) {\n          extendedParams = searchData.extendedParams;\n        }\n        this.loadSearchDataIntoSearchForm();\n      }\n      this.keepFilters = false;\n    }\n    this.saveSearchDataToSession(first, pageSize, sortField, order, params, extendedParams);\n    if (this.useExtendedSearchParams) {\n      this.load(first, pageSize, sortField, order, params, extendedParams);\n    } else {\n      this.load(first, pageSize, sortField, order, params);\n    }\n  }\n\n  reload(resetPage = true): void {\n    this.search(this.dataTableComponent, resetPage);\n  }\n\n  protected getFilterParamNameMapping(): Record<string, string> {\n    return {};\n  }\n\n  protected restoreOrClearFilters(): void {\n    if (this.keepFilters) {\n      const searchData = this.getSearchDataFromSession();\n      if (searchData) {\n        if (typeof searchData.pageSize === 'number') {\n          this.showRows = searchData.pageSize;\n        }\n      }\n    } else {\n      this.removeSearchDataFromSession();\n    }\n  }\n\n  private formatSearchParamName(fieldName: string): string {\n    return this.getFilterParamNameMapping()[fieldName] || 'p_' + fieldName;\n  }\n\n  private addItemToSearchParamMap(map: Map<string, unknown>, filterName: string, value: unknown): Map<string, unknown> {\n    return map.set(this.formatSearchParamName(filterName), this.formatValue(value));\n  }\n\n  /**\n   * Pridėtas ELSE, jei gauti duomenys yra ne ExtendedSearchParam tipo,\n   * ELSE sąlygoje sukuriamas ExtendedSearchParam objektas ir pridedamas į\n   * paramsArray masyvą.\n   * Pridėtas key parametra gauti controls`o pavadinimą.\n   */\n  private addItemToExtendedSearchParams(\n    paramsArray: ExtendedSearchParam[],\n    value: ExtendedSearchParam,\n    key?: string\n  ): void {\n    if (value instanceof Object && value.paramName && value.paramValue) {\n      paramsArray.push(value);\n    } else {\n      paramsArray.push({\n        paramName: key,\n        paramValue: {\n          condition: ExtendedSearchCondition.Equals,\n          value: this.searchForm.controls[key]?.value as string,\n          upperLower: ExtendedSearchUpperLower.Regular,\n        },\n      });\n    }\n  }\n\n  /**\n   * Buvo pridėtas tikrinimas ar this.searchForm.controls turi duomenis,\n   * jei this.searchForm.controls turi duomenis, taip pat tikrina ar gauti duomenys\n   * nėra ExtendedSearchParam tipo, jei sąlyga pasitvirtina duomenys pridedami į PARAMS masyvą.\n   */\n  protected getSearchParamMap(event: TableLazyLoadEvent | Table): Map<string, unknown> {\n    const result = new Map<string, unknown>();\n\n    if (event && event.filters) {\n      const filterFields = Object.getOwnPropertyNames(event.filters);\n    }\n\n    if (this.searchForm) {\n      Object.keys(this.searchForm.controls).forEach((key) => {\n        if (\n          !this.searchForm.controls[key].value === false &&\n          !!(this.searchForm.controls[key].value as ExtendedSearchParam).paramValue === false\n        ) {\n          this.addItemToSearchParamMap(result, key, `${this.searchForm.controls[key].value as string}`);\n        }\n      });\n    }\n    return result;\n  }\n\n  protected getExtendedSearchParams(event: TableLazyLoadEvent | Table): ExtendedSearchParam[] {\n    const result: ExtendedSearchParam[] = [];\n    if (event && event.filters) {\n      const filterFields = Object.getOwnPropertyNames(event.filters);\n\n      filterFields.forEach((filterName) => {\n        if (Array.isArray(event.filters[filterName])) {\n          const filters = event.filters[filterName] as FilterMetadata[];\n          filters.forEach((filter) => {\n            if (filter.value) {\n              this.addItemToExtendedSearchParams(result, filter.value as ExtendedSearchParam);\n            }\n          });\n        } else {\n          const filter = event.filters[filterName] as FilterMetadata;\n\n          if (filter.value) {\n            this.addItemToExtendedSearchParams(result, filter.value as ExtendedSearchParam);\n          }\n        }\n      });\n    }\n    if (this.searchForm) {\n      Object.keys(this.searchForm.controls).forEach((key) => {\n        if (this.searchForm.controls[key]?.value) {\n          this.addItemToExtendedSearchParams(result, this.searchForm.controls[key]?.value as ExtendedSearchParam, key);\n        }\n      });\n    }\n    return result;\n  }\n\n  instanceOfIdValuesOt(object: unknown): object is Spr_id_values_ot {\n    return (\n      object instanceof Object &&\n      Object.prototype.hasOwnProperty.call(object, 'id') &&\n      Object.prototype.hasOwnProperty.call(object, 'key_value')\n    );\n  }\n\n  instanceOfKeyValuesOt(object: unknown): object is Spr_key_values_ot {\n    return (\n      object instanceof Object &&\n      Object.prototype.hasOwnProperty.call(object, 'code') &&\n      Object.prototype.hasOwnProperty.call(object, 'key_value')\n    );\n  }\n\n  protected formatValue(value: unknown): unknown {\n    if (value instanceof Date) {\n      return value.toISOString();\n    } else if (this.instanceOfIdValuesOt(value)) {\n      return value.id;\n    } else if (this.instanceOfKeyValuesOt(value)) {\n      return value.code;\n    } else if (value instanceof Array) {\n      return value.map((val) => this.formatValue(val));\n    } else if (value === null || Object.keys(value).length === 0) {\n      return undefined;\n    }\n    return value;\n  }\n\n  protected getSortOrder(sortField: string, order: number, defaultSort: string): string {\n    return BaseBrowseForm.getSortOrder(sortField, order, defaultSort);\n  }\n\n  protected getPagingParams(\n    first: number,\n    pageSize: number,\n    sortField: string,\n    order: number,\n    defaultSort: string\n  ): Spr_paging_ot {\n    return BaseBrowseForm.getPagingParams(first, pageSize, sortField, order, defaultSort);\n  }\n\n  protected getDefaultRowsToShow(): number {\n    return BaseBrowseForm.DEFAULT_ROWS_TO_SHOW;\n  }\n\n  protected abstract deleteRecord(recordId: string): void;\n\n  protected deleteRecordWithConfirmation(\n    recordId: string,\n    message: string = 'common.message.deleteConfirmationMsg',\n    translateMessage: boolean = true\n  ): void {\n    const showConfirmationMessage = (confirmationMessage: string): void => {\n      this.commonFormServices.confirmationService.confirm({\n        message: confirmationMessage,\n        accept: () => {\n          this.deleteRecord(recordId);\n        },\n      });\n    };\n    if (translateMessage) {\n      this.commonFormServices.translate.get(message).subscribe((translation: string) => {\n        showConfirmationMessage(translation);\n      });\n    } else {\n      showConfirmationMessage(message);\n    }\n  }\n\n  protected saveSearchDataToSession(\n    first: number,\n    pageSize: number,\n    sortField: string,\n    order: number,\n    params: Map<string, unknown>,\n    extendedParams?: ExtendedSearchParam[]\n  ): void {\n    const browseSearchData: BrowseSearchData = {\n      url: this.commonFormServices.router.url,\n      paramsObj: Object.fromEntries(params),\n      extendedParams,\n      searchFormValues: Object.keys(this.searchForm.controls)\n        .filter((controlName) => this.searchForm.controls[controlName]?.value)\n        .reduce(\n          (valuesObj, controlName) => ({\n            ...valuesObj,\n            [controlName]: this.searchForm.controls[controlName].value as unknown,\n          }),\n          {} as Record<string, unknown>\n        ),\n      first,\n      pageSize,\n      sortField,\n      order,\n    };\n    sessionStorage.setItem(BROWSE_SEARCH_DATA_KEY, JSON.stringify(browseSearchData));\n  }\n\n  protected getSearchDataFromSession(): BrowseSearchData | null {\n    const searchData = JSON.parse(sessionStorage.getItem(BROWSE_SEARCH_DATA_KEY)) as BrowseSearchData;\n    if (searchData) {\n      if (searchData?.url === this.commonFormServices.router.url) {\n        return searchData;\n      }\n    }\n    return null;\n  }\n\n  protected removeSearchDataFromSession(): void {\n    sessionStorage.removeItem(BROWSE_SEARCH_DATA_KEY);\n  }\n\n  protected loadSearchDataIntoSearchForm(): void {\n    const searchData = this.getSearchDataFromSession();\n    if (searchData?.searchFormValues) {\n      Object.keys(searchData.searchFormValues).forEach((controlName) => {\n        if (this.searchForm.controls[controlName]) {\n          this.searchForm.controls[controlName].setValue(searchData.searchFormValues[controlName]);\n        }\n      });\n    }\n  }\n}\n","import { BaseBrowseForm } from '../form/base.browse.form';\r\nimport { Spr_id_values_ot } from '../model/spr_id_values_ot';\r\nimport { Spr_key_values_ot } from '../model/spr_key_values_ot';\r\nimport { Spr_paging_ot } from '../model/spr_paging_ot';\r\n\r\nexport const SPEC_CHARS = '@./$!%*?&#_-';\r\nexport const PWD_PATTERN = '(?=^.{12,}$)(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[-@.$/!%*?&#_.])(?!.*\\\\s).*$';\r\n\r\nexport function escapeRegExp(str: string): string {\r\n  return str.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\r\n}\r\n\r\nexport function toKeyValues(codes: string[]): Spr_key_values_ot[] {\r\n  if (Array.isArray(codes)) {\r\n    return codes.map((code) => ({ code } as Spr_key_values_ot));\r\n  }\r\n  return [];\r\n}\r\n\r\nexport function fromKeyValues(keyValues: Spr_key_values_ot[]): string[] {\r\n  if (Array.isArray(keyValues)) {\r\n    return keyValues.map((keyValue) => keyValue.code);\r\n  }\r\n  return [];\r\n}\r\n\r\nexport function convertKeyValues(keyValues: Spr_key_values_ot[]): { value: string; label: string }[] {\r\n  if (Array.isArray(keyValues)) {\r\n    return keyValues.map((keyValue) => ({ value: keyValue.code, label: keyValue.key_value }));\r\n  }\r\n  return [];\r\n}\r\n\r\nexport function keyValuesToMap(keyValues: Spr_key_values_ot[]): Map<string, string> {\r\n  const result = new Map<string, string>();\r\n  keyValues.forEach((keyValue) => {\r\n    result.set(keyValue.code, keyValue.key_value);\r\n  });\r\n  return result;\r\n}\r\n\r\nconst Y = 'Y';\r\nconst N = 'N';\r\n\r\nexport function toBoolean(value: string): boolean {\r\n  return value === Y;\r\n}\r\n\r\nexport function fromBoolean(value: boolean): string {\r\n  return value ? Y : N;\r\n}\r\n\r\nexport function toRadioBtnIdVal(values: Spr_id_values_ot[]): number {\r\n  let result: number = null;\r\n  if (values) {\r\n    const value: Spr_id_values_ot = values.find((p) => p.key_value === Y);\r\n    if (value) {\r\n      result = value.id;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function fromRadioBtnIdVal(array: Spr_id_values_ot[], id: number): Spr_id_values_ot[] {\r\n  if (array) {\r\n    array.forEach((p) => {\r\n      p.key_value = p.id === id ? Y : N;\r\n    });\r\n  }\r\n  return array;\r\n}\r\n\r\nexport function toRadioBtnKeyVal(values: Spr_key_values_ot[]): string {\r\n  let result = '';\r\n  if (values) {\r\n    const value: Spr_key_values_ot = values.find((p) => p.key_value === Y);\r\n    if (value) {\r\n      result = value.code;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function fromRadioBtnKeyVal(array: Spr_key_values_ot[], code: string): Spr_key_values_ot[] {\r\n  if (array) {\r\n    array.forEach((p) => {\r\n      p.key_value = p.code === code ? Y : N;\r\n    });\r\n  }\r\n  return array;\r\n}\r\n\r\nexport function appendPagingParams(url: string, pagingParams: Spr_paging_ot): string {\r\n  if (!pagingParams) {\r\n    return url;\r\n  }\r\n  if (!pagingParams.page_size) {\r\n    pagingParams.page_size = BaseBrowseForm.DEFAULT_ROWS_TO_SHOW;\r\n  }\r\n  if (url.substring(url.length - 1) !== '?') {\r\n    url = url + '&';\r\n  }\r\n  url = `${url}page_size=${pagingParams.page_size}&skip_rows=${pagingParams.skip_rows}`;\r\n  if (pagingParams.order_clause) {\r\n    url = url + '&order_clause=' + pagingParams.order_clause;\r\n  }\r\n  return url;\r\n}\r\n\r\nexport function appendSearchParams(url: string, params: Map<string, unknown>): string {\r\n  if (params) {\r\n    params.forEach((value: unknown, key: string) => {\r\n      if (value && value !== '') {\r\n        url = `${url}&${key}=${value as string}`;\r\n      }\r\n    });\r\n  }\r\n  return url;\r\n}\r\n\r\nexport const deepEquals = (x: unknown, y: unknown): boolean => {\r\n  if (x === y) {\r\n    return true; // if both x and y are null or undefined and exactly the same\r\n  } else if (!(x instanceof Object) || !(y instanceof Object)) {\r\n    return false; // if they are not strictly equal, they both need to be Objects\r\n  } else if (x.constructor !== y.constructor) {\r\n    // they must have the exact same prototype chain, the closest we can do is\r\n    // test their constructor.\r\n    return false;\r\n  } else {\r\n    for (const p in x) {\r\n      if (!Object.prototype.hasOwnProperty.call(x, p)) {\r\n        continue; // other properties were tested using x.constructor === y.constructor\r\n      }\r\n      if (!Object.prototype.hasOwnProperty.call(y, p)) {\r\n        return false; // allows to compare x[ p ] and y[ p ] when set to undefined\r\n      }\r\n      if ((x as Record<string, unknown>)[p] === (y as Record<string, unknown>)[p]) {\r\n        continue; // if they have the same strict value or identity then they are equal\r\n      }\r\n      if (typeof (x as Record<string, unknown>)[p] !== 'object') {\r\n        return false; // Numbers, Strings, Functions, Booleans must be strictly equal\r\n      }\r\n      if (!deepEquals((x as Record<string, unknown>)[p], (y as Record<string, unknown>)[p])) {\r\n        return false;\r\n      }\r\n    }\r\n    for (const p in y) {\r\n      if (Object.prototype.hasOwnProperty.call(y, p) && !Object.prototype.hasOwnProperty.call(x, p)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n};\r\n","import { Spr_key_values_ot } from '../model/spr_key_values_ot';\r\nimport { LoginResult, WebSessionInfo } from '../model/common.api';\r\n\r\nexport const MULTI_TAB_KEY = 'multitab';\r\nexport const SESSION_KEY = 'session';\r\nexport const TERMS_KEY = 'terms';\r\n\r\nexport const SES_VALUE_TRUE = 'T';\r\nexport const SES_VALUE_FALSE = 'F';\r\n\r\nexport class AuthUtil {\r\n  private static copyFromSessionStorageToLocalStorage(keys: string[]): void {\r\n    keys.forEach((key) => {\r\n      const value = sessionStorage.getItem(key);\r\n      if (value !== null) {\r\n        localStorage.setItem(key, value);\r\n      }\r\n    });\r\n  }\r\n\r\n  public static setMultiTabSession(multiTabSession: boolean): void {\r\n    if (multiTabSession) {\r\n      if (localStorage.getItem(MULTI_TAB_KEY) !== SES_VALUE_TRUE) {\r\n        localStorage.setItem(MULTI_TAB_KEY, SES_VALUE_TRUE);\r\n        this.copyFromSessionStorageToLocalStorage([SESSION_KEY, TERMS_KEY]);\r\n      }\r\n    } else {\r\n      localStorage.setItem(MULTI_TAB_KEY, SES_VALUE_FALSE);\r\n      localStorage.removeItem(SESSION_KEY);\r\n      localStorage.removeItem(TERMS_KEY);\r\n    }\r\n  }\r\n\r\n  public static isMultiTabSession(): boolean {\r\n    return localStorage.getItem(MULTI_TAB_KEY) === SES_VALUE_TRUE;\r\n  }\r\n\r\n  public static clearSessionStorage(): void {\r\n    if (AuthUtil.isMultiTabSession()) {\r\n      localStorage.removeItem(SESSION_KEY);\r\n      localStorage.removeItem(TERMS_KEY);\r\n    }\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  public static getJWTFromSession(): string {\r\n    const loginResult = AuthUtil.getLoginResult();\r\n    return loginResult ? loginResult.token : null;\r\n  }\r\n\r\n  public static getSessionInfo(): WebSessionInfo {\r\n    const loginResult = AuthUtil.getLoginResult();\r\n    return loginResult ? loginResult.session : null;\r\n  }\r\n\r\n  public static updateSessionInfo(session: WebSessionInfo): void {\r\n    const loginResult = AuthUtil.getLoginResult();\r\n    loginResult.session = session;\r\n    if (AuthUtil.isMultiTabSession()) {\r\n      localStorage.setItem(SESSION_KEY, JSON.stringify(loginResult));\r\n    } else {\r\n      sessionStorage.setItem(SESSION_KEY, JSON.stringify(loginResult));\r\n    }\r\n  }\r\n\r\n  public static getLoginResult(): LoginResult<WebSessionInfo> {\r\n    const sessionData = AuthUtil.isMultiTabSession()\r\n      ? localStorage.getItem(SESSION_KEY)\r\n      : sessionStorage.getItem(SESSION_KEY);\r\n    return sessionData ? (JSON.parse(sessionData) as LoginResult<WebSessionInfo>) : null;\r\n  }\r\n\r\n  public static setLoginResult(loginResult: LoginResult<WebSessionInfo>): void {\r\n    if (AuthUtil.isMultiTabSession()) {\r\n      localStorage.setItem(SESSION_KEY, JSON.stringify(loginResult));\r\n    } else {\r\n      sessionStorage.setItem(SESSION_KEY, JSON.stringify(loginResult));\r\n    }\r\n  }\r\n\r\n  public static isLoggedIn(): boolean {\r\n    return this.getLoginResult() != null;\r\n  }\r\n\r\n  public static isTermsAccepted(): boolean {\r\n    const termsOfUse = JSON.parse(\r\n      AuthUtil.isMultiTabSession() ? localStorage.getItem(TERMS_KEY) : sessionStorage.getItem(TERMS_KEY)\r\n    ) as Spr_key_values_ot;\r\n    return termsOfUse && (termsOfUse.code === 'Y' || termsOfUse.code === SES_VALUE_TRUE);\r\n  }\r\n\r\n  public static setTermsAccepted(accept: boolean): void {\r\n    const terms: Spr_key_values_ot = {\r\n      code: accept ? SES_VALUE_TRUE : SES_VALUE_FALSE,\r\n      key_value: null,\r\n      display_text: null,\r\n    };\r\n    const termsString = JSON.stringify(terms);\r\n    if (AuthUtil.isMultiTabSession()) {\r\n      localStorage.setItem(TERMS_KEY, termsString);\r\n    } else {\r\n      sessionStorage.setItem(TERMS_KEY, termsString);\r\n    }\r\n  }\r\n\r\n  public static getRoleCode(): string {\r\n    const loginResult = AuthUtil.getLoginResult();\r\n    return loginResult ? loginResult.session.roleCode : null;\r\n  }\r\n\r\n  public static getRoleId(): number {\r\n    const loginResult = AuthUtil.getLoginResult();\r\n    return loginResult ? loginResult.session.roleId : null;\r\n  }\r\n\r\n  public static getRoleName(): string {\r\n    const loginResult = AuthUtil.getLoginResult();\r\n    return loginResult ? loginResult.session.roleName : null;\r\n  }\r\n\r\n  public static getOrgId(): number {\r\n    const loginResult = AuthUtil.getLoginResult();\r\n    return loginResult ? loginResult.session.orgId : null;\r\n  }\r\n\r\n  public static getOrgName(): string {\r\n    const loginResult = AuthUtil.getLoginResult();\r\n    return loginResult ? loginResult.session.orgName : null;\r\n  }\r\n\r\n  public static getLanguage(): string {\r\n    const loginResult = AuthUtil.getLoginResult();\r\n    return loginResult ? loginResult.session.language : null;\r\n  }\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { WebSessionInfo } from '../model/common.api';\r\n\r\nexport class AuthEvent {\r\n  public static readonly AUTH_EVENT_LOGIN = 'LOGIN';\r\n  public static readonly AUTH_EVENT_LOGOUT = 'LOGOUT';\r\n  public static readonly AUTH_EVENT_NO_AUTH = 'NO_AUTH';\r\n  public static readonly AUTH_EVENT_401 = '401';\r\n  public static readonly AUTH_EVENT_OTHER_USER = 'OTHER_USER';\r\n  public static readonly AUTH_EVENT_UPDATE = 'UPDATE';\r\n\r\n  public static isUnauthError = false;\r\n\r\n  public static userLoggedIn: Subject<AuthEvent> = new Subject();\r\n\r\n  constructor(\r\n    public userLoggedIn: boolean,\r\n    public session: WebSessionInfo,\r\n    public type: string,\r\n    public regStatus?: string,\r\n    public returnUrl?: string\r\n  ) {}\r\n}\r\n","import { Injectable, isDevMode } from '@angular/core';\r\n\r\nimport { Logger } from './logger.service';\r\n\r\nconst noop = (): undefined => undefined;\r\n\r\n@Injectable()\r\nexport class ConsoleLoggerService implements Logger {\r\n  get debug(): CallableFunction {\r\n    if (isDevMode()) {\r\n      return console.debug.bind(console);\r\n    } else {\r\n      return noop;\r\n    }\r\n  }\r\n\r\n  get info(): CallableFunction {\r\n    return console.info.bind(console);\r\n  }\r\n\r\n  get warn(): CallableFunction {\r\n    return console.warn.bind(console);\r\n  }\r\n\r\n  get error(): CallableFunction {\r\n    return console.error.bind(console);\r\n  }\r\n}\r\n","import { Logger } from './logger.service';\r\nimport { ConsoleLoggerService } from './console-logger.service';\r\n\r\nexport class LoggerFactory {\r\n  public static getLogger(): Logger {\r\n    return new ConsoleLoggerService();\r\n  }\r\n}\r\n","import { S2Message } from '../model/common.api';\r\n\r\nexport class S2Error extends Error {\r\n  constructor(public messages: S2Message[]) {\r\n    super();\r\n    this.name = S2Error.name;\r\n    Object.setPrototypeOf(this, S2Error.prototype);\r\n  }\r\n}\r\n","export class ServerError extends Error {\r\n\r\n    constructor( public uuid: string ) {\r\n        super();\r\n        this.name = ServerError.name;\r\n        Object.setPrototypeOf(this, ServerError.prototype);\r\n    }\r\n}\r\n","export class UnauthorizedError extends Error {\r\n\r\n    constructor() {\r\n        super();\r\n        this.name = UnauthorizedError.name;\r\n        Object.setPrototypeOf(this, UnauthorizedError.prototype);\r\n    }\r\n}\r\n","export class ServerUnavailableError extends Error {\n  constructor() {\n    super();\n    this.name = ServerUnavailableError.name;\n    Object.setPrototypeOf(this, ServerUnavailableError.prototype);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ClientSideError } from '../model/common.api';\r\n\r\n@Injectable()\r\nexport abstract class ClientLogService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    logClientError(clientSideError: ClientSideError): Observable<void> {\r\n        return this.http.post<void>(this.getLogServiceApiUrl(), clientSideError);\r\n    }\r\n\r\n    abstract getLogServiceApiUrl(): string;\r\n}\r\n","import { AuthUtil } from './../auth/auth.util';\nimport { DatePipe } from '@angular/common';\nimport { ClientLogService } from './../service/client-log.service';\nimport { ClientSideError } from '../model/common.api';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthEvent } from '../auth/auth.event';\nimport { LoggerFactory } from '../log/logger.factory';\nimport { AppMessages } from '../message/app.messages';\nimport { S2Error } from './s2error';\nimport { ServerError } from './servererror';\nimport { UnauthorizedError } from './unauthorized';\nimport { v4 as uuid } from 'uuid';\nimport { ServerUnavailableError } from './server-unavailable-error';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\nexport class AppErrorHandler implements ErrorHandler {\n  log = LoggerFactory.getLogger();\n\n  logFrequencyPerMinute = 10;\n  logTimeArray: number[] = [];\n\n  constructor(\n    protected appMessages: AppMessages,\n    protected translate: TranslateService,\n    protected clientLogService: ClientLogService,\n    protected datePipe: DatePipe\n  ) {}\n\n  handleError(error: Error): void {\n    const currentDateString = this.datePipe.transform(new Date(), 'yyyy-MM-dd HH:mm:ss');\n    if (error instanceof S2Error) {\n      error.messages.forEach((msg) => {\n        if (msg.code) {\n          this.translate\n            .get(msg.code, {\n              param1: msg.param1,\n              param2: msg.param2,\n              param3: msg.param3,\n              param4: msg.param4,\n              param5: msg.param5,\n            })\n            .subscribe((translation: string) => {\n              this.showMessage(translation, msg.severity);\n            });\n        } else {\n          this.showMessage(msg.default_text, msg.severity);\n        }\n      });\n      //Resolver do not throw UnauthorizedError instance, why we have to chack message text\n    } else if (error instanceof UnauthorizedError || error.message.includes('UnauthorizedError')) {\n      AuthEvent.userLoggedIn.next({\n        userLoggedIn: false,\n        session: null,\n        type: AuthEvent.AUTH_EVENT_401,\n      });\n    } else if (error instanceof ServerError) {\n      this.translate\n        .get('common.error.unexpectedWithId', { errorID: `${error.uuid} API ${currentDateString} ` })\n        .subscribe((translation: string) => this.appMessages.showError('', translation));\n      this.log.error('Server error:' + error.uuid);\n    } else if (error instanceof ServerUnavailableError) {\n      this.translate\n        .get('common.error.serverUnavailableError', { dateTimeTxt: currentDateString })\n        .subscribe((translation: string) => this.appMessages.showError('', translation));\n    } else {\n      if (AuthUtil.isLoggedIn()) {\n        const errorId = uuid();\n        // check if error is sending not more than 10 time per minute\n        if (!this.checkLogFrequencyLimit()) {\n          this.clientLogService.logClientError(this.formatClientError(error, errorId)).subscribe(() => {\n            this.translate\n              .get('common.error.unexpectedWithId', {\n                errorID: `${errorId} ${currentDateString} `,\n              })\n              .subscribe((translation: string) => this.appMessages.showError('', translation));\n          });\n        }\n      } else {\n        this.translate\n          .get('common.error.unexpected')\n          .subscribe((translation: string) => this.appMessages.showError('', `${translation}`));\n      }\n      this.log.error('Unhandled error has occured:\\n', error);\n    }\n  }\n\n  protected showMessage(text: string, severity: string): void {\n    if (severity === 'E') {\n      this.appMessages.showError('', text);\n    }\n    if (severity === 'W') {\n      this.appMessages.showWarning('', text);\n    }\n  }\n\n  private formatClientError(error: Error, errorId: string): ClientSideError {\n    const clientSideError = {} as ClientSideError;\n    clientSideError.errorCode = errorId;\n    clientSideError.clientErrorTime = this.datePipe.transform(new Date(), 'yyyy-MM-dd HH:mm:ss');\n\n    if (error instanceof HttpErrorResponse) {\n      clientSideError.errorMessage = error.message;\n    } else {\n      clientSideError.errorMessage = error.stack;\n    }\n    return clientSideError;\n  }\n\n  private checkLogFrequencyLimit(): boolean {\n    let isLogToOften = false;\n    let isFrequencyCheckRequired = false;\n    if (this.logTimeArray.length > this.logFrequencyPerMinute - 1) {\n      this.logTimeArray.shift();\n      isFrequencyCheckRequired = true;\n    }\n    this.logTimeArray.push(Date.now());\n\n    if (isFrequencyCheckRequired) {\n      if ((this.logTimeArray[this.logTimeArray.length - 1] - this.logTimeArray[0]) / 60000 < 1) {\n        isLogToOften = true;\n      }\n    }\n\n    return isLogToOften;\n  }\n}\n\nexport const appErrorHandler = {\n  provide: ErrorHandler,\n  useClass: AppErrorHandler,\n};\n","import { TranslateService } from '@ngx-translate/core';\r\n\r\nexport class MessageResolver {\r\n  private static readonly ERROR_KEY_PREFIX = 'common.error';\r\n\r\n  /**\r\n   * Jeigu fielde per [errorDefs] nurodyti nestandartiniai validacijos pranešimai, tai pirmiausia naudojame juos:\r\n   */\r\n  private static getErrorCodePrefix(key: string, customErrors: Record<string, string>): string {\r\n    return customErrors?.[key] || MessageResolver.ERROR_KEY_PREFIX;\r\n  }\r\n\r\n  static resolveError(\r\n    translate: TranslateService,\r\n    errors: Record<string, unknown>,\r\n    customErrors: Record<string, string>,\r\n    fullErrorCode = false\r\n  ): string[] {\r\n    const rez: string[] = [];\r\n    // jeigu field turi validacijos klaidų:\r\n    if (errors) {\r\n      // ištraukiame iš validacijos rezultatų objekto klaidų kodus:\r\n\r\n      const errorKeys = Object.keys(errors);\r\n      errorKeys.forEach((key) => {\r\n        let prefix = '';\r\n        if (!fullErrorCode) {\r\n          prefix = MessageResolver.getErrorCodePrefix(key, customErrors) + '.';\r\n        }\r\n        // tada atliekame vertimą per servisą:\r\n\r\n        rez.push(translate.instant(prefix + key, errors[key]) as string);\r\n      });\r\n    }\r\n    return rez;\r\n  }\r\n\r\n  static resolveErrorToString(\r\n    translate: TranslateService,\r\n    errors: Record<string, unknown>,\r\n    customErrors: Record<string, string>,\r\n    fullErrorCode = false\r\n  ): string {\r\n    let errorMessage = '';\r\n    const messages = MessageResolver.resolveError(translate, errors, customErrors, fullErrorCode);\r\n    messages.forEach((msg, idx) => {\r\n      errorMessage += msg;\r\n      if (idx < messages.length - 1) {\r\n        errorMessage += '. ';\r\n      }\r\n    });\r\n    return errorMessage;\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { Observable, Observer, Subject, auditTime, takeUntil } from 'rxjs';\nimport { CanComponentDeactivate } from '../auth/can-deactivate.guard';\nimport { S2Error } from '../error/s2error';\nimport { LoggerFactory } from '../log/logger.factory';\nimport { S2Message, S2ViolatedConstraint } from '../model/common.api';\nimport { MessageResolver } from '../ui/field/validation/message.resolver';\nimport { CommonFormServices } from './common.form.services';\n\nexport const EDIT_FORM_DATA_KEY = 'editFormValues';\n\ninterface EditFormData<T> {\n  url: string;\n  actionType: string;\n  data: T;\n}\n\n/**\n * @deprecated since 16.0.0\n */\n@Component({ template: '<p></p>' })\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport abstract class DeprecatedBaseEditForm<T> implements OnInit, OnDestroy, CanComponentDeactivate {\n  static readonly EDIT_FORM_DATA_KEY = 'editFormValues';\n  public readonly destroy$: Subject<void> = new Subject();\n  public static formSavedSuccessSubject: Subject<boolean> = new Subject();\n  log = LoggerFactory.getLogger();\n  formDataLoaded = false;\n  initialData: T;\n  data: T;\n  form: FormGroup;\n  protected id: string;\n  protected actionType: string;\n  protected dirty = false;\n  protected saved = false;\n  newRecordMode = true;\n\n  protected abstract buildForm(formBuilder: FormBuilder): void;\n  protected abstract doSave(value: T): void | Observable<T>;\n  protected abstract doLoad(id: string, actionType?: string): void | Observable<T>;\n  protected abstract setData(data: T): void;\n  protected abstract getData(): T;\n\n  constructor(\n    protected formBuilder: FormBuilder,\n    protected commonFormServices: CommonFormServices,\n    protected activatedRoute?: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.buildForm(this.formBuilder);\n    if (this.isRestoreUnsavedDataEnabled) {\n      this.form.valueChanges.pipe(takeUntil(this.destroy$), auditTime(200)).subscribe(() => {\n        this.saveFormDataToLS();\n      });\n    }\n\n    if (this.activatedRoute) {\n      this.activatedRoute.queryParams.subscribe((queryParam) => {\n        if (queryParam.actionType !== undefined) {\n          this.actionType = queryParam.actionType as string;\n        } else {\n          this.actionType = null;\n        }\n      });\n      this.activatedRoute.params.subscribe((params) => {\n        this.id = params.id as string;\n        this.formDataLoaded = false;\n        if (this.id && this.id !== 'new') {\n          if (this.isRestoreUnsavedDataEnabled && this.getFormDataFromLS()) {\n            this.loadFormDataFromLSWithConfirmation(true);\n          } else {\n            this.executeDoLoad(this.id, this.actionType);\n          }\n        } else if (this.id === 'new') {\n          this.initialData = this.copyObject(this.getData());\n          this.setFormState(null);\n          this.loadFormDataFromLSWithConfirmation();\n        } else if (this.forceDoLoad()) {\n          this.executeDoLoad(null, this.actionType);\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n    this.removeFormDataFromLS();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onSubmit(event: Event): void {\n    this.form.markAllAsTouched();\n    this.commonFormServices.appMessages.clearMessages();\n    if (this.form.valid) {\n      this.executeDoSave(this.getData());\n    } else {\n      this.log.debug(this.form.errors);\n      if (this.form.errors) {\n        this.commonFormServices.appMessages.showError(\n          '',\n          MessageResolver.resolveErrorToString(this.commonFormServices.translate, this.form.errors, null, true)\n        );\n      } else {\n        this.commonFormServices.translate\n          .get('common.message.correctValidationErrors')\n          .subscribe((translation: string) => {\n            this.commonFormServices.appMessages.showError('', translation, 'VALIDATION');\n          });\n      }\n    }\n  }\n\n  canDeactivate(): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.hasDataChanged()) {\n      return new Observable((observer: Observer<boolean>) => {\n        this.commonFormServices.confirmationService.confirm({\n          message: this.commonFormServices.translate.instant('common.message.discardChanges') as string,\n          icon: 'fa fa-question-circle',\n          accept: () => {\n            this.removeFormDataFromLS();\n            observer.next(true);\n            observer.complete();\n          },\n          reject: () => {\n            observer.next(false);\n            observer.complete();\n          },\n        });\n      });\n    } else {\n      this.removeFormDataFromLS();\n      return true;\n    }\n  }\n\n  onChange(): void {\n    this.dirty = true;\n    this.saved = false;\n  }\n\n  doCancel(): void {\n    if (\n      this.isWarningEnabled &&\n      window.confirm(this.commonFormServices.translate.instant('common.message.discardChanges') as string)\n    ) {\n      this.executeDoLoad(this.id);\n    }\n  }\n\n  downloadFile(data: Blob, fileName: string): void {\n    const link = document.createElement('a');\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    if (link.download !== undefined) {\n      link.setAttribute('href', URL.createObjectURL(data));\n      link.setAttribute('download', fileName);\n      link.click();\n    }\n    document.body.removeChild(link);\n  }\n\n  public onSaveSuccess(data: T): void {\n    this.log.debug('onSaveSuccess');\n    this.commonFormServices.appMessages.showSuccess('', this.getSuccessMessage());\n    this.form.reset();\n    this.removeFormDataFromLS();\n    this.onLoadSuccess(data);\n    this.dirty = false;\n    this.saved = true;\n    if (this.isEventEmitEnabled) {\n      DeprecatedBaseEditForm.formSavedSuccessSubject.next(true);\n    }\n  }\n\n  protected getSuccessMessage(): string {\n    return this.commonFormServices.translate.instant('common.message.saveSuccess') as string;\n  }\n\n  protected setFormControlDisabled(controlName: string, disabled: boolean): void {\n    const control = this.form.controls[controlName];\n    if (disabled === true) {\n      control.disable();\n    } else {\n      control.enable();\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected setFormState(data: T): void {}\n\n  protected onLoadSuccess(data: T): void {\n    this.log.debug('onLoadSuccess');\n    this.newRecordMode = false;\n    this.setFormState(data);\n    this.setData(data);\n    this.initialData = this.copyObject(this.getData());\n    this.dirty = false;\n    this.formDataLoaded = true;\n  }\n\n  protected markFormFieldsPristine(): void {\n    Object.keys(this.form.controls).forEach((key) => {\n      this.form.controls[key].markAsPristine();\n      if (this.form.controls[key] instanceof FormGroup) {\n        Object.keys((this.form.controls[key] as FormGroup).controls).forEach((key2) => {\n          (this.form.controls[key] as FormGroup).controls[key2].markAsPristine();\n        });\n      }\n    });\n  }\n\n  protected get isWarningEnabled(): boolean {\n    return true;\n  }\n\n  protected get isEventEmitEnabled(): boolean {\n    return true;\n  }\n\n  protected get isRestoreUnsavedDataEnabled(): boolean {\n    return false;\n  }\n\n  protected copyObject(data: T): T {\n    return JSON.parse(this.stringifyJsonEmptyAsNulls(data)) as T;\n  }\n\n  protected stringifyJsonEmptyAsNulls(data: T): string | null {\n    return JSON.stringify(data, (key, value: string) => {\n      return value === '' ? null : value;\n    });\n  }\n\n  protected hasDataChanged(): boolean {\n    const initialData = JSON.stringify(this.initialData);\n    const newData = this.stringifyJsonEmptyAsNulls(this.getData());\n    return !this.saved && initialData !== newData;\n  }\n\n  protected forceDoLoad(): boolean {\n    return false;\n  }\n\n  backToBrowseForm(formUrl: string | string[], startAtRoot = true): void {\n    const navigationExtras: NavigationExtras = { state: { keepFilters: true } };\n    if (startAtRoot) {\n      if (typeof formUrl === 'string') {\n        formUrl = [`/${formUrl}`];\n      } else if (Array.isArray(formUrl)) {\n        formUrl = ['/', ...formUrl];\n      }\n    }\n    void this.commonFormServices.router.navigate(typeof formUrl === 'string' ? [formUrl] : formUrl, navigationExtras);\n  }\n\n  protected saveFormDataToLS(): void {\n    if (this.formDataLoaded) {\n      const formData: EditFormData<T> = {\n        url: this.commonFormServices.router.url,\n        actionType: this.actionType,\n        data: this.getData(),\n      };\n      localStorage.setItem(EDIT_FORM_DATA_KEY, JSON.stringify(formData));\n    }\n  }\n\n  protected getFormDataFromLS(): EditFormData<T> {\n    const formData = JSON.parse(localStorage.getItem(EDIT_FORM_DATA_KEY)) as EditFormData<T>;\n    if (formData) {\n      if (\n        formData.url === this.commonFormServices.router.url &&\n        formData.actionType === this.actionType &&\n        formData.data\n      ) {\n        return formData;\n      }\n      this.removeFormDataFromLS();\n    }\n    return null;\n  }\n\n  protected removeFormDataFromLS(): void {\n    localStorage.removeItem(EDIT_FORM_DATA_KEY);\n  }\n\n  protected loadFormDataFromLSWithConfirmation(\n    doLoadIfRejected = false,\n    dialogText = 'common.message.restoreUnsavedData',\n    translate = true\n  ): void {\n    if (this.isRestoreUnsavedDataEnabled) {\n      const formData = this.getFormDataFromLS();\n      if (formData?.data) {\n        if (translate) {\n          this.commonFormServices.translate.get(dialogText).subscribe((translation: string) => {\n            this.commonFormServices.confirmationService.confirm({\n              message: translation,\n              accept: () => {\n                this.setData(formData.data);\n                this.formDataLoaded = true;\n              },\n              reject: () => {\n                this.removeFormDataFromLS();\n                if (doLoadIfRejected) {\n                  this.executeDoLoad(this.id, this.actionType);\n                } else {\n                  this.formDataLoaded = true;\n                }\n              },\n            });\n          });\n        } else {\n          this.commonFormServices.confirmationService.confirm({\n            message: dialogText,\n            accept: () => {\n              this.setData(formData.data);\n            },\n            reject: this.removeFormDataFromLS.bind(this),\n          });\n        }\n      }\n    }\n  }\n\n  protected executeDoSave(data: T): void {\n    (this.doSave(data) as Observable<T>)?.subscribe({\n      next: (result) => {\n        this.onSaveSuccess(result);\n      },\n      error: (error) => {\n        let constraintMessages: S2Message[];\n        if (error instanceof S2Error) {\n          constraintMessages = error.messages?.filter((message) => message.key === 'db.table.uk.constraint');\n          if (constraintMessages?.length) {\n            const violatedConstraints: S2ViolatedConstraint[] = constraintMessages.map((message) => ({\n              name: message.item,\n              fields: message.params,\n            }));\n            this.handleConstraintsResult(violatedConstraints);\n          }\n        }\n        if (!constraintMessages?.length || !(error instanceof S2Error)) {\n          throw error;\n        }\n      },\n    });\n  }\n\n  protected executeDoLoad(id?: string, actionType?: string): void {\n    (this.doLoad(id, actionType) as Observable<T>)?.subscribe((result) => {\n      this.onLoadSuccess(result);\n    });\n  }\n\n  protected checkConstraints(\n    apiFunction: () => Observable<S2ViolatedConstraint[]>,\n    fields?: string[],\n    fieldControls?: Record<string, AbstractControl | string>\n  ): void {\n    apiFunction().subscribe((response) => {\n      this.handleConstraintsResult(response, fields, fieldControls);\n    });\n  }\n\n  protected handleConstraintsResult(\n    result: S2ViolatedConstraint[],\n    fields?: string[],\n    fieldControls?: Record<string, AbstractControl | string>\n  ): void {\n    result.forEach((constraint) => {\n      if (constraint.fields?.length) {\n        constraint.fields\n          .filter((field) => !fields || fields.includes(field))\n          .forEach((field) => {\n            const control =\n              fieldControls?.[field] && fieldControls?.[field] instanceof AbstractControl\n                ? (fieldControls?.[field] as AbstractControl)\n                : this.form.controls[field];\n            if (control) {\n              const errors = control.errors || {};\n              errors[constraint.name] = true;\n              control.setErrors(errors);\n            }\n          });\n      }\n    });\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, NavigationExtras } from '@angular/router';\nimport { Observable, Observer, Subject, auditTime, takeUntil } from 'rxjs';\nimport { CanComponentDeactivate } from '../auth/can-deactivate.guard';\nimport { S2Error } from '../error/s2error';\nimport { LoggerFactory } from '../log/logger.factory';\nimport { S2Message, S2ViolatedConstraint } from '../model/common.api';\nimport { MessageResolver } from '../ui/field/validation/message.resolver';\nimport { CommonFormServices } from './common.form.services';\n\ninterface EditFormData<T> {\n  url: string;\n  actionType: string;\n  data: T;\n}\n\n@Component({ template: '<p></p>' })\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport abstract class BaseEditForm<T> implements OnInit, OnDestroy, CanComponentDeactivate {\n  static readonly LS_KEY_EDIT_FORM_DATA = 'editFormValues';\n  public readonly destroy$: Subject<void> = new Subject();\n  public static formSavedSuccessSubject: Subject<boolean> = new Subject();\n  log = LoggerFactory.getLogger();\n  formDataLoaded = false;\n  initialData: T;\n  data: T;\n  abstract form: FormGroup;\n  protected id: string;\n  protected actionType: string;\n  protected dirty = false;\n  protected saved = false;\n  newRecordMode = true;\n\n  protected abstract doSave(value: T): void | Observable<T>;\n  protected abstract doLoad(id: string, actionType?: string): void | Observable<T>;\n  protected abstract setData(data: T): void;\n  protected abstract getData(): T;\n\n  constructor(protected commonFormServices: CommonFormServices, protected activatedRoute?: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    if (this.isRestoreUnsavedDataEnabled) {\n      this.form.valueChanges.pipe(takeUntil(this.destroy$), auditTime(200)).subscribe(() => {\n        this.saveFormDataToLS();\n      });\n    }\n\n    if (this.activatedRoute) {\n      this.activatedRoute.queryParams.subscribe((queryParam) => {\n        if (queryParam.actionType !== undefined) {\n          this.actionType = queryParam.actionType as string;\n        } else {\n          this.actionType = null;\n        }\n      });\n      this.activatedRoute.params.subscribe((params) => {\n        this.id = params.id as string;\n        this.formDataLoaded = false;\n        if (this.id && this.id !== 'new') {\n          if (this.isRestoreUnsavedDataEnabled && this.getFormDataFromLS()) {\n            this.loadFormDataFromLSWithConfirmation(true);\n          } else {\n            this.executeDoLoad(this.id, this.actionType);\n          }\n        } else if (this.id === 'new') {\n          this.initialData = this.copyObject(this.getData());\n          this.setFormState(null);\n          this.loadFormDataFromLSWithConfirmation();\n        } else if (this.forceDoLoad()) {\n          this.executeDoLoad(null, this.actionType);\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n    this.removeFormDataFromLS();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onSubmit(event: Event): void {\n    this.form.markAllAsTouched();\n    this.commonFormServices.appMessages.clearMessages();\n    if (this.form.valid) {\n      this.executeDoSave(this.getData());\n    } else {\n      this.log.debug(this.form.errors);\n      if (this.form.errors) {\n        this.commonFormServices.appMessages.showError(\n          '',\n          MessageResolver.resolveErrorToString(this.commonFormServices.translate, this.form.errors, null, true)\n        );\n      } else {\n        this.commonFormServices.translate\n          .get('common.message.correctValidationErrors')\n          .subscribe((translation: string) => {\n            this.commonFormServices.appMessages.showError('', translation, 'VALIDATION');\n          });\n      }\n    }\n  }\n\n  canDeactivate(): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.hasDataChanged()) {\n      return new Observable((observer: Observer<boolean>) => {\n        this.commonFormServices.confirmationService.confirm({\n          message: this.commonFormServices.translate.instant('common.message.discardChanges') as string,\n          icon: 'fa fa-question-circle',\n          accept: () => {\n            this.removeFormDataFromLS();\n            observer.next(true);\n            observer.complete();\n          },\n          reject: () => {\n            observer.next(false);\n            observer.complete();\n          },\n        });\n      });\n    } else {\n      this.removeFormDataFromLS();\n      return true;\n    }\n  }\n\n  onChange(): void {\n    this.dirty = true;\n    this.saved = false;\n  }\n\n  doCancel(): void {\n    if (\n      this.isWarningEnabled &&\n      window.confirm(this.commonFormServices.translate.instant('common.message.discardChanges') as string)\n    ) {\n      this.executeDoLoad(this.id);\n    }\n  }\n\n  downloadFile(data: Blob, fileName: string): void {\n    const link = document.createElement('a');\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    if (link.download !== undefined) {\n      link.setAttribute('href', URL.createObjectURL(data));\n      link.setAttribute('download', fileName);\n      link.click();\n    }\n    document.body.removeChild(link);\n  }\n\n  public onSaveSuccess(data: T): void {\n    this.log.debug('onSaveSuccess');\n    this.commonFormServices.appMessages.showSuccess('', this.getSuccessMessage());\n    this.form.reset();\n    this.removeFormDataFromLS();\n    this.onLoadSuccess(data);\n    this.dirty = false;\n    this.saved = true;\n    if (this.isEventEmitEnabled) {\n      BaseEditForm.formSavedSuccessSubject.next(true);\n    }\n  }\n\n  protected getSuccessMessage(): string {\n    return this.commonFormServices.translate.instant('common.message.saveSuccess') as string;\n  }\n\n  protected setFormControlDisabled(controlName: string, disabled: boolean): void {\n    const control = this.form.controls[controlName];\n    if (disabled === true) {\n      control.disable();\n    } else {\n      control.enable();\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  protected setFormState(data: T): void {}\n\n  protected onLoadSuccess(data: T): void {\n    this.log.debug('onLoadSuccess');\n    this.newRecordMode = false;\n    this.setFormState(data);\n    this.setData(data);\n    this.initialData = this.copyObject(this.getData());\n    this.dirty = false;\n    this.formDataLoaded = true;\n  }\n\n  protected markFormFieldsPristine(): void {\n    Object.keys(this.form.controls).forEach((key) => {\n      this.form.controls[key].markAsPristine();\n      if (this.form.controls[key] instanceof FormGroup) {\n        Object.keys((this.form.controls[key] as FormGroup).controls).forEach((key2) => {\n          (this.form.controls[key] as FormGroup).controls[key2].markAsPristine();\n        });\n      }\n    });\n  }\n\n  protected get isWarningEnabled(): boolean {\n    return true;\n  }\n\n  protected get isEventEmitEnabled(): boolean {\n    return true;\n  }\n\n  protected get isRestoreUnsavedDataEnabled(): boolean {\n    return false;\n  }\n\n  protected copyObject(data: T): T {\n    return JSON.parse(this.stringifyJsonEmptyAsNulls(data)) as T;\n  }\n\n  protected stringifyJsonEmptyAsNulls(data: T): string | null {\n    return JSON.stringify(data, (key, value: string) => {\n      return value === '' ? null : value;\n    });\n  }\n\n  protected hasDataChanged(): boolean {\n    const initialData = JSON.stringify(this.initialData);\n    const newData = this.stringifyJsonEmptyAsNulls(this.getData());\n    return !this.saved && initialData !== newData;\n  }\n\n  protected forceDoLoad(): boolean {\n    return false;\n  }\n\n  backToBrowseForm(formUrl: string | string[], startAtRoot = true): void {\n    const navigationExtras: NavigationExtras = { state: { keepFilters: true } };\n    if (startAtRoot) {\n      if (typeof formUrl === 'string') {\n        formUrl = [`/${formUrl}`];\n      } else if (Array.isArray(formUrl)) {\n        formUrl = ['/', ...formUrl];\n      }\n    }\n    void this.commonFormServices.router.navigate(typeof formUrl === 'string' ? [formUrl] : formUrl, navigationExtras);\n  }\n\n  protected saveFormDataToLS(): void {\n    if (this.formDataLoaded) {\n      const formData: EditFormData<T> = {\n        url: this.commonFormServices.router.url,\n        actionType: this.actionType,\n        data: this.getData(),\n      };\n      localStorage.setItem(BaseEditForm.LS_KEY_EDIT_FORM_DATA, JSON.stringify(formData));\n    }\n  }\n\n  protected getFormDataFromLS(): EditFormData<T> {\n    const formData = JSON.parse(localStorage.getItem(BaseEditForm.LS_KEY_EDIT_FORM_DATA)) as EditFormData<T>;\n    if (formData) {\n      if (\n        formData.url === this.commonFormServices.router.url &&\n        formData.actionType === this.actionType &&\n        formData.data\n      ) {\n        return formData;\n      }\n      this.removeFormDataFromLS();\n    }\n    return null;\n  }\n\n  protected removeFormDataFromLS(): void {\n    localStorage.removeItem(BaseEditForm.LS_KEY_EDIT_FORM_DATA);\n  }\n\n  protected loadFormDataFromLSWithConfirmation(\n    doLoadIfRejected = false,\n    dialogText = 'common.message.restoreUnsavedData',\n    translate = true\n  ): void {\n    if (this.isRestoreUnsavedDataEnabled) {\n      const formData = this.getFormDataFromLS();\n      if (formData?.data) {\n        if (translate) {\n          this.commonFormServices.translate.get(dialogText).subscribe((translation: string) => {\n            this.commonFormServices.confirmationService.confirm({\n              message: translation,\n              accept: () => {\n                this.setData(formData.data);\n                this.formDataLoaded = true;\n              },\n              reject: () => {\n                this.removeFormDataFromLS();\n                if (doLoadIfRejected) {\n                  this.executeDoLoad(this.id, this.actionType);\n                } else {\n                  this.formDataLoaded = true;\n                }\n              },\n            });\n          });\n        } else {\n          this.commonFormServices.confirmationService.confirm({\n            message: dialogText,\n            accept: () => {\n              this.setData(formData.data);\n            },\n            reject: this.removeFormDataFromLS.bind(this),\n          });\n        }\n      }\n    }\n  }\n\n  protected executeDoSave(data: T): void {\n    (this.doSave(data) as Observable<T>)?.subscribe({\n      next: (result) => {\n        this.onSaveSuccess(result);\n      },\n      error: (error) => {\n        let constraintMessages: S2Message[];\n        if (error instanceof S2Error) {\n          constraintMessages = error.messages?.filter((message) => message.key === 'db.table.uk.constraint');\n          if (constraintMessages?.length) {\n            const violatedConstraints: S2ViolatedConstraint[] = constraintMessages.map((message) => ({\n              name: message.item,\n              fields: message.params,\n            }));\n            this.handleConstraintsResult(violatedConstraints);\n          }\n        }\n        if (!constraintMessages?.length || !(error instanceof S2Error)) {\n          throw error;\n        }\n      },\n    });\n  }\n\n  protected executeDoLoad(id?: string, actionType?: string): void {\n    (this.doLoad(id, actionType) as Observable<T>)?.subscribe((result) => {\n      this.onLoadSuccess(result);\n    });\n  }\n\n  protected checkConstraints(\n    apiFunction: () => Observable<S2ViolatedConstraint[]>,\n    fields?: string[],\n    fieldControls?: Record<string, AbstractControl | string>\n  ): void {\n    apiFunction().subscribe((response) => {\n      this.handleConstraintsResult(response, fields, fieldControls);\n    });\n  }\n\n  protected handleConstraintsResult(\n    result: S2ViolatedConstraint[],\n    fields?: string[],\n    fieldControls?: Record<string, AbstractControl | string>\n  ): void {\n    result.forEach((constraint) => {\n      if (constraint.fields?.length) {\n        constraint.fields\n          .filter((field) => !fields || fields.includes(field))\n          .forEach((field) => {\n            const control =\n              fieldControls?.[field] && fieldControls?.[field] instanceof AbstractControl\n                ? (fieldControls?.[field] as AbstractControl)\n                : this.form.controls[field];\n            if (control) {\n              const errors = control.errors || {};\n              errors[constraint.name] = true;\n              control.setErrors(errors);\n            }\n          });\n      }\n    });\n  }\n}\n","import { WebSessionInfo } from './model/common.api';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AppMessages } from './message/app.messages';\r\nimport { Component, NgZone, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ActivationEnd, NavigationEnd, Router } from '@angular/router';\r\nimport { AuthEvent } from './auth/auth.event';\r\nimport { AuthUtil } from './auth/auth.util';\r\nimport { initLang, setLang } from './i18n/lang.util';\r\n\r\n@Component({ template: '' })\r\nexport abstract class BaseAppComponent<T extends WebSessionInfo> implements OnInit {\r\n  currentUser: T;\r\n  paramsLang: string;\r\n\r\n  constructor(\r\n    protected router: Router,\r\n    protected appMessages: AppMessages,\r\n    protected translate: TranslateService,\r\n    protected route: ActivatedRoute,\r\n    protected ngZone: NgZone\r\n  ) {\r\n    this.router.events.subscribe((event) => {\r\n      if (event instanceof ActivationEnd) {\r\n        this.paramsLang = event.snapshot.queryParams['lang'] as string;\r\n        if (this.paramsLang) {\r\n          setLang(this.translate, this.paramsLang);\r\n        }\r\n      }\r\n      initLang(this.translate);\r\n    });\r\n\r\n    AuthEvent.userLoggedIn.subscribe((res: AuthEvent) => {\r\n      if (res.type === AuthEvent.AUTH_EVENT_UPDATE) {\r\n        this.onUserInfoUpdate(res.session as T);\r\n      } else {\r\n        if (res.userLoggedIn) {\r\n          this.setUser();\r\n          this.onLogin();\r\n          this.handleRegStatus(res);\r\n        } else if (res.type !== AuthEvent.AUTH_EVENT_LOGOUT) {\r\n          this.clearUser();\r\n          this.onLogout();\r\n          this.ngZone.run(() => {\r\n            void this.router\r\n              .navigate([this.getLoginUrl()], { queryParams: { returnUrl: this.getReturnUrl(res) } })\r\n              .then(() => {\r\n                if (res.type === AuthEvent.AUTH_EVENT_401) {\r\n                  this.showNoAuthWarning();\r\n                }\r\n              });\r\n          });\r\n        }\r\n        if (res.type === AuthEvent.AUTH_EVENT_LOGOUT) {\r\n          this.clearUser();\r\n          this.onLogout();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  protected onLogin(): void {}\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  protected onLogout(): void {}\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\r\n  protected handleRegStatus(regStatus: AuthEvent): void {}\r\n\r\n  protected onUserInfoUpdate(session: T): void {\r\n    AuthUtil.updateSessionInfo(session);\r\n    this.currentUser = session;\r\n  }\r\n\r\n  protected abstract getLoginUrl(): string;\r\n\r\n  ngOnInit(): void {\r\n    this.setUser();\r\n    this.router.events.subscribe((val) => {\r\n      if (val instanceof NavigationEnd) {\r\n        this.appMessages.clearMessagesExceptSuccess();\r\n      }\r\n    });\r\n  }\r\n\r\n  protected clearUser(): void {\r\n    this.currentUser = null;\r\n    AuthUtil.clearSessionStorage();\r\n  }\r\n\r\n  protected setUser(): void {\r\n    this.currentUser = AuthUtil.getSessionInfo() as T;\r\n    if (this.currentUser != null && this.currentUser.language != null) {\r\n      setLang(this.translate, this.currentUser.language.toLowerCase());\r\n    }\r\n  }\r\n\r\n  private showNoAuthWarning(): void {\r\n    this.translate.get('common.message.noSession').subscribe((translation: string) => {\r\n      this.appMessages.showWarning('', translation, AuthEvent.AUTH_EVENT_NO_AUTH);\r\n    });\r\n  }\r\n\r\n  getReturnUrl(authEvent: AuthEvent): string {\r\n    return authEvent.returnUrl || '';\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return AuthUtil.isLoggedIn();\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ContentTypeInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    if (\n      request.method === 'POST' &&\n      !request.headers.get('Content-Type') &&\n      (request.body === undefined || request.body === null)\n    ) {\n      const clonedRequest = request.clone({\n        headers: request.headers.set('Content-Type', 'application/json'),\n      });\n      return next.handle(clonedRequest);\n    }\n    return next.handle(request);\n  }\n}\n\nexport const contentTypeInterceptor = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: ContentTypeInterceptor,\n  multi: true,\n};\n","import { HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthUtil } from '../../auth/auth.util';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    // console.log('JwtInterceptor');\r\n    const clonedRequest = req.clone({\r\n      headers: req.headers.set('Authorization', 'Bearer ' + AuthUtil.getJWTFromSession()),\r\n    });\r\n    return next.handle(clonedRequest);\r\n  }\r\n}\r\n\r\nexport const jwtProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: JwtInterceptor,\r\n  multi: true,\r\n};\r\n","import {\n  HTTP_INTERCEPTORS,\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthEvent } from '../../auth/auth.event';\nimport { S2Error } from '../../error/s2error';\nimport { ServerError } from '../../error/servererror';\nimport { UnauthorizedError } from '../../error/unauthorized';\nimport { LoggerFactory } from '../../log/logger.factory';\nimport { S2Message } from '../../model/common.api';\nimport { LoaderService } from '../loader.service';\nimport { ServerUnavailableError } from '../../error/server-unavailable-error';\n\n@Injectable()\nexport class S2Interceptor implements HttpInterceptor {\n  log = LoggerFactory.getLogger();\n\n  constructor(private loaderService: LoaderService) {}\n\n  intercept(req: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    if (!req.headers.has('x-s2-noloader')) {\n      this.loaderService.show(req.url);\n    }\n    return next.handle(req).pipe(\n      tap({\n        next: (event) => {\n          if (event instanceof HttpResponse) {\n            if (!req.headers.has('x-s2-noloader')) {\n              this.loaderService.hide();\n            }\n\n            const s2Status = event.headers.get('X-S2-status');\n            this.log.debug(`X-S2-status=${s2Status}`);\n            if (s2Status === 'ERR') {\n              const messages = event.body as S2Message[];\n              this.log.debug(messages);\n              throw new S2Error(messages);\n            }\n          }\n        },\n        error: (err) => {\n          if (!req.headers.has('x-s2-noloader')) {\n            this.loaderService.hide();\n          }\n          this.log.error('HTTP error', err);\n          if (err instanceof HttpErrorResponse) {\n            this.log.debug(`${err.status} ' - system error:'}`);\n            switch (err.status) {\n              case 403:\n              case 401:\n                AuthEvent.isUnauthError = true;\n                throw new UnauthorizedError();\n              case 500:\n                throw new ServerError(err.headers.get('X-S2-Err-UUID'));\n              case 503:\n              case 504:\n                throw new ServerUnavailableError();\n            }\n          }\n        },\n      })\n    );\n  }\n}\n\nexport const s2Provider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: S2Interceptor,\n  multi: true,\n};\n","import { Observable, of } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthEvent } from './auth.event';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthUtil } from './auth.util';\r\nimport { LoginResult, WebSessionInfo } from '../model/common.api';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommonAuthService {\r\n  constructor(protected http: HttpClient) {}\r\n\r\n  protected processLogin(\r\n    response: LoginResult<WebSessionInfo>,\r\n    returnUrl: string,\r\n    checkForPasswordChangeToken: boolean = true\r\n  ): void {\r\n    if (response && response.session) {\r\n      AuthUtil.setLoginResult(response);\r\n      if (response.token && (!checkForPasswordChangeToken || !response.session.usrPasswordChangeToken)) {\r\n        AuthUtil.setTermsAccepted(response.session?.usrTermsAccepted === 'Y');\r\n        this.getRegistrationStatus().subscribe((regStatus) => {\r\n          AuthEvent.userLoggedIn.next({\r\n            userLoggedIn: true,\r\n            session: response.session,\r\n            type: AuthEvent.AUTH_EVENT_LOGIN,\r\n            regStatus,\r\n            returnUrl,\r\n          });\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  protected getRegistrationStatus(): Observable<string> {\r\n    return of('ok');\r\n  }\r\n\r\n  protected processLogout(): void {\r\n    AuthUtil.clearSessionStorage();\r\n    AuthEvent.userLoggedIn.next({ userLoggedIn: false, session: null, type: AuthEvent.AUTH_EVENT_LOGOUT });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthEvent } from './auth.event';\r\nimport { AuthUtil } from './auth.util';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    return this.checkSession(state) && this.checkStatus(state);\r\n  }\r\n\r\n  canActivateChild(\r\n    childRoute: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    return this.canActivate(childRoute, state);\r\n  }\r\n\r\n  protected checkSession(state: RouterStateSnapshot): boolean {\r\n    if (AuthUtil.isLoggedIn()) {\r\n      return true;\r\n    }\r\n    AuthEvent.userLoggedIn.next({\r\n      userLoggedIn: false,\r\n      session: null,\r\n      type: AuthEvent.AUTH_EVENT_NO_AUTH,\r\n      returnUrl: state.url,\r\n    });\r\n    return false;\r\n  }\r\n\r\n  protected checkStatus(\r\n    state: RouterStateSnapshot\r\n  ): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    return true;\r\n  }\r\n}\r\n","import { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthEvent } from './auth.event';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\nexport abstract class CanDeactivateGuard {\n  canDeactivate(\n    component: CanComponentDeactivate,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot\n  ): any {\n    const skip = AuthEvent.isUnauthError || (nextState && nextState.url.includes(this.getLoginPath()));\n    AuthEvent.isUnauthError = false;\n    return skip || component.canDeactivate();\n  }\n\n  public abstract getLoginPath(): string;\n}\n","export class Spr_id_values_ot {\r\n  id: number;\r\n  key_value: string;\r\n  display_text: string;\r\n\r\n  constructor(id: number, key_value: string, display_text: string) {\r\n    this.id = id;\r\n    this.key_value = key_value;\r\n    this.display_text = display_text;\r\n  }\r\n}\r\n","/* eslint-disable @typescript-eslint/naming-convention, no-underscore-dangle, id-blacklist, id-match */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport class Spr_key_values_ot {\r\n    code: string;\r\n    key_value: string;\r\n    display_text: string;\r\n}\r\n","/*\n * Public API Surface of ngx-s2-commons\n */\n\nexport * from './lib/ngx-s2-commons.module';\nexport * from './lib/service/loader.service';\nexport * from './lib/i18n/lang.util';\nexport * from './lib/i18n/missing.translation.handler';\nexport * from './lib/ui/utils';\n\nexport * from './lib/message/app.messages';\n\nexport * from './lib/error/app.error.handler';\nexport * from './lib/error/s2error';\nexport * from './lib/error/servererror';\nexport * from './lib/error/unauthorized';\nexport * from './lib/error/server-unavailable-error';\n\nexport * from './lib/form/deprecated-base.edit.form';\nexport * from './lib/form/base.edit.form';\nexport * from './lib/form/base.browse.form';\nexport * from './lib/form/common.form.services';\n\nexport * from './lib/base.app.component';\n\nexport * from './lib/service/interceptor/content.type.interceptor';\nexport * from './lib/service/interceptor/jwt.interceptor';\nexport * from './lib/service/interceptor/s2.interceptor';\nexport * from './lib/service/client-log.service';\n\nexport * from './lib/auth/common.auth.service';\nexport * from './lib/auth/auth.guard';\nexport * from './lib/auth/auth.util';\nexport * from './lib/auth/auth.event';\nexport * from './lib/auth/can-deactivate.guard';\n\nexport * from './lib/enums/extended-search';\n\nexport { S2Message, S2ViolatedConstraint } from './lib/model/common.api';\nexport * from './lib/model/spr_id_values_ot';\nexport * from './lib/model/spr_key_values_ot';\nexport * from './lib/model/spr_paging_ot';\nexport * from './lib/model/extended-search';\n\n// naudojamas form-field komponentui, kai form-field bus perkeltas į frameworką export'as message.resolver nebus reikalingas\n// Jaroslavas 2021-03-25\nexport * from './lib/ui/field/validation/message.resolver';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.AppMessages","i2.AppMessages","i1.CommonFormServices","i1","uuid","i2","i3.ClientLogService","i4","i2.CommonFormServices","i3","i1.LoaderService"],"mappings":";;;;;;;;;;;;;;;;;;AAKA,MAKa,kBAAkB,CAAA;uGAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAlB,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EAHnB,OAAA,EAAA,CAAA,YAAY,EAAE,gBAAgB,EAAE,eAAe,CAAA,EAAA,CAAA,CAAA;AAG9C,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EAHnB,OAAA,EAAA,CAAA,YAAY,EAAE,gBAAgB,EAAE,eAAe,CAAA,EAAA,CAAA,CAAA;;2FAG9C,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE,EAAE;AAChB,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,EAAE,eAAe,CAAC;AAC1D,oBAAA,OAAO,EAAE,EAAE;AACZ,iBAAA,CAAA;;;ACED,MAGa,WAAW,CAAA;AAWF,IAAA,MAAA,CAAA;AAVb,IAAA,OAAgB,cAAc,GAAG,OAAO,CAAC;AACzC,IAAA,OAAgB,aAAa,GAAG,MAAM,CAAC;AACvC,IAAA,OAAgB,gBAAgB,GAAG,SAAS,CAAC;AAC7C,IAAA,OAAgB,aAAa,GAAG,MAAM,CAAC;AAE9B,IAAA,IAAI,GAAG,IAAI,OAAO,EAAc,CAAC;AACjC,IAAA,MAAM,GAAG,IAAI,OAAO,EAAQ,CAAC;IAErC,QAAQ,GAAiB,EAAE,CAAC;AAEpC,IAAA,WAAA,CAAoB,MAAc,EAAA;QAAd,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;KAAI;AAE9B,IAAA,WAAW,CAAC,OAAmB,EAAA;AACrC,QAAA,IACE,OAAO,CAAC,EAAE,KAAK,YAAY;AAC3B,YAAA,OAAO,CAAC,QAAQ,KAAK,WAAW,CAAC,cAAc;AAC/C,YAAA,OAAO,CAAC,QAAQ,KAAK,WAAW,CAAC,aAAa,EAC9C;AACA,YAAA,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;AACvB,SAAA;AACD,QAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAK;YACnB,IACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,CAAC,gBAAgB,KACf,gBAAgB,CAAC,QAAQ,KAAK,OAAO,CAAC,QAAQ,IAAI,gBAAgB,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CAC/F,EACD;gBACA,IAAI,CAAC,aAAa,EAAE,CAAC;AACrB,gBAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5B,gBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACzB,aAAA;AAAM,iBAAA,IACJ,OAAO,CAAC,IAAgC,EAAE,aAAa;gBACxD,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CACjB,CAAC,gBAAgB,KACf,gBAAgB,CAAC,QAAQ,KAAK,OAAO,CAAC,QAAQ,IAAI,gBAAgB,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CAC/F,EACD;AACA,gBAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5B,gBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACzB,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;IAED,aAAa,GAAA;AACX,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACnB,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;IAED,0BAA0B,GAAA;AACxB,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,QAAQ,KAAK,WAAW,CAAC,gBAAgB,CAAC,EAAE;AACtF,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACnB,YAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACpB,SAAA;KACF;AAED,IAAA,aAAa,CAAC,OAAmB,EAAA;AAC/B,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAC1C,CAAC,gBAAgB,KAAK,gBAAgB,CAAC,QAAQ,KAAK,OAAO,CAAC,QAAQ,IAAI,gBAAgB,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CACnH,CAAC;AACF,QAAA,IAAI,YAAY,KAAK,CAAC,CAAC,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;AACvC,SAAA;KACF;AAED,IAAA,SAAS,CAAC,OAAe,EAAE,MAAc,EAAE,EAAW,EAAA;AACpD,QAAA,IAAI,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE,WAAW,CAAC,cAAc,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;KACxE;AAED,IAAA,WAAW,CAAC,OAAe,EAAE,MAAc,EAAE,EAAW,EAAA;AACtD,QAAA,IAAI,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE,WAAW,CAAC,aAAa,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;KACvE;AAED,IAAA,WAAW,CAAC,OAAe,EAAE,MAAc,EAAE,EAAW,EAAA;AACtD,QAAA,IAAI,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE,WAAW,CAAC,gBAAgB,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;KAC1E;AAED,IAAA,QAAQ,CAAC,OAAe,EAAE,MAAc,EAAE,EAAW,EAAA;AACnD,QAAA,IAAI,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE,WAAW,CAAC,aAAa,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;KACvE;uGA/EU,WAAW,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAX,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,cAFV,MAAM,EAAA,CAAA,CAAA;;2FAEP,WAAW,EAAA,UAAA,EAAA,CAAA;kBAHvB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACHD,MACa,aAAa,CAAA;AAKJ,IAAA,WAAA,CAAA;IAJZ,SAAS,GAAG,CAAC,CAAC;AACd,IAAA,eAAe,CAAgC;IACvD,UAAU,GAAkC,IAAI,eAAe,CAAe,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;AAE/F,IAAA,WAAA,CAAoB,WAAwB,EAAA;QAAxB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;KAAI;IAEhD,IAAI,CAAC,OAAgB,EAAE,MAAgB,EAAA;AACrC,QAAA,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;AACxB,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;AACvD,SAAA;QACD,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAED,IAAI,GAAA;AACF,QAAA,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,EAAE,CAAC;AAClB,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;AACtC,YAAA,IAAI,IAAI,CAAC,eAAe,KAAK,SAAS,EAAE;AACtC,gBAAA,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACnC,gBAAA,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;AAClC,aAAA;AACF,SAAA;KACF;IAED,eAAe,CAAC,EACd,OAAO,EACP,MAAM,EACN,OAAO,EACP,cAAc,GAMf,EAAA;AACC,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC3B,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,MAAK;AACrC,gBAAA,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;aAChC,EAAE,OAAO,CAAC,CAAC;AACb,SAAA;KACF;AAES,IAAA,SAAS,CAAC,cAAuB,EAAA;QACzC,IAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAA,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;AAChD,SAAA;KACF;uGAnDU,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAb,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,cADA,MAAM,EAAA,CAAA,CAAA;;2FACnB,aAAa,EAAA,UAAA,EAAA,CAAA;kBADzB,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;ACR3B,MAAM,gBAAgB,GAAG,KAAK;AAC9B,MAAM,sBAAsB,GAAG,OAAO;AAE7C;;AAEG;SACa,OAAO,GAAA;AACnB,IAAA,OAAO,YAAY,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACxD,CAAC;AAED;;AAEG;AACa,SAAA,OAAO,CAAC,SAA2B,EAAE,IAAY,EAAA;AAC7D,IAAA,YAAY,CAAC,OAAO,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;AACnD,IAAA,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACxB,CAAC;AAED;;AAEG;AACG,SAAU,QAAQ,CAAC,SAA2B,EAAA;IAChD,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;;;IAG9D,IAAI,QAAQ,IAAI,IAAI,EAAE;AAClB,QAAA,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC3B,KAAA;AAAM,SAAA;AACH,QAAA,OAAO,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;AACxC,KAAA;AACL;;MC9Ba,4BAA4B,CAAA;AACvC,IAAA,MAAM,CAAC,MAAuC,EAAA;AAC5C,QAAA,OAAO,CAAO,IAAA,EAAA,MAAM,CAAC,GAAG,KAAK,CAAC;KAC/B;AACF;;ACND;AAIA;MACa,aAAa,CAAA;AACtB,IAAA,GAAG,CAAS;AACZ,IAAA,SAAS,CAAS;AAClB,IAAA,SAAS,CAAS;AAClB,IAAA,YAAY,CAAS;AACrB,IAAA,UAAU,CAAsB;AAEhC,IAAA,WAAA,CAAY,GAAW,EAAE,SAAiB,EAAE,SAAiB,EAAE,YAAoB,EAAA;AAC/E,QAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KACpC;AACJ;;IClBW,wBAWX;AAXD,CAAA,UAAY,uBAAuB,EAAA;AACjC,IAAA,uBAAA,CAAA,MAAA,CAAA,GAAA,GAAU,CAAA;AACV,IAAA,uBAAA,CAAA,MAAA,CAAA,GAAA,GAAU,CAAA;AACV,IAAA,uBAAA,CAAA,QAAA,CAAA,GAAA,GAAY,CAAA;AACZ,IAAA,uBAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;AACf,IAAA,uBAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;AACjB,IAAA,uBAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;AACf,IAAA,uBAAA,CAAA,UAAA,CAAA,GAAA,KAAgB,CAAA;AAChB,IAAA,uBAAA,CAAA,OAAA,CAAA,GAAA,MAAc,CAAA;AACd,IAAA,uBAAA,CAAA,UAAA,CAAA,GAAA,SAAoB,CAAA;AACpB,IAAA,uBAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;AACf,CAAC,EAXW,uBAAuB,KAAvB,uBAAuB,GAWlC,EAAA,CAAA,CAAA,CAAA;IAEW,yBAMX;AAND,CAAA,UAAY,wBAAwB,EAAA;AAClC,IAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,wBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,wBAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,wBAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;AAC7C,IAAA,wBAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EANW,wBAAwB,KAAxB,wBAAwB,GAMnC,EAAA,CAAA,CAAA;;ACbD,MAGa,kBAAkB,CAAA;AAmCpB,IAAA,KAAA,CAAA;AACA,IAAA,MAAA,CAAA;AACA,IAAA,WAAA,CAAA;AACA,IAAA,SAAA,CAAA;AACA,IAAA,mBAAA,CAAA;AAtCT,IAAA,UAAU,GAAG;AACX,QAAA,SAAS,EAAE,MAAM;AACjB,QAAA,QAAQ,EAAE,MAAM;AAChB,QAAA,QAAQ,EAAE,MAAM;AAChB,QAAA,WAAW,EAAE,OAAO;AACpB,QAAA,KAAK,EAAE,UAAU;AACjB,QAAA,KAAK,EAAE,UAAU;AACjB,QAAA,UAAU,EAAE;YACV,QAAQ;YACR,SAAS;YACT,OAAO;YACP,UAAU;YACV,QAAQ;YACR,UAAU;YACV,OAAO;YACP,WAAW;YACX,UAAU;YACV,QAAQ;YACR,WAAW;YACX,SAAS;AACV,SAAA;QACD,eAAe,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AACrG,QAAA,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;AACxF,QAAA,aAAa,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AAChE,QAAA,WAAW,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AACvD,QAAA,UAAU,EAAE,IAAI;AAChB,QAAA,UAAU,EAAE,UAAU;AACtB,QAAA,QAAQ,EAAE,CAAC;AACX,QAAA,KAAK,EAAE,KAAK;AACZ,QAAA,kBAAkB,EAAE,KAAK;AACzB,QAAA,UAAU,EAAE,EAAE;KACf,CAAC;IAEF,WACS,CAAA,KAAqB,EACrB,MAAc,EACd,WAAwB,EACxB,SAA2B,EAC3B,mBAAwC,EAAA;QAJxC,IAAK,CAAA,KAAA,GAAL,KAAK,CAAgB;QACrB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkB;QAC3B,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;KAC7C;uGAxCO,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAlB,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAFjB,MAAM,EAAA,CAAA,CAAA;;2FAEP,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACGM,MAAM,sBAAsB,GAAG,mBAAmB;AAazD,MAEsB,cAAc,CAAA;AAaZ,IAAA,kBAAA,CAAA;AAZf,IAAA,OAAO,oBAAoB,GAAG,EAAE,CAAC;AAExC,IAAA,WAAW,CAAU;AACrB,IAAA,IAAI,CAAM;AACV,IAAA,YAAY,CAAS;IACrB,kBAAkB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AACnC,IAAA,QAAQ,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;AACvC,IAAA,UAAU,GAAc,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;IAC1C,uBAAuB,GAAG,KAAK,CAAC;AAEI,IAAA,kBAAkB,CAAQ;AAE9D,IAAA,WAAA,CAAsB,kBAAsC,EAAA;QAAtC,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;AAC1D,QAAA,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,MAAM,EAAE,oBAAoB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC;QACzG,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;AAED,IAAA,OAAO,YAAY,CAAC,SAAiB,EAAE,KAAa,EAAE,WAAmB,EAAA;QACvE,IAAI,WAAW,GAAW,WAAW,CAAC;AACtC,QAAA,IAAI,SAAS,EAAE;AACb,YAAA,WAAW,GAAG,SAAS,IAAI,KAAK,KAAK,CAAC,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;AAC5D,SAAA;AACD,QAAA,OAAO,WAAW,CAAC;KACpB;IAED,OAAO,eAAe,CACpB,KAAa,EACb,QAAgB,EAChB,SAAiB,EACjB,KAAa,EACb,WAAmB,EAAA;QAEnB,OAAO,IAAI,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,cAAc,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC;KAC7G;AAmBD,IAAA,YAAY,CAAC,KAAyB,EAAA;QACpC,IAAI,CAAC,MAAM,CACT,KAAK,CAAC,KAAK,EACX,KAAK,CAAC,IAAI,EACV,OAAO,KAAK,CAAC,SAAS,KAAK,QAAQ,GAAG,KAAK,CAAC,SAAS,GAAG,SAAS,EACjE,KAAK,CAAC,SAAS,EACf,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAC7B,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,GAAG,SAAS,CAC/E,CAAC;KACH;AAED,IAAA,MAAM,CAAC,KAAY,EAAE,SAAS,GAAG,IAAI,EAAA;AACnC,QAAA,KAAK,CAAC,KAAK,GAAG,SAAS,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1C,IAAI,CAAC,MAAM,CACT,KAAK,CAAC,KAAK,EACX,KAAK,CAAC,IAAI,EACV,OAAO,KAAK,CAAC,SAAS,KAAK,QAAQ,GAAG,KAAK,CAAC,SAAS,GAAG,SAAS,EACjE,KAAK,CAAC,SAAS,EACf,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAC7B,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,GAAG,SAAS,CAC/E,CAAC;KACH;IAES,MAAM,CACd,KAAa,EACb,QAAgB,EAChB,SAAiB,EACjB,KAAa,EACb,MAA4B,EAC5B,cAAsC,EAAA;QAEtC,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,YAAA,MAAM,UAAU,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;AACnD,YAAA,IAAI,UAAU,EAAE;AACd,gBAAA,IAAI,OAAO,UAAU,CAAC,KAAK,KAAK,QAAQ,EAAE;AACxC,oBAAA,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;oBACzB,IAAI,IAAI,CAAC,kBAAkB,EAAE;wBAC3B,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;AAClD,qBAAA;AACF,iBAAA;AACD,gBAAA,IAAI,OAAO,UAAU,CAAC,QAAQ,KAAK,QAAQ,EAAE;AAC3C,oBAAA,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;AACrC,iBAAA;AACD,gBAAA,IAAI,OAAO,UAAU,CAAC,SAAS,KAAK,QAAQ,EAAE;AAC5C,oBAAA,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;AAClC,iBAAA;AACD,gBAAA,IAAI,OAAO,UAAU,CAAC,KAAK,KAAK,QAAQ,EAAE;AACxC,oBAAA,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;AAC1B,iBAAA;gBACD,IAAI,UAAU,CAAC,SAAS,EAAE;AACxB,oBAAA,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AACxD,iBAAA;gBACD,IAAI,UAAU,CAAC,cAAc,EAAE;AAC7B,oBAAA,cAAc,GAAG,UAAU,CAAC,cAAc,CAAC;AAC5C,iBAAA;gBACD,IAAI,CAAC,4BAA4B,EAAE,CAAC;AACrC,aAAA;AACD,YAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC1B,SAAA;AACD,QAAA,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;QACxF,IAAI,IAAI,CAAC,uBAAuB,EAAE;AAChC,YAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;AACtE,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;AACtD,SAAA;KACF;IAED,MAAM,CAAC,SAAS,GAAG,IAAI,EAAA;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;KACjD;IAES,yBAAyB,GAAA;AACjC,QAAA,OAAO,EAAE,CAAC;KACX;IAES,qBAAqB,GAAA;QAC7B,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,YAAA,MAAM,UAAU,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;AACnD,YAAA,IAAI,UAAU,EAAE;AACd,gBAAA,IAAI,OAAO,UAAU,CAAC,QAAQ,KAAK,QAAQ,EAAE;AAC3C,oBAAA,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;AACrC,iBAAA;AACF,aAAA;AACF,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,2BAA2B,EAAE,CAAC;AACpC,SAAA;KACF;AAEO,IAAA,qBAAqB,CAAC,SAAiB,EAAA;QAC7C,OAAO,IAAI,CAAC,yBAAyB,EAAE,CAAC,SAAS,CAAC,IAAI,IAAI,GAAG,SAAS,CAAC;KACxE;AAEO,IAAA,uBAAuB,CAAC,GAAyB,EAAE,UAAkB,EAAE,KAAc,EAAA;AAC3F,QAAA,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;KACjF;AAED;;;;;AAKG;AACK,IAAA,6BAA6B,CACnC,WAAkC,EAClC,KAA0B,EAC1B,GAAY,EAAA;QAEZ,IAAI,KAAK,YAAY,MAAM,IAAI,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,UAAU,EAAE;AAClE,YAAA,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzB,SAAA;AAAM,aAAA;YACL,WAAW,CAAC,IAAI,CAAC;AACf,gBAAA,SAAS,EAAE,GAAG;AACd,gBAAA,UAAU,EAAE;oBACV,SAAS,EAAE,uBAAuB,CAAC,MAAM;oBACzC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,KAAe;oBACrD,UAAU,EAAE,wBAAwB,CAAC,OAAO;AAC7C,iBAAA;AACF,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;AAED;;;;AAIG;AACO,IAAA,iBAAiB,CAAC,KAAiC,EAAA;AAC3D,QAAA,MAAM,MAAM,GAAG,IAAI,GAAG,EAAmB,CAAC;AAE1C,QAAA,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,EAAE;YAC1B,MAAM,YAAY,GAAG,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAChE,SAAA;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;AACpD,gBAAA,IACE,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK;AAC9C,oBAAA,CAAC,CAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAA6B,CAAC,UAAU,KAAK,KAAK,EACnF;oBACA,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAe,CAAA,CAAE,CAAC,CAAC;AAC/F,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACf;AAES,IAAA,uBAAuB,CAAC,KAAiC,EAAA;QACjE,MAAM,MAAM,GAA0B,EAAE,CAAC;AACzC,QAAA,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,EAAE;YAC1B,MAAM,YAAY,GAAG,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAE/D,YAAA,YAAY,CAAC,OAAO,CAAC,CAAC,UAAU,KAAI;gBAClC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE;oBAC5C,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAqB,CAAC;AAC9D,oBAAA,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,KAAI;wBACzB,IAAI,MAAM,CAAC,KAAK,EAAE;4BAChB,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,MAAM,CAAC,KAA4B,CAAC,CAAC;AACjF,yBAAA;AACH,qBAAC,CAAC,CAAC;AACJ,iBAAA;AAAM,qBAAA;oBACL,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAmB,CAAC;oBAE3D,IAAI,MAAM,CAAC,KAAK,EAAE;wBAChB,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,MAAM,CAAC,KAA4B,CAAC,CAAC;AACjF,qBAAA;AACF,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;gBACpD,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE;AACxC,oBAAA,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,KAA4B,EAAE,GAAG,CAAC,CAAC;AAC9G,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACf;AAED,IAAA,oBAAoB,CAAC,MAAe,EAAA;QAClC,QACE,MAAM,YAAY,MAAM;YACxB,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC;AAClD,YAAA,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,EACzD;KACH;AAED,IAAA,qBAAqB,CAAC,MAAe,EAAA;QACnC,QACE,MAAM,YAAY,MAAM;YACxB,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;AACpD,YAAA,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,EACzD;KACH;AAES,IAAA,WAAW,CAAC,KAAc,EAAA;QAClC,IAAI,KAAK,YAAY,IAAI,EAAE;AACzB,YAAA,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;AAC5B,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE;YAC3C,OAAO,KAAK,CAAC,EAAE,CAAC;AACjB,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,EAAE;YAC5C,OAAO,KAAK,CAAC,IAAI,CAAC;AACnB,SAAA;aAAM,IAAI,KAAK,YAAY,KAAK,EAAE;AACjC,YAAA,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;AAClD,SAAA;AAAM,aAAA,IAAI,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5D,YAAA,OAAO,SAAS,CAAC;AAClB,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;AAES,IAAA,YAAY,CAAC,SAAiB,EAAE,KAAa,EAAE,WAAmB,EAAA;QAC1E,OAAO,cAAc,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;KACnE;IAES,eAAe,CACvB,KAAa,EACb,QAAgB,EAChB,SAAiB,EACjB,KAAa,EACb,WAAmB,EAAA;AAEnB,QAAA,OAAO,cAAc,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;KACvF;IAES,oBAAoB,GAAA;QAC5B,OAAO,cAAc,CAAC,oBAAoB,CAAC;KAC5C;AAIS,IAAA,4BAA4B,CACpC,QAAgB,EAChB,UAAkB,sCAAsC,EACxD,mBAA4B,IAAI,EAAA;AAEhC,QAAA,MAAM,uBAAuB,GAAG,CAAC,mBAA2B,KAAU;AACpE,YAAA,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,OAAO,CAAC;AAClD,gBAAA,OAAO,EAAE,mBAAmB;gBAC5B,MAAM,EAAE,MAAK;AACX,oBAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;iBAC7B;AACF,aAAA,CAAC,CAAC;AACL,SAAC,CAAC;AACF,QAAA,IAAI,gBAAgB,EAAE;AACpB,YAAA,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,WAAmB,KAAI;gBAC/E,uBAAuB,CAAC,WAAW,CAAC,CAAC;AACvC,aAAC,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;YACL,uBAAuB,CAAC,OAAO,CAAC,CAAC;AAClC,SAAA;KACF;IAES,uBAAuB,CAC/B,KAAa,EACb,QAAgB,EAChB,SAAiB,EACjB,KAAa,EACb,MAA4B,EAC5B,cAAsC,EAAA;AAEtC,QAAA,MAAM,gBAAgB,GAAqB;AACzC,YAAA,GAAG,EAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG;AACvC,YAAA,SAAS,EAAE,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC;YACrC,cAAc;YACd,gBAAgB,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;AACpD,iBAAA,MAAM,CAAC,CAAC,WAAW,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC;iBACrE,MAAM,CACL,CAAC,SAAS,EAAE,WAAW,MAAM;AAC3B,gBAAA,GAAG,SAAS;AACZ,gBAAA,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAgB;aACtE,CAAC,EACF,EAA6B,CAC9B;YACH,KAAK;YACL,QAAQ;YACR,SAAS;YACT,KAAK;SACN,CAAC;AACF,QAAA,cAAc,CAAC,OAAO,CAAC,sBAAsB,EAAE,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC;KAClF;IAES,wBAAwB,GAAA;AAChC,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAqB,CAAC;AAClG,QAAA,IAAI,UAAU,EAAE;YACd,IAAI,UAAU,EAAE,GAAG,KAAK,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,EAAE;AAC1D,gBAAA,OAAO,UAAU,CAAC;AACnB,aAAA;AACF,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;IAES,2BAA2B,GAAA;AACnC,QAAA,cAAc,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;KACnD;IAES,4BAA4B,GAAA;AACpC,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACnD,IAAI,UAAU,EAAE,gBAAgB,EAAE;AAChC,YAAA,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC,WAAW,KAAI;gBAC/D,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;AACzC,oBAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC;AAC1F,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;uGApWmB,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;2FAAd,cAAc,EAAA,QAAA,EAAA,cAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAWvB,KAAK,EAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAbK,EAAE,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;;2FAEH,cAAc,EAAA,UAAA,EAAA,CAAA;kBAFnC,SAAS;mBAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAA;sGAaW,kBAAkB,EAAA,CAAA;sBAArD,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;;;AChC7B,MAAM,UAAU,GAAG,eAAe;AAClC,MAAM,WAAW,GAAG,+EAA+E;AAEpG,SAAU,YAAY,CAAC,GAAW,EAAA;IACtC,OAAO,GAAG,CAAC,OAAO,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC;AACtD,CAAC;AAEK,SAAU,WAAW,CAAC,KAAe,EAAA;AACzC,IAAA,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACxB,QAAA,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,EAAE,IAAI,EAAwB,CAAA,CAAC,CAAC;AAC7D,KAAA;AACD,IAAA,OAAO,EAAE,CAAC;AACZ,CAAC;AAEK,SAAU,aAAa,CAAC,SAA8B,EAAA;AAC1D,IAAA,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;AAC5B,QAAA,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,IAAI,CAAC,CAAC;AACnD,KAAA;AACD,IAAA,OAAO,EAAE,CAAC;AACZ,CAAC;AAEK,SAAU,gBAAgB,CAAC,SAA8B,EAAA;AAC7D,IAAA,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;QAC5B,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AAC3F,KAAA;AACD,IAAA,OAAO,EAAE,CAAC;AACZ,CAAC;AAEK,SAAU,cAAc,CAAC,SAA8B,EAAA;AAC3D,IAAA,MAAM,MAAM,GAAG,IAAI,GAAG,EAAkB,CAAC;AACzC,IAAA,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAI;QAC7B,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;AAChD,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,CAAC,GAAG,GAAG,CAAC;AACd,MAAM,CAAC,GAAG,GAAG,CAAC;AAER,SAAU,SAAS,CAAC,KAAa,EAAA;IACrC,OAAO,KAAK,KAAK,CAAC,CAAC;AACrB,CAAC;AAEK,SAAU,WAAW,CAAC,KAAc,EAAA;IACxC,OAAO,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AACvB,CAAC;AAEK,SAAU,eAAe,CAAC,MAA0B,EAAA;IACxD,IAAI,MAAM,GAAW,IAAI,CAAC;AAC1B,IAAA,IAAI,MAAM,EAAE;AACV,QAAA,MAAM,KAAK,GAAqB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC;AACtE,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,MAAM,GAAG,KAAK,CAAC,EAAE,CAAC;AACnB,SAAA;AACF,KAAA;AACD,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;AAEe,SAAA,iBAAiB,CAAC,KAAyB,EAAE,EAAU,EAAA;AACrE,IAAA,IAAI,KAAK,EAAE;AACT,QAAA,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAI;AAClB,YAAA,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AACpC,SAAC,CAAC,CAAC;AACJ,KAAA;AACD,IAAA,OAAO,KAAK,CAAC;AACf,CAAC;AAEK,SAAU,gBAAgB,CAAC,MAA2B,EAAA;IAC1D,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB,IAAA,IAAI,MAAM,EAAE;AACV,QAAA,MAAM,KAAK,GAAsB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC;AACvE,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC;AACrB,SAAA;AACF,KAAA;AACD,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC;AAEe,SAAA,kBAAkB,CAAC,KAA0B,EAAE,IAAY,EAAA;AACzE,IAAA,IAAI,KAAK,EAAE;AACT,QAAA,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAI;AAClB,YAAA,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;AACxC,SAAC,CAAC,CAAC;AACJ,KAAA;AACD,IAAA,OAAO,KAAK,CAAC;AACf,CAAC;AAEe,SAAA,kBAAkB,CAAC,GAAW,EAAE,YAA2B,EAAA;IACzE,IAAI,CAAC,YAAY,EAAE;AACjB,QAAA,OAAO,GAAG,CAAC;AACZ,KAAA;AACD,IAAA,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;AAC3B,QAAA,YAAY,CAAC,SAAS,GAAG,cAAc,CAAC,oBAAoB,CAAC;AAC9D,KAAA;AACD,IAAA,IAAI,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AACzC,QAAA,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACjB,KAAA;AACD,IAAA,GAAG,GAAG,CAAA,EAAG,GAAG,CAAA,UAAA,EAAa,YAAY,CAAC,SAAS,CAAA,WAAA,EAAc,YAAY,CAAC,SAAS,CAAA,CAAE,CAAC;IACtF,IAAI,YAAY,CAAC,YAAY,EAAE;QAC7B,GAAG,GAAG,GAAG,GAAG,gBAAgB,GAAG,YAAY,CAAC,YAAY,CAAC;AAC1D,KAAA;AACD,IAAA,OAAO,GAAG,CAAC;AACb,CAAC;AAEe,SAAA,kBAAkB,CAAC,GAAW,EAAE,MAA4B,EAAA;AAC1E,IAAA,IAAI,MAAM,EAAE;QACV,MAAM,CAAC,OAAO,CAAC,CAAC,KAAc,EAAE,GAAW,KAAI;AAC7C,YAAA,IAAI,KAAK,IAAI,KAAK,KAAK,EAAE,EAAE;gBACzB,GAAG,GAAG,GAAG,GAAG,CAAA,CAAA,EAAI,GAAG,CAAI,CAAA,EAAA,KAAe,EAAE,CAAC;AAC1C,aAAA;AACH,SAAC,CAAC,CAAC;AACJ,KAAA;AACD,IAAA,OAAO,GAAG,CAAC;AACb,CAAC;MAEY,UAAU,GAAG,CAAC,CAAU,EAAE,CAAU,KAAa;IAC5D,IAAI,CAAC,KAAK,CAAC,EAAE;QACX,OAAO,IAAI,CAAC;AACb,KAAA;AAAM,SAAA,IAAI,EAAE,CAAC,YAAY,MAAM,CAAC,IAAI,EAAE,CAAC,YAAY,MAAM,CAAC,EAAE;QAC3D,OAAO,KAAK,CAAC;AACd,KAAA;AAAM,SAAA,IAAI,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW,EAAE;;;AAG1C,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;AAAM,SAAA;AACL,QAAA,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE;AACjB,YAAA,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AAC/C,gBAAA,SAAS;AACV,aAAA;AACD,YAAA,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;gBAC/C,OAAO,KAAK,CAAC;AACd,aAAA;YACD,IAAK,CAA6B,CAAC,CAAC,CAAC,KAAM,CAA6B,CAAC,CAAC,CAAC,EAAE;AAC3E,gBAAA,SAAS;AACV,aAAA;AACD,YAAA,IAAI,OAAQ,CAA6B,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;gBACzD,OAAO,KAAK,CAAC;AACd,aAAA;AACD,YAAA,IAAI,CAAC,UAAU,CAAE,CAA6B,CAAC,CAAC,CAAC,EAAG,CAA6B,CAAC,CAAC,CAAC,CAAC,EAAE;AACrF,gBAAA,OAAO,KAAK,CAAC;AACd,aAAA;AACF,SAAA;AACD,QAAA,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE;YACjB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AAC7F,gBAAA,OAAO,KAAK,CAAC;AACd,aAAA;AACF,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AACH;;ACvJO,MAAM,aAAa,GAAG,WAAW;AACjC,MAAM,WAAW,GAAG,UAAU;AAC9B,MAAM,SAAS,GAAG,QAAQ;AAE1B,MAAM,cAAc,GAAG,IAAI;AAC3B,MAAM,eAAe,GAAG,IAAI;MAEtB,QAAQ,CAAA;IACX,OAAO,oCAAoC,CAAC,IAAc,EAAA;AAChE,QAAA,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;YACnB,MAAM,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC1C,IAAI,KAAK,KAAK,IAAI,EAAE;AAClB,gBAAA,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAClC,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;IAEM,OAAO,kBAAkB,CAAC,eAAwB,EAAA;AACvD,QAAA,IAAI,eAAe,EAAE;YACnB,IAAI,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,cAAc,EAAE;AAC1D,gBAAA,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;gBACpD,IAAI,CAAC,oCAAoC,CAAC,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC;AACrE,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;AACrD,YAAA,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AACrC,YAAA,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACpC,SAAA;KACF;AAEM,IAAA,OAAO,iBAAiB,GAAA;QAC7B,OAAO,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,cAAc,CAAC;KAC/D;AAEM,IAAA,OAAO,mBAAmB,GAAA;AAC/B,QAAA,IAAI,QAAQ,CAAC,iBAAiB,EAAE,EAAE;AAChC,YAAA,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AACrC,YAAA,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACpC,SAAA;QACD,cAAc,CAAC,KAAK,EAAE,CAAC;KACxB;AAEM,IAAA,OAAO,iBAAiB,GAAA;AAC7B,QAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;QAC9C,OAAO,WAAW,GAAG,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC;KAC/C;AAEM,IAAA,OAAO,cAAc,GAAA;AAC1B,QAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;QAC9C,OAAO,WAAW,GAAG,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC;KACjD;IAEM,OAAO,iBAAiB,CAAC,OAAuB,EAAA;AACrD,QAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;AAC9C,QAAA,WAAW,CAAC,OAAO,GAAG,OAAO,CAAC;AAC9B,QAAA,IAAI,QAAQ,CAAC,iBAAiB,EAAE,EAAE;AAChC,YAAA,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;AAChE,SAAA;AAAM,aAAA;AACL,YAAA,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;AAClE,SAAA;KACF;AAEM,IAAA,OAAO,cAAc,GAAA;AAC1B,QAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,iBAAiB,EAAE;AAC9C,cAAE,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC;AACnC,cAAE,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;AACxC,QAAA,OAAO,WAAW,GAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAiC,GAAG,IAAI,CAAC;KACtF;IAEM,OAAO,cAAc,CAAC,WAAwC,EAAA;AACnE,QAAA,IAAI,QAAQ,CAAC,iBAAiB,EAAE,EAAE;AAChC,YAAA,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;AAChE,SAAA;AAAM,aAAA;AACL,YAAA,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;AAClE,SAAA;KACF;AAEM,IAAA,OAAO,UAAU,GAAA;AACtB,QAAA,OAAO,IAAI,CAAC,cAAc,EAAE,IAAI,IAAI,CAAC;KACtC;AAEM,IAAA,OAAO,eAAe,GAAA;AAC3B,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAC3B,QAAQ,CAAC,iBAAiB,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAC9E,CAAC;AACvB,QAAA,OAAO,UAAU,KAAK,UAAU,CAAC,IAAI,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC;KACtF;IAEM,OAAO,gBAAgB,CAAC,MAAe,EAAA;AAC5C,QAAA,MAAM,KAAK,GAAsB;YAC/B,IAAI,EAAE,MAAM,GAAG,cAAc,GAAG,eAAe;AAC/C,YAAA,SAAS,EAAE,IAAI;AACf,YAAA,YAAY,EAAE,IAAI;SACnB,CAAC;QACF,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC1C,QAAA,IAAI,QAAQ,CAAC,iBAAiB,EAAE,EAAE;AAChC,YAAA,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AAC9C,SAAA;AAAM,aAAA;AACL,YAAA,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AAChD,SAAA;KACF;AAEM,IAAA,OAAO,WAAW,GAAA;AACvB,QAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;AAC9C,QAAA,OAAO,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;KAC1D;AAEM,IAAA,OAAO,SAAS,GAAA;AACrB,QAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;AAC9C,QAAA,OAAO,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;KACxD;AAEM,IAAA,OAAO,WAAW,GAAA;AACvB,QAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;AAC9C,QAAA,OAAO,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;KAC1D;AAEM,IAAA,OAAO,QAAQ,GAAA;AACpB,QAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;AAC9C,QAAA,OAAO,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;KACvD;AAEM,IAAA,OAAO,UAAU,GAAA;AACtB,QAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;AAC9C,QAAA,OAAO,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;KACzD;AAEM,IAAA,OAAO,WAAW,GAAA;AACvB,QAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;AAC9C,QAAA,OAAO,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;KAC1D;AACF;;ACnID,MAAa,SAAS,CAAA;AAaX,IAAA,YAAA,CAAA;AACA,IAAA,OAAA,CAAA;AACA,IAAA,IAAA,CAAA;AACA,IAAA,SAAA,CAAA;AACA,IAAA,SAAA,CAAA;AAhBF,IAAA,OAAgB,gBAAgB,GAAG,OAAO,CAAC;AAC3C,IAAA,OAAgB,iBAAiB,GAAG,QAAQ,CAAC;AAC7C,IAAA,OAAgB,kBAAkB,GAAG,SAAS,CAAC;AAC/C,IAAA,OAAgB,cAAc,GAAG,KAAK,CAAC;AACvC,IAAA,OAAgB,qBAAqB,GAAG,YAAY,CAAC;AACrD,IAAA,OAAgB,iBAAiB,GAAG,QAAQ,CAAC;AAE7C,IAAA,OAAO,aAAa,GAAG,KAAK,CAAC;AAE7B,IAAA,OAAO,YAAY,GAAuB,IAAI,OAAO,EAAE,CAAC;IAE/D,WACS,CAAA,YAAqB,EACrB,OAAuB,EACvB,IAAY,EACZ,SAAkB,EAClB,SAAkB,EAAA;QAJlB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAS;QACrB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAgB;QACvB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QACZ,IAAS,CAAA,SAAA,GAAT,SAAS,CAAS;QAClB,IAAS,CAAA,SAAA,GAAT,SAAS,CAAS;KACvB;;;ACjBN,MAAM,IAAI,GAAG,MAAiB,SAAS,CAAC;AAExC,MACa,oBAAoB,CAAA;AAC/B,IAAA,IAAI,KAAK,GAAA;QACP,IAAI,SAAS,EAAE,EAAE;YACf,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACpC,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;KACF;AAED,IAAA,IAAI,IAAI,GAAA;QACN,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACnC;AAED,IAAA,IAAI,IAAI,GAAA;QACN,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACnC;AAED,IAAA,IAAI,KAAK,GAAA;QACP,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACpC;uGAnBU,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;2GAApB,oBAAoB,EAAA,CAAA,CAAA;;2FAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBADhC,UAAU;;;MCHE,aAAa,CAAA;AACjB,IAAA,OAAO,SAAS,GAAA;QACrB,OAAO,IAAI,oBAAoB,EAAE,CAAC;KACnC;AACF;;ACLK,MAAO,OAAQ,SAAQ,KAAK,CAAA;AACb,IAAA,QAAA,CAAA;AAAnB,IAAA,WAAA,CAAmB,QAAqB,EAAA;AACtC,QAAA,KAAK,EAAE,CAAC;QADS,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAa;AAEtC,QAAA,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACzB,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;KAChD;AACF;;ACRK,MAAO,WAAY,SAAQ,KAAK,CAAA;AAEd,IAAA,IAAA,CAAA;AAApB,IAAA,WAAA,CAAoB,IAAY,EAAA;AAC5B,QAAA,KAAK,EAAE,CAAC;QADQ,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;AAE5B,QAAA,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;QAC7B,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC;KACtD;AACJ;;ACPK,MAAO,iBAAkB,SAAQ,KAAK,CAAA;AAExC,IAAA,WAAA,GAAA;AACI,QAAA,KAAK,EAAE,CAAC;AACR,QAAA,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC;QACnC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC;KAC5D;AACJ;;ACPK,MAAO,sBAAuB,SAAQ,KAAK,CAAA;AAC/C,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;AACR,QAAA,IAAI,CAAC,IAAI,GAAG,sBAAsB,CAAC,IAAI,CAAC;QACxC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,sBAAsB,CAAC,SAAS,CAAC,CAAC;KAC/D;AACF;;ACDD,MACsB,gBAAgB,CAAA;AACd,IAAA,IAAA,CAAA;AAApB,IAAA,WAAA,CAAoB,IAAgB,EAAA;QAAhB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;KAAK;AAEzC,IAAA,cAAc,CAAC,eAAgC,EAAA;AAC3C,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,mBAAmB,EAAE,EAAE,eAAe,CAAC,CAAC;KAC5E;uGALiB,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;2GAAhB,gBAAgB,EAAA,CAAA,CAAA;;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBADrC,UAAU;;;ACWX,MACa,eAAe,CAAA;AAOd,IAAA,WAAA,CAAA;AACA,IAAA,SAAA,CAAA;AACA,IAAA,gBAAA,CAAA;AACA,IAAA,QAAA,CAAA;AATZ,IAAA,GAAG,GAAG,aAAa,CAAC,SAAS,EAAE,CAAC;IAEhC,qBAAqB,GAAG,EAAE,CAAC;IAC3B,YAAY,GAAa,EAAE,CAAC;AAE5B,IAAA,WAAA,CACY,WAAwB,EACxB,SAA2B,EAC3B,gBAAkC,EAClC,QAAkB,EAAA;QAHlB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkB;QAC3B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;KAC1B;AAEJ,IAAA,WAAW,CAAC,KAAY,EAAA;AACtB,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,qBAAqB,CAAC,CAAC;QACrF,IAAI,KAAK,YAAY,OAAO,EAAE;YAC5B,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;gBAC7B,IAAI,GAAG,CAAC,IAAI,EAAE;AACZ,oBAAA,IAAI,CAAC,SAAS;AACX,yBAAA,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE;wBACb,MAAM,EAAE,GAAG,CAAC,MAAM;wBAClB,MAAM,EAAE,GAAG,CAAC,MAAM;wBAClB,MAAM,EAAE,GAAG,CAAC,MAAM;wBAClB,MAAM,EAAE,GAAG,CAAC,MAAM;wBAClB,MAAM,EAAE,GAAG,CAAC,MAAM;qBACnB,CAAC;AACD,yBAAA,SAAS,CAAC,CAAC,WAAmB,KAAI;wBACjC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC9C,qBAAC,CAAC,CAAC;AACN,iBAAA;AAAM,qBAAA;oBACL,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;AAClD,iBAAA;AACH,aAAC,CAAC,CAAC;;AAEJ,SAAA;AAAM,aAAA,IAAI,KAAK,YAAY,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAE;AAC5F,YAAA,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC;AAC1B,gBAAA,YAAY,EAAE,KAAK;AACnB,gBAAA,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE,SAAS,CAAC,cAAc;AAC/B,aAAA,CAAC,CAAC;AACJ,SAAA;aAAM,IAAI,KAAK,YAAY,WAAW,EAAE;AACvC,YAAA,IAAI,CAAC,SAAS;AACX,iBAAA,GAAG,CAAC,+BAA+B,EAAE,EAAE,OAAO,EAAE,CAAA,EAAG,KAAK,CAAC,IAAI,CAAA,KAAA,EAAQ,iBAAiB,CAAA,CAAA,CAAG,EAAE,CAAC;AAC5F,iBAAA,SAAS,CAAC,CAAC,WAAmB,KAAK,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC;YACnF,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;AAC9C,SAAA;aAAM,IAAI,KAAK,YAAY,sBAAsB,EAAE;AAClD,YAAA,IAAI,CAAC,SAAS;iBACX,GAAG,CAAC,qCAAqC,EAAE,EAAE,WAAW,EAAE,iBAAiB,EAAE,CAAC;AAC9E,iBAAA,SAAS,CAAC,CAAC,WAAmB,KAAK,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC;AACpF,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,QAAQ,CAAC,UAAU,EAAE,EAAE;AACzB,gBAAA,MAAM,OAAO,GAAGC,EAAI,EAAE,CAAC;;AAEvB,gBAAA,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE;AAClC,oBAAA,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,MAAK;AAC1F,wBAAA,IAAI,CAAC,SAAS;6BACX,GAAG,CAAC,+BAA+B,EAAE;AACpC,4BAAA,OAAO,EAAE,CAAA,EAAG,OAAO,CAAA,CAAA,EAAI,iBAAiB,CAAG,CAAA,CAAA;yBAC5C,CAAC;AACD,6BAAA,SAAS,CAAC,CAAC,WAAmB,KAAK,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC;AACrF,qBAAC,CAAC,CAAC;AACJ,iBAAA;AACF,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,SAAS;qBACX,GAAG,CAAC,yBAAyB,CAAC;AAC9B,qBAAA,SAAS,CAAC,CAAC,WAAmB,KAAK,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,EAAE,CAAA,EAAG,WAAW,CAAE,CAAA,CAAC,CAAC,CAAC;AACzF,aAAA;YACD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;AACzD,SAAA;KACF;IAES,WAAW,CAAC,IAAY,EAAE,QAAgB,EAAA;QAClD,IAAI,QAAQ,KAAK,GAAG,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AACtC,SAAA;QACD,IAAI,QAAQ,KAAK,GAAG,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AACxC,SAAA;KACF;IAEO,iBAAiB,CAAC,KAAY,EAAE,OAAe,EAAA;QACrD,MAAM,eAAe,GAAG,EAAqB,CAAC;AAC9C,QAAA,eAAe,CAAC,SAAS,GAAG,OAAO,CAAC;AACpC,QAAA,eAAe,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,qBAAqB,CAAC,CAAC;QAE7F,IAAI,KAAK,YAAY,iBAAiB,EAAE;AACtC,YAAA,eAAe,CAAC,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;AAC9C,SAAA;AAAM,aAAA;AACL,YAAA,eAAe,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC;AAC5C,SAAA;AACD,QAAA,OAAO,eAAe,CAAC;KACxB;IAEO,sBAAsB,GAAA;QAC5B,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,IAAI,wBAAwB,GAAG,KAAK,CAAC;QACrC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,GAAG,CAAC,EAAE;AAC7D,YAAA,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC1B,wBAAwB,GAAG,IAAI,CAAC;AACjC,SAAA;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AAEnC,QAAA,IAAI,wBAAwB,EAAE;YAC5B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;gBACxF,YAAY,GAAG,IAAI,CAAC;AACrB,aAAA;AACF,SAAA;AAED,QAAA,OAAO,YAAY,CAAC;KACrB;uGA7GU,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAJ,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAK,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;2GAAf,eAAe,EAAA,CAAA,CAAA;;2FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAD3B,UAAU;;AAiHE,MAAA,eAAe,GAAG;AAC7B,IAAA,OAAO,EAAE,YAAY;AACrB,IAAA,QAAQ,EAAE,eAAe;;;ACjI3B,MAAa,eAAe,CAAA;AAClB,IAAA,OAAgB,gBAAgB,GAAG,cAAc,CAAC;AAE1D;;AAEG;AACK,IAAA,OAAO,kBAAkB,CAAC,GAAW,EAAE,YAAoC,EAAA;QACjF,OAAO,YAAY,GAAG,GAAG,CAAC,IAAI,eAAe,CAAC,gBAAgB,CAAC;KAChE;IAED,OAAO,YAAY,CACjB,SAA2B,EAC3B,MAA+B,EAC/B,YAAoC,EACpC,aAAa,GAAG,KAAK,EAAA;QAErB,MAAM,GAAG,GAAa,EAAE,CAAC;;AAEzB,QAAA,IAAI,MAAM,EAAE;;YAGV,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACtC,YAAA,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;gBACxB,IAAI,MAAM,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,aAAa,EAAE;oBAClB,MAAM,GAAG,eAAe,CAAC,kBAAkB,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,GAAG,CAAC;AACtE,iBAAA;;AAGD,gBAAA,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAW,CAAC,CAAC;AACnE,aAAC,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,OAAO,GAAG,CAAC;KACZ;IAED,OAAO,oBAAoB,CACzB,SAA2B,EAC3B,MAA+B,EAC/B,YAAoC,EACpC,aAAa,GAAG,KAAK,EAAA;QAErB,IAAI,YAAY,GAAG,EAAE,CAAC;AACtB,QAAA,MAAM,QAAQ,GAAG,eAAe,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;QAC9F,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,KAAI;YAC5B,YAAY,IAAI,GAAG,CAAC;AACpB,YAAA,IAAI,GAAG,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7B,YAAY,IAAI,IAAI,CAAC;AACtB,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,YAAY,CAAC;KACrB;;;ACzCI,MAAM,kBAAkB,GAAG,iBAAiB;AAQnD;;AAEG;AACH,MAEsB,sBAAsB,CAAA;AAsB9B,IAAA,WAAA,CAAA;AACA,IAAA,kBAAA,CAAA;AACA,IAAA,cAAA,CAAA;AAvBZ,IAAA,OAAgB,kBAAkB,GAAG,gBAAgB,CAAC;AACtC,IAAA,QAAQ,GAAkB,IAAI,OAAO,EAAE,CAAC;AACjD,IAAA,OAAO,uBAAuB,GAAqB,IAAI,OAAO,EAAE,CAAC;AACxE,IAAA,GAAG,GAAG,aAAa,CAAC,SAAS,EAAE,CAAC;IAChC,cAAc,GAAG,KAAK,CAAC;AACvB,IAAA,WAAW,CAAI;AACf,IAAA,IAAI,CAAI;AACR,IAAA,IAAI,CAAY;AACN,IAAA,EAAE,CAAS;AACX,IAAA,UAAU,CAAS;IACnB,KAAK,GAAG,KAAK,CAAC;IACd,KAAK,GAAG,KAAK,CAAC;IACxB,aAAa,GAAG,IAAI,CAAC;AAQrB,IAAA,WAAA,CACY,WAAwB,EACxB,kBAAsC,EACtC,cAA+B,EAAA;QAF/B,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;QACtC,IAAc,CAAA,cAAA,GAAd,cAAc,CAAiB;KACvC;IAEJ,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjC,IAAI,IAAI,CAAC,2BAA2B,EAAE;YACpC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,MAAK;gBACnF,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC1B,aAAC,CAAC,CAAC;AACJ,SAAA;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,UAAU,KAAI;AACvD,gBAAA,IAAI,UAAU,CAAC,UAAU,KAAK,SAAS,EAAE;AACvC,oBAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,UAAoB,CAAC;AACnD,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACxB,iBAAA;AACH,aAAC,CAAC,CAAC;YACH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,KAAI;AAC9C,gBAAA,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAY,CAAC;AAC9B,gBAAA,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;oBAChC,IAAI,IAAI,CAAC,2BAA2B,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAChE,wBAAA,IAAI,CAAC,kCAAkC,CAAC,IAAI,CAAC,CAAC;AAC/C,qBAAA;AAAM,yBAAA;wBACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC9C,qBAAA;AACF,iBAAA;AAAM,qBAAA,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;AAC5B,oBAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AACnD,oBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;oBACxB,IAAI,CAAC,kCAAkC,EAAE,CAAC;AAC3C,iBAAA;AAAM,qBAAA,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;oBAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3C,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACrB,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QAC5B,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;;AAGD,IAAA,QAAQ,CAAC,KAAY,EAAA;AACnB,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC7B,QAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;AACpD,QAAA,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AACpC,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,YAAA,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACpB,gBAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,SAAS,CAC3C,EAAE,EACF,eAAe,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CACtG,CAAC;AACH,aAAA;AAAM,iBAAA;gBACL,IAAI,CAAC,kBAAkB,CAAC,SAAS;qBAC9B,GAAG,CAAC,wCAAwC,CAAC;AAC7C,qBAAA,SAAS,CAAC,CAAC,WAAmB,KAAI;AACjC,oBAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;AAC/E,iBAAC,CAAC,CAAC;AACN,aAAA;AACF,SAAA;KACF;IAED,aAAa,GAAA;AACX,QAAA,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;AACzB,YAAA,OAAO,IAAI,UAAU,CAAC,CAAC,QAA2B,KAAI;AACpD,gBAAA,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,OAAO,CAAC;oBAClD,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAW;AAC7F,oBAAA,IAAI,EAAE,uBAAuB;oBAC7B,MAAM,EAAE,MAAK;wBACX,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC5B,wBAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACrB;oBACD,MAAM,EAAE,MAAK;AACX,wBAAA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACrB;AACF,iBAAA,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC5B,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;KACF;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IAED,QAAQ,GAAA;QACN,IACE,IAAI,CAAC,gBAAgB;AACrB,YAAA,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAW,CAAC,EACpG;AACA,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC7B,SAAA;KACF;IAED,YAAY,CAAC,IAAU,EAAE,QAAgB,EAAA;QACvC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;AAC5B,QAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAChC,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;AAC/B,YAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;AACrD,YAAA,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,KAAK,EAAE,CAAC;AACd,SAAA;AACD,QAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACjC;AAEM,IAAA,aAAa,CAAC,IAAO,EAAA;AAC1B,QAAA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChC,QAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC9E,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC5B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACzB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,IAAI,CAAC,kBAAkB,EAAE;AAC3B,YAAA,sBAAsB,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3D,SAAA;KACF;IAES,iBAAiB,GAAA;QACzB,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,4BAA4B,CAAW,CAAC;KAC1F;IAES,sBAAsB,CAAC,WAAmB,EAAE,QAAiB,EAAA;QACrE,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAChD,IAAI,QAAQ,KAAK,IAAI,EAAE;YACrB,OAAO,CAAC,OAAO,EAAE,CAAC;AACnB,SAAA;AAAM,aAAA;YACL,OAAO,CAAC,MAAM,EAAE,CAAC;AAClB,SAAA;KACF;;IAGS,YAAY,CAAC,IAAO,EAAA,GAAU;AAE9B,IAAA,aAAa,CAAC,IAAO,EAAA;AAC7B,QAAA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChC,QAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC3B,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AACxB,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AACnD,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;KAC5B;IAES,sBAAsB,GAAA;AAC9B,QAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;YAC9C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,CAAC;YACzC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,SAAS,EAAE;gBAChD,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAe,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;AAC3E,oBAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC;AACzE,iBAAC,CAAC,CAAC;AACJ,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,IAAc,gBAAgB,GAAA;AAC5B,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,IAAc,kBAAkB,GAAA;AAC9B,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,IAAc,2BAA2B,GAAA;AACvC,QAAA,OAAO,KAAK,CAAC;KACd;AAES,IAAA,UAAU,CAAC,IAAO,EAAA;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAM,CAAC;KAC9D;AAES,IAAA,yBAAyB,CAAC,IAAO,EAAA;QACzC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,KAAa,KAAI;YACjD,OAAO,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,KAAK,CAAC;AACrC,SAAC,CAAC,CAAC;KACJ;IAES,cAAc,GAAA;QACtB,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACrD,MAAM,OAAO,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAC/D,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,WAAW,KAAK,OAAO,CAAC;KAC/C;IAES,WAAW,GAAA;AACnB,QAAA,OAAO,KAAK,CAAC;KACd;AAED,IAAA,gBAAgB,CAAC,OAA0B,EAAE,WAAW,GAAG,IAAI,EAAA;QAC7D,MAAM,gBAAgB,GAAqB,EAAE,KAAK,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,EAAE,CAAC;AAC5E,QAAA,IAAI,WAAW,EAAE;AACf,YAAA,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC/B,gBAAA,OAAO,GAAG,CAAC,CAAA,CAAA,EAAI,OAAO,CAAA,CAAE,CAAC,CAAC;AAC3B,aAAA;AAAM,iBAAA,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACjC,gBAAA,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC;AAC7B,aAAA;AACF,SAAA;QACD,KAAK,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,OAAO,KAAK,QAAQ,GAAG,CAAC,OAAO,CAAC,GAAG,OAAO,EAAE,gBAAgB,CAAC,CAAC;KACnH;IAES,gBAAgB,GAAA;QACxB,IAAI,IAAI,CAAC,cAAc,EAAE;AACvB,YAAA,MAAM,QAAQ,GAAoB;AAChC,gBAAA,GAAG,EAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG;gBACvC,UAAU,EAAE,IAAI,CAAC,UAAU;AAC3B,gBAAA,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE;aACrB,CAAC;AACF,YAAA,YAAY,CAAC,OAAO,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpE,SAAA;KACF;IAES,iBAAiB,GAAA;AACzB,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAoB,CAAC;AACzF,QAAA,IAAI,QAAQ,EAAE;YACZ,IACE,QAAQ,CAAC,GAAG,KAAK,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG;AACnD,gBAAA,QAAQ,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU;gBACvC,QAAQ,CAAC,IAAI,EACb;AACA,gBAAA,OAAO,QAAQ,CAAC;AACjB,aAAA;YACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC7B,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;IAES,oBAAoB,GAAA;AAC5B,QAAA,YAAY,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;KAC7C;IAES,kCAAkC,CAC1C,gBAAgB,GAAG,KAAK,EACxB,UAAU,GAAG,mCAAmC,EAChD,SAAS,GAAG,IAAI,EAAA;QAEhB,IAAI,IAAI,CAAC,2BAA2B,EAAE;AACpC,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC1C,IAAI,QAAQ,EAAE,IAAI,EAAE;AAClB,gBAAA,IAAI,SAAS,EAAE;AACb,oBAAA,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,WAAmB,KAAI;AAClF,wBAAA,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,OAAO,CAAC;AAClD,4BAAA,OAAO,EAAE,WAAW;4BACpB,MAAM,EAAE,MAAK;AACX,gCAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC5B,gCAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;6BAC5B;4BACD,MAAM,EAAE,MAAK;gCACX,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC5B,gCAAA,IAAI,gBAAgB,EAAE;oCACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC9C,iCAAA;AAAM,qCAAA;AACL,oCAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC5B,iCAAA;6BACF;AACF,yBAAA,CAAC,CAAC;AACL,qBAAC,CAAC,CAAC;AACJ,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,OAAO,CAAC;AAClD,wBAAA,OAAO,EAAE,UAAU;wBACnB,MAAM,EAAE,MAAK;AACX,4BAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;yBAC7B;wBACD,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC;AAC7C,qBAAA,CAAC,CAAC;AACJ,iBAAA;AACF,aAAA;AACF,SAAA;KACF;AAES,IAAA,aAAa,CAAC,IAAO,EAAA;AAC5B,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAmB,EAAE,SAAS,CAAC;AAC9C,YAAA,IAAI,EAAE,CAAC,MAAM,KAAI;AACf,gBAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;aAC5B;AACD,YAAA,KAAK,EAAE,CAAC,KAAK,KAAI;AACf,gBAAA,IAAI,kBAA+B,CAAC;gBACpC,IAAI,KAAK,YAAY,OAAO,EAAE;AAC5B,oBAAA,kBAAkB,GAAG,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,GAAG,KAAK,wBAAwB,CAAC,CAAC;oBACnG,IAAI,kBAAkB,EAAE,MAAM,EAAE;wBAC9B,MAAM,mBAAmB,GAA2B,kBAAkB,CAAC,GAAG,CAAC,CAAC,OAAO,MAAM;4BACvF,IAAI,EAAE,OAAO,CAAC,IAAI;4BAClB,MAAM,EAAE,OAAO,CAAC,MAAM;AACvB,yBAAA,CAAC,CAAC,CAAC;AACJ,wBAAA,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC;AACnD,qBAAA;AACF,iBAAA;gBACD,IAAI,CAAC,kBAAkB,EAAE,MAAM,IAAI,EAAE,KAAK,YAAY,OAAO,CAAC,EAAE;AAC9D,oBAAA,MAAM,KAAK,CAAC;AACb,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACJ;IAES,aAAa,CAAC,EAAW,EAAE,UAAmB,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,CAAmB,EAAE,SAAS,CAAC,CAAC,MAAM,KAAI;AACnE,YAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC7B,SAAC,CAAC,CAAC;KACJ;AAES,IAAA,gBAAgB,CACxB,WAAqD,EACrD,MAAiB,EACjB,aAAwD,EAAA;AAExD,QAAA,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,QAAQ,KAAI;YACnC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;AAChE,SAAC,CAAC,CAAC;KACJ;AAES,IAAA,uBAAuB,CAC/B,MAA8B,EAC9B,MAAiB,EACjB,aAAwD,EAAA;AAExD,QAAA,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,KAAI;AAC5B,YAAA,IAAI,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE;AAC7B,gBAAA,UAAU,CAAC,MAAM;AACd,qBAAA,MAAM,CAAC,CAAC,KAAK,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACpD,qBAAA,OAAO,CAAC,CAAC,KAAK,KAAI;AACjB,oBAAA,MAAM,OAAO,GACX,aAAa,GAAG,KAAK,CAAC,IAAI,aAAa,GAAG,KAAK,CAAC,YAAY,eAAe;AACzE,0BAAG,aAAa,GAAG,KAAK,CAAqB;0BAC3C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAChC,oBAAA,IAAI,OAAO,EAAE;AACX,wBAAA,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;AACpC,wBAAA,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AAC/B,wBAAA,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC3B,qBAAA;AACH,iBAAC,CAAC,CAAC;AACN,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;uGA9WmB,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAJ,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAK,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,oDAFrB,SAAS,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;;2FAEV,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAF3C,SAAS;mBAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAA;;;ACLlC,MAEsB,YAAY,CAAA;AAoBV,IAAA,kBAAA,CAAA;AAAkD,IAAA,cAAA,CAAA;AAnBxE,IAAA,OAAgB,qBAAqB,GAAG,gBAAgB,CAAC;AACzC,IAAA,QAAQ,GAAkB,IAAI,OAAO,EAAE,CAAC;AACjD,IAAA,OAAO,uBAAuB,GAAqB,IAAI,OAAO,EAAE,CAAC;AACxE,IAAA,GAAG,GAAG,aAAa,CAAC,SAAS,EAAE,CAAC;IAChC,cAAc,GAAG,KAAK,CAAC;AACvB,IAAA,WAAW,CAAI;AACf,IAAA,IAAI,CAAI;AAEE,IAAA,EAAE,CAAS;AACX,IAAA,UAAU,CAAS;IACnB,KAAK,GAAG,KAAK,CAAC;IACd,KAAK,GAAG,KAAK,CAAC;IACxB,aAAa,GAAG,IAAI,CAAC;IAOrB,WAAsB,CAAA,kBAAsC,EAAY,cAA+B,EAAA;QAAjF,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;QAAY,IAAc,CAAA,cAAA,GAAd,cAAc,CAAiB;KAAI;IAE3G,QAAQ,GAAA;QACN,IAAI,IAAI,CAAC,2BAA2B,EAAE;YACpC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,MAAK;gBACnF,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC1B,aAAC,CAAC,CAAC;AACJ,SAAA;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,UAAU,KAAI;AACvD,gBAAA,IAAI,UAAU,CAAC,UAAU,KAAK,SAAS,EAAE;AACvC,oBAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,UAAoB,CAAC;AACnD,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACxB,iBAAA;AACH,aAAC,CAAC,CAAC;YACH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,KAAI;AAC9C,gBAAA,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAY,CAAC;AAC9B,gBAAA,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;oBAChC,IAAI,IAAI,CAAC,2BAA2B,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAChE,wBAAA,IAAI,CAAC,kCAAkC,CAAC,IAAI,CAAC,CAAC;AAC/C,qBAAA;AAAM,yBAAA;wBACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC9C,qBAAA;AACF,iBAAA;AAAM,qBAAA,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,EAAE;AAC5B,oBAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AACnD,oBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;oBACxB,IAAI,CAAC,kCAAkC,EAAE,CAAC;AAC3C,iBAAA;AAAM,qBAAA,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;oBAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3C,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACrB,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QAC5B,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;;AAGD,IAAA,QAAQ,CAAC,KAAY,EAAA;AACnB,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC7B,QAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;AACpD,QAAA,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AACpC,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,YAAA,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACpB,gBAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,SAAS,CAC3C,EAAE,EACF,eAAe,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CACtG,CAAC;AACH,aAAA;AAAM,iBAAA;gBACL,IAAI,CAAC,kBAAkB,CAAC,SAAS;qBAC9B,GAAG,CAAC,wCAAwC,CAAC;AAC7C,qBAAA,SAAS,CAAC,CAAC,WAAmB,KAAI;AACjC,oBAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;AAC/E,iBAAC,CAAC,CAAC;AACN,aAAA;AACF,SAAA;KACF;IAED,aAAa,GAAA;AACX,QAAA,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;AACzB,YAAA,OAAO,IAAI,UAAU,CAAC,CAAC,QAA2B,KAAI;AACpD,gBAAA,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,OAAO,CAAC;oBAClD,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAW;AAC7F,oBAAA,IAAI,EAAE,uBAAuB;oBAC7B,MAAM,EAAE,MAAK;wBACX,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC5B,wBAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACrB;oBACD,MAAM,EAAE,MAAK;AACX,wBAAA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACrB;AACF,iBAAA,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC5B,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;KACF;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IAED,QAAQ,GAAA;QACN,IACE,IAAI,CAAC,gBAAgB;AACrB,YAAA,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAW,CAAC,EACpG;AACA,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC7B,SAAA;KACF;IAED,YAAY,CAAC,IAAU,EAAE,QAAgB,EAAA;QACvC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;AAC5B,QAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAChC,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;AAC/B,YAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;AACrD,YAAA,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,KAAK,EAAE,CAAC;AACd,SAAA;AACD,QAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACjC;AAEM,IAAA,aAAa,CAAC,IAAO,EAAA;AAC1B,QAAA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChC,QAAA,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC9E,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC5B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACzB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,IAAI,CAAC,kBAAkB,EAAE;AAC3B,YAAA,YAAY,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjD,SAAA;KACF;IAES,iBAAiB,GAAA;QACzB,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,4BAA4B,CAAW,CAAC;KAC1F;IAES,sBAAsB,CAAC,WAAmB,EAAE,QAAiB,EAAA;QACrE,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAChD,IAAI,QAAQ,KAAK,IAAI,EAAE;YACrB,OAAO,CAAC,OAAO,EAAE,CAAC;AACnB,SAAA;AAAM,aAAA;YACL,OAAO,CAAC,MAAM,EAAE,CAAC;AAClB,SAAA;KACF;;IAGS,YAAY,CAAC,IAAO,EAAA,GAAU;AAE9B,IAAA,aAAa,CAAC,IAAO,EAAA;AAC7B,QAAA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAChC,QAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC3B,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AACxB,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AACnD,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;KAC5B;IAES,sBAAsB,GAAA;AAC9B,QAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;YAC9C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,CAAC;YACzC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,SAAS,EAAE;gBAChD,MAAM,CAAC,IAAI,CAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAe,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;AAC3E,oBAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC;AACzE,iBAAC,CAAC,CAAC;AACJ,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,IAAc,gBAAgB,GAAA;AAC5B,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,IAAc,kBAAkB,GAAA;AAC9B,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,IAAc,2BAA2B,GAAA;AACvC,QAAA,OAAO,KAAK,CAAC;KACd;AAES,IAAA,UAAU,CAAC,IAAO,EAAA;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAM,CAAC;KAC9D;AAES,IAAA,yBAAyB,CAAC,IAAO,EAAA;QACzC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,KAAa,KAAI;YACjD,OAAO,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,KAAK,CAAC;AACrC,SAAC,CAAC,CAAC;KACJ;IAES,cAAc,GAAA;QACtB,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACrD,MAAM,OAAO,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAC/D,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,WAAW,KAAK,OAAO,CAAC;KAC/C;IAES,WAAW,GAAA;AACnB,QAAA,OAAO,KAAK,CAAC;KACd;AAED,IAAA,gBAAgB,CAAC,OAA0B,EAAE,WAAW,GAAG,IAAI,EAAA;QAC7D,MAAM,gBAAgB,GAAqB,EAAE,KAAK,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,EAAE,CAAC;AAC5E,QAAA,IAAI,WAAW,EAAE;AACf,YAAA,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC/B,gBAAA,OAAO,GAAG,CAAC,CAAA,CAAA,EAAI,OAAO,CAAA,CAAE,CAAC,CAAC;AAC3B,aAAA;AAAM,iBAAA,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACjC,gBAAA,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC;AAC7B,aAAA;AACF,SAAA;QACD,KAAK,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,OAAO,KAAK,QAAQ,GAAG,CAAC,OAAO,CAAC,GAAG,OAAO,EAAE,gBAAgB,CAAC,CAAC;KACnH;IAES,gBAAgB,GAAA;QACxB,IAAI,IAAI,CAAC,cAAc,EAAE;AACvB,YAAA,MAAM,QAAQ,GAAoB;AAChC,gBAAA,GAAG,EAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG;gBACvC,UAAU,EAAE,IAAI,CAAC,UAAU;AAC3B,gBAAA,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE;aACrB,CAAC;AACF,YAAA,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,qBAAqB,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpF,SAAA;KACF;IAES,iBAAiB,GAAA;AACzB,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAoB,CAAC;AACzG,QAAA,IAAI,QAAQ,EAAE;YACZ,IACE,QAAQ,CAAC,GAAG,KAAK,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG;AACnD,gBAAA,QAAQ,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU;gBACvC,QAAQ,CAAC,IAAI,EACb;AACA,gBAAA,OAAO,QAAQ,CAAC;AACjB,aAAA;YACD,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC7B,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;IAES,oBAAoB,GAAA;AAC5B,QAAA,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;KAC7D;IAES,kCAAkC,CAC1C,gBAAgB,GAAG,KAAK,EACxB,UAAU,GAAG,mCAAmC,EAChD,SAAS,GAAG,IAAI,EAAA;QAEhB,IAAI,IAAI,CAAC,2BAA2B,EAAE;AACpC,YAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC1C,IAAI,QAAQ,EAAE,IAAI,EAAE;AAClB,gBAAA,IAAI,SAAS,EAAE;AACb,oBAAA,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,WAAmB,KAAI;AAClF,wBAAA,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,OAAO,CAAC;AAClD,4BAAA,OAAO,EAAE,WAAW;4BACpB,MAAM,EAAE,MAAK;AACX,gCAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC5B,gCAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;6BAC5B;4BACD,MAAM,EAAE,MAAK;gCACX,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC5B,gCAAA,IAAI,gBAAgB,EAAE;oCACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC9C,iCAAA;AAAM,qCAAA;AACL,oCAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC5B,iCAAA;6BACF;AACF,yBAAA,CAAC,CAAC;AACL,qBAAC,CAAC,CAAC;AACJ,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,OAAO,CAAC;AAClD,wBAAA,OAAO,EAAE,UAAU;wBACnB,MAAM,EAAE,MAAK;AACX,4BAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;yBAC7B;wBACD,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC;AAC7C,qBAAA,CAAC,CAAC;AACJ,iBAAA;AACF,aAAA;AACF,SAAA;KACF;AAES,IAAA,aAAa,CAAC,IAAO,EAAA;AAC5B,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAmB,EAAE,SAAS,CAAC;AAC9C,YAAA,IAAI,EAAE,CAAC,MAAM,KAAI;AACf,gBAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;aAC5B;AACD,YAAA,KAAK,EAAE,CAAC,KAAK,KAAI;AACf,gBAAA,IAAI,kBAA+B,CAAC;gBACpC,IAAI,KAAK,YAAY,OAAO,EAAE;AAC5B,oBAAA,kBAAkB,GAAG,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,GAAG,KAAK,wBAAwB,CAAC,CAAC;oBACnG,IAAI,kBAAkB,EAAE,MAAM,EAAE;wBAC9B,MAAM,mBAAmB,GAA2B,kBAAkB,CAAC,GAAG,CAAC,CAAC,OAAO,MAAM;4BACvF,IAAI,EAAE,OAAO,CAAC,IAAI;4BAClB,MAAM,EAAE,OAAO,CAAC,MAAM;AACvB,yBAAA,CAAC,CAAC,CAAC;AACJ,wBAAA,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC;AACnD,qBAAA;AACF,iBAAA;gBACD,IAAI,CAAC,kBAAkB,EAAE,MAAM,IAAI,EAAE,KAAK,YAAY,OAAO,CAAC,EAAE;AAC9D,oBAAA,MAAM,KAAK,CAAC;AACb,iBAAA;aACF;AACF,SAAA,CAAC,CAAC;KACJ;IAES,aAAa,CAAC,EAAW,EAAE,UAAmB,EAAA;AACrD,QAAA,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,CAAmB,EAAE,SAAS,CAAC,CAAC,MAAM,KAAI;AACnE,YAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC7B,SAAC,CAAC,CAAC;KACJ;AAES,IAAA,gBAAgB,CACxB,WAAqD,EACrD,MAAiB,EACjB,aAAwD,EAAA;AAExD,QAAA,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,QAAQ,KAAI;YACnC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;AAChE,SAAC,CAAC,CAAC;KACJ;AAES,IAAA,uBAAuB,CAC/B,MAA8B,EAC9B,MAAiB,EACjB,aAAwD,EAAA;AAExD,QAAA,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,KAAI;AAC5B,YAAA,IAAI,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE;AAC7B,gBAAA,UAAU,CAAC,MAAM;AACd,qBAAA,MAAM,CAAC,CAAC,KAAK,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACpD,qBAAA,OAAO,CAAC,CAAC,KAAK,KAAI;AACjB,oBAAA,MAAM,OAAO,GACX,aAAa,GAAG,KAAK,CAAC,IAAI,aAAa,GAAG,KAAK,CAAC,YAAY,eAAe;AACzE,0BAAG,aAAa,GAAG,KAAK,CAAqB;0BAC3C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAChC,oBAAA,IAAI,OAAO,EAAE;AACX,wBAAA,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;AACpC,wBAAA,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AAC/B,wBAAA,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC3B,qBAAA;AACH,iBAAC,CAAC,CAAC;AACN,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;uGAxWmB,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAP,kBAAA,EAAA,EAAA,EAAA,KAAA,EAAAG,EAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAZ,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAY,oDAFX,SAAS,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;;2FAEV,YAAY,EAAA,UAAA,EAAA,CAAA;kBAFjC,SAAS;mBAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAA;;;ACRlC,MACsB,gBAAgB,CAAA;AAKxB,IAAA,MAAA,CAAA;AACA,IAAA,WAAA,CAAA;AACA,IAAA,SAAA,CAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,MAAA,CAAA;AARZ,IAAA,WAAW,CAAI;AACf,IAAA,UAAU,CAAS;IAEnB,WACY,CAAA,MAAc,EACd,WAAwB,EACxB,SAA2B,EAC3B,KAAqB,EACrB,MAAc,EAAA;QAJd,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkB;QAC3B,IAAK,CAAA,KAAA,GAAL,KAAK,CAAgB;QACrB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QAExB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,KAAI;YACrC,IAAI,KAAK,YAAY,aAAa,EAAE;gBAClC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAW,CAAC;gBAC/D,IAAI,IAAI,CAAC,UAAU,EAAE;oBACnB,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC1C,iBAAA;AACF,aAAA;AACD,YAAA,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC3B,SAAC,CAAC,CAAC;QAEH,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;AAClD,YAAA,IAAI,GAAG,CAAC,IAAI,KAAK,SAAS,CAAC,iBAAiB,EAAE;AAC5C,gBAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAY,CAAC,CAAC;AACzC,aAAA;AAAM,iBAAA;gBACL,IAAI,GAAG,CAAC,YAAY,EAAE;oBACpB,IAAI,CAAC,OAAO,EAAE,CAAC;oBACf,IAAI,CAAC,OAAO,EAAE,CAAC;AACf,oBAAA,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;AAC3B,iBAAA;AAAM,qBAAA,IAAI,GAAG,CAAC,IAAI,KAAK,SAAS,CAAC,iBAAiB,EAAE;oBACnD,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;AAChB,oBAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAK;wBACnB,KAAK,IAAI,CAAC,MAAM;6BACb,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC;6BACtF,IAAI,CAAC,MAAK;AACT,4BAAA,IAAI,GAAG,CAAC,IAAI,KAAK,SAAS,CAAC,cAAc,EAAE;gCACzC,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC1B,6BAAA;AACH,yBAAC,CAAC,CAAC;AACP,qBAAC,CAAC,CAAC;AACJ,iBAAA;AACD,gBAAA,IAAI,GAAG,CAAC,IAAI,KAAK,SAAS,CAAC,iBAAiB,EAAE;oBAC5C,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;AACjB,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;;AAGS,IAAA,OAAO,MAAW;;AAGlB,IAAA,QAAQ,MAAW;;IAGnB,eAAe,CAAC,SAAoB,EAAA,GAAU;AAE9C,IAAA,gBAAgB,CAAC,OAAU,EAAA;AACnC,QAAA,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AACpC,QAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;KAC5B;IAID,QAAQ,GAAA;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,KAAI;YACnC,IAAI,GAAG,YAAY,aAAa,EAAE;AAChC,gBAAA,IAAI,CAAC,WAAW,CAAC,0BAA0B,EAAE,CAAC;AAC/C,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;IAES,SAAS,GAAA;AACjB,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,QAAQ,CAAC,mBAAmB,EAAE,CAAC;KAChC;IAES,OAAO,GAAA;AACf,QAAA,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,cAAc,EAAO,CAAC;AAClD,QAAA,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,IAAI,EAAE;AACjE,YAAA,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;AAClE,SAAA;KACF;IAEO,iBAAiB,GAAA;AACvB,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,SAAS,CAAC,CAAC,WAAmB,KAAI;AAC/E,YAAA,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,EAAE,WAAW,EAAE,SAAS,CAAC,kBAAkB,CAAC,CAAC;AAC9E,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,YAAY,CAAC,SAAoB,EAAA;AAC/B,QAAA,OAAO,SAAS,CAAC,SAAS,IAAI,EAAE,CAAC;KAClC;IAED,UAAU,GAAA;AACR,QAAA,OAAO,QAAQ,CAAC,UAAU,EAAE,CAAC;KAC9B;uGAnGmB,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAJ,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,oDADf,EAAE,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;;2FACH,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBADrC,SAAS;mBAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAA;;;ACL3B,MACa,sBAAsB,CAAA;IACjC,SAAS,CAAC,OAA6B,EAAE,IAAiB,EAAA;AACxD,QAAA,IACE,OAAO,CAAC,MAAM,KAAK,MAAM;AACzB,YAAA,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;AACpC,aAAC,OAAO,CAAC,IAAI,KAAK,SAAS,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,EACrD;AACA,YAAA,MAAM,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC;gBAClC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;AACjE,aAAA,CAAC,CAAC;AACH,YAAA,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AACnC,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC7B;uGAbU,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;2GAAtB,sBAAsB,EAAA,CAAA,CAAA;;2FAAtB,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBADlC,UAAU;;AAiBE,MAAA,sBAAsB,GAAG;AACpC,IAAA,OAAO,EAAE,iBAAiB;AAC1B,IAAA,QAAQ,EAAE,sBAAsB;AAChC,IAAA,KAAK,EAAE,IAAI;;;ACnBb,MACa,cAAc,CAAA;IACzB,SAAS,CAAC,GAAyB,EAAE,IAAiB,EAAA;;AAEpD,QAAA,MAAM,aAAa,GAAG,GAAG,CAAC,KAAK,CAAC;AAC9B,YAAA,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,QAAQ,CAAC,iBAAiB,EAAE,CAAC;AACpF,SAAA,CAAC,CAAC;AACH,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KACnC;uGAPU,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;2GAAd,cAAc,EAAA,CAAA,CAAA;;2FAAd,cAAc,EAAA,UAAA,EAAA,CAAA;kBAD1B,UAAU;;AAWE,MAAA,WAAW,GAAG;AACzB,IAAA,OAAO,EAAE,iBAAiB;AAC1B,IAAA,QAAQ,EAAE,cAAc;AACxB,IAAA,KAAK,EAAE,IAAI;;;ACEb,MACa,aAAa,CAAA;AAGJ,IAAA,aAAA,CAAA;AAFpB,IAAA,GAAG,GAAG,aAAa,CAAC,SAAS,EAAE,CAAC;AAEhC,IAAA,WAAA,CAAoB,aAA4B,EAAA;QAA5B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;KAAI;IAEpD,SAAS,CAAC,GAAyB,EAAE,IAAiB,EAAA;QACpD,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;YACrC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAClC,SAAA;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAC1B,GAAG,CAAC;AACF,YAAA,IAAI,EAAE,CAAC,KAAK,KAAI;gBACd,IAAI,KAAK,YAAY,YAAY,EAAE;oBACjC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;AACrC,wBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;AAC3B,qBAAA;oBAED,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBAClD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAe,YAAA,EAAA,QAAQ,CAAE,CAAA,CAAC,CAAC;oBAC1C,IAAI,QAAQ,KAAK,KAAK,EAAE;AACtB,wBAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAmB,CAAC;AAC3C,wBAAA,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACzB,wBAAA,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,qBAAA;AACF,iBAAA;aACF;AACD,YAAA,KAAK,EAAE,CAAC,GAAG,KAAI;gBACb,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;AACrC,oBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;AAC3B,iBAAA;gBACD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;gBAClC,IAAI,GAAG,YAAY,iBAAiB,EAAE;oBACpC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAG,EAAA,GAAG,CAAC,MAAM,CAAsB,oBAAA,CAAA,CAAC,CAAC;oBACpD,QAAQ,GAAG,CAAC,MAAM;AAChB,wBAAA,KAAK,GAAG,CAAC;AACT,wBAAA,KAAK,GAAG;AACN,4BAAA,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;4BAC/B,MAAM,IAAI,iBAAiB,EAAE,CAAC;AAChC,wBAAA,KAAK,GAAG;AACN,4BAAA,MAAM,IAAI,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;AAC1D,wBAAA,KAAK,GAAG,CAAC;AACT,wBAAA,KAAK,GAAG;4BACN,MAAM,IAAI,sBAAsB,EAAE,CAAC;AACtC,qBAAA;AACF,iBAAA;aACF;AACF,SAAA,CAAC,CACH,CAAC;KACH;uGAhDU,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAS,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;2GAAb,aAAa,EAAA,CAAA,CAAA;;2FAAb,aAAa,EAAA,UAAA,EAAA,CAAA;kBADzB,UAAU;;AAoDE,MAAA,UAAU,GAAG;AACxB,IAAA,OAAO,EAAE,iBAAiB;AAC1B,IAAA,QAAQ,EAAE,aAAa;AACvB,IAAA,KAAK,EAAE,IAAI;;;ACrEb,MAGa,iBAAiB,CAAA;AACN,IAAA,IAAA,CAAA;AAAtB,IAAA,WAAA,CAAsB,IAAgB,EAAA;QAAhB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;KAAI;AAEhC,IAAA,YAAY,CACpB,QAAqC,EACrC,SAAiB,EACjB,8BAAuC,IAAI,EAAA;AAE3C,QAAA,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE;AAChC,YAAA,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AAClC,YAAA,IAAI,QAAQ,CAAC,KAAK,KAAK,CAAC,2BAA2B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,sBAAsB,CAAC,EAAE;gBAChG,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,EAAE,gBAAgB,KAAK,GAAG,CAAC,CAAC;gBACtE,IAAI,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,CAAC,SAAS,KAAI;AACnD,oBAAA,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC;AAC1B,wBAAA,YAAY,EAAE,IAAI;wBAClB,OAAO,EAAE,QAAQ,CAAC,OAAO;wBACzB,IAAI,EAAE,SAAS,CAAC,gBAAgB;wBAChC,SAAS;wBACT,SAAS;AACV,qBAAA,CAAC,CAAC;AACL,iBAAC,CAAC,CAAC;AACJ,aAAA;AACF,SAAA;KACF;IAES,qBAAqB,GAAA;AAC7B,QAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KACjB;IAES,aAAa,GAAA;QACrB,QAAQ,CAAC,mBAAmB,EAAE,CAAC;QAC/B,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACxG;uGAhCU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAP,IAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAjB,IAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAFhB,MAAM,EAAA,CAAA,CAAA;;2FAEP,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAH7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACHD,MACa,SAAS,CAAA;IACpB,WAAW,CACT,KAA6B,EAC7B,KAA0B,EAAA;AAE1B,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAC5D;IAED,gBAAgB,CACd,UAAkC,EAClC,KAA0B,EAAA;QAE1B,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;KAC5C;AAES,IAAA,YAAY,CAAC,KAA0B,EAAA;AAC/C,QAAA,IAAI,QAAQ,CAAC,UAAU,EAAE,EAAE;AACzB,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AACD,QAAA,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC;AAC1B,YAAA,YAAY,EAAE,KAAK;AACnB,YAAA,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,SAAS,CAAC,kBAAkB;YAClC,SAAS,EAAE,KAAK,CAAC,GAAG;AACrB,SAAA,CAAC,CAAC;AACH,QAAA,OAAO,KAAK,CAAC;KACd;AAES,IAAA,WAAW,CACnB,KAA0B,EAAA;AAE1B,QAAA,OAAO,IAAI,CAAC;KACb;uGAhCU,SAAS,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;2GAAT,SAAS,EAAA,CAAA,CAAA;;2FAAT,SAAS,EAAA,UAAA,EAAA,CAAA;kBADrB,UAAU;;;MCEW,kBAAkB,CAAA;AACtC,IAAA,aAAa,CACX,SAAiC,EACjC,YAAoC,EACpC,YAAiC,EACjC,SAA+B,EAAA;QAE/B,MAAM,IAAI,GAAG,SAAS,CAAC,aAAa,KAAK,SAAS,IAAI,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;AACnG,QAAA,SAAS,CAAC,aAAa,GAAG,KAAK,CAAC;AAChC,QAAA,OAAO,IAAI,IAAI,SAAS,CAAC,aAAa,EAAE,CAAC;KAC1C;AAGF;;MCrBY,gBAAgB,CAAA;AAC3B,IAAA,EAAE,CAAS;AACX,IAAA,SAAS,CAAS;AAClB,IAAA,YAAY,CAAS;AAErB,IAAA,WAAA,CAAY,EAAU,EAAE,SAAiB,EAAE,YAAoB,EAAA;AAC7D,QAAA,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;AACb,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,QAAA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;AACF;;ACVD;AACA;MACa,iBAAiB,CAAA;AAC1B,IAAA,IAAI,CAAS;AACb,IAAA,SAAS,CAAS;AAClB,IAAA,YAAY,CAAS;AACxB;;ACND;;AAEG;;ACFH;;AAEG;;;;"}