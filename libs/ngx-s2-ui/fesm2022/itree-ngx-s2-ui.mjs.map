{"version":3,"file":"itree-ngx-s2-ui.mjs","sources":["../../../projects/ngx-s2-ui/src/lib/animations/expand-from-top.ts","../../../projects/ngx-s2-ui/src/lib/pipes/bytes-to-text.pipe.ts","../../../projects/ngx-s2-ui/src/lib/utils/get-mime-type-class.ts","../../../projects/ngx-s2-ui/src/lib/pipes/file-type-to-icon.pipe.ts","../../../projects/ngx-s2-ui/src/lib/utils/get-file-extension.ts","../../../projects/ngx-s2-ui/src/lib/utils/get-unique-name.ts","../../../projects/ngx-s2-ui/src/lib/utils/get-unique-file-name.ts","../../../projects/ngx-s2-ui/src/lib/components/icon/icon.component.ts","../../../projects/ngx-s2-ui/src/lib/components/icon/icon.component.html","../../../projects/ngx-s2-ui/src/lib/pipes/replace.pipe.ts","../../../projects/ngx-s2-ui/src/lib/services/s2-ui-settings.service.ts","../../../projects/ngx-s2-ui/src/lib/pipes/date.pipe.ts","../../../projects/ngx-s2-ui/src/lib/directives/template.directive.ts","../../../projects/ngx-s2-ui/src/lib/services/s2-ui-translations.service.ts","../../../projects/ngx-s2-ui/src/lib/components/file-upload/file-upload.component.ts","../../../projects/ngx-s2-ui/src/lib/components/file-upload/file-upload.component.html","../../../projects/ngx-s2-ui/src/lib/services/s2-ui-popup-messages.service.ts","../../../projects/ngx-s2-ui/src/lib/components/popup-messages/popup-messages.component.ts","../../../projects/ngx-s2-ui/src/lib/components/popup-messages/popup-messages.component.html","../../../projects/ngx-s2-ui/src/lib/components/checkbox-tree/checkbox-tree.component.ts","../../../projects/ngx-s2-ui/src/lib/components/checkbox-tree/checkbox-tree.component.html","../../../projects/ngx-s2-ui/src/public-api.ts","../../../projects/ngx-s2-ui/src/itree-ngx-s2-ui.ts"],"sourcesContent":["import { AnimationTriggerMetadata, animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport const expandFromTop = (name = 'expandFromTop'): AnimationTriggerMetadata => {\r\n  return trigger(name, [\r\n    transition(':enter', [\r\n      style({\r\n        opacity: 0,\r\n        transform: 'scaleY(0)',\r\n        'transform-origin': 'top',\r\n        height: 0,\r\n      }),\r\n      animate(\r\n        '0.15s linear',\r\n        style({\r\n          opacity: 1,\r\n          transform: 'scaleY(1)',\r\n          height: '*',\r\n        })\r\n      ),\r\n    ]),\r\n    transition(':leave', [\r\n      style({\r\n        opacity: 1,\r\n        transform: 'scaleY(1)',\r\n        'transform-origin': 'top',\r\n        height: '*',\r\n      }),\r\n      animate('0.15s linear', style({ opacity: 0, transform: 'scaleY(0)', height: 0 })),\r\n    ]),\r\n  ]);\r\n};\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'bytesToText',\r\n  standalone: true,\r\n})\r\nexport class BytesToTextPipe implements PipeTransform {\r\n  static readonly defaultPrecision = 2;\r\n  static readonly defaultUnits = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'];\r\n\r\n  transform(\r\n    bytes: number,\r\n    precision: number = BytesToTextPipe.defaultPrecision,\r\n    units = BytesToTextPipe.defaultUnits\r\n  ): string {\r\n    if (typeof precision !== 'number' || isNaN(precision) || !isFinite(precision) || precision < 0) {\r\n      precision = BytesToTextPipe.defaultPrecision;\r\n    }\r\n\r\n    if (!units || units.length < 2) {\r\n      units = BytesToTextPipe.defaultUnits;\r\n    }\r\n\r\n    const power = Math.min(Math.round(Math.log(bytes) / Math.log(1024)), units.length - 1);\r\n    // const unitIndex = units[power];\r\n    let unitIndex = power;\r\n    let size = bytes / Math.pow(1024, power); // size in new units\r\n\r\n    if (size < 0.5 && unitIndex > 0) {\r\n      size = size * 1024;\r\n      unitIndex = unitIndex - 1;\r\n    }\r\n\r\n    const roundMultiplier = precision > 0 ? Math.pow(10, precision) : 1;\r\n    const roundedSize = Math.round(size * roundMultiplier) / roundMultiplier; // keep up to 2 decimals\r\n\r\n    return `${roundedSize} ${units[unitIndex]}`;\r\n  }\r\n}\r\n","export const getMimeTypeClass = (mimeType: string): string => {\r\n  return mimeType.substring(0, mimeType.indexOf('/'));\r\n};\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nimport { getMimeTypeClass } from '../utils/get-mime-type-class';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n@Pipe({\r\n  name: 'fileTypeToIcon',\r\n  standalone: true,\r\n})\r\nexport class FileTypeToIconPipe implements PipeTransform {\r\n  static icons: Record<string, string> = {\r\n    'application/geo+json': 'map',\r\n    'application/json': 'data_object',\r\n    'application/pdf': 'picture_as_pdf',\r\n    'application/zip': 'folder_zip',\r\n    'audio/*': 'music_note',\r\n    'font/*': 'font_download',\r\n    'image/*': 'imagesmode',\r\n    'text/*': 'description',\r\n    'text/css': 'css',\r\n    'text/html': 'html',\r\n    'text/javascript': 'javascript',\r\n    'video/*': 'videocam',\r\n  };\r\n\r\n  transform(value: string, defaultIcon = 'draft'): string {\r\n    return FileTypeToIconPipe.icons[value] || this.getWildcardType(value) || defaultIcon;\r\n  }\r\n\r\n  private getWildcardType(value: string): string {\r\n    const wildcardTypeKey = Object.keys(FileTypeToIconPipe.icons)\r\n      .filter((mimeType) => mimeType.endsWith('/*'))\r\n      .find((mimeType) => getMimeTypeClass(mimeType) === getMimeTypeClass(value));\r\n    return wildcardTypeKey && FileTypeToIconPipe.icons[wildcardTypeKey];\r\n  }\r\n}\r\n","export const getFileExtension = (fileName: string): string => {\r\n  return fileName.includes('.') ? `.${fileName.split('.').pop()}` : undefined;\r\n};\r\n","export const getUniqueName = (name: string, usedNames: string[]): string => {\r\n  if (usedNames.some((usedName) => usedName === name)) {\r\n    const suffixNumber = usedNames.reduce((result, usedName) => {\r\n      if (usedName !== name && usedName?.startsWith(name)) {\r\n        const usedNameEnd = usedName.slice(name.length);\r\n        if (/^ \\(\\d+\\)$/.test(usedNameEnd)) {\r\n          const usedNameSuffixNumber = parseInt(/\\d+/.exec(usedNameEnd)[0]);\r\n          if (usedNameSuffixNumber >= result) {\r\n            result = usedNameSuffixNumber + 1;\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    }, 1);\r\n    return getUniqueName(`${name} (${suffixNumber})`, usedNames);\r\n  }\r\n  return name;\r\n};\r\n","import { getFileExtension } from './get-file-extension';\r\nimport { getUniqueName } from './get-unique-name';\r\n\r\nexport const getUniqueFileName = (name: string, usedNames: string[]): string => {\r\n  const nameExtension = getFileExtension(name);\r\n  const nameWithoutExtension = name.slice(0, nameExtension && -nameExtension.length);\r\n  const filteredUsedNamesWithoutExtension = usedNames\r\n    .filter((usedName) =>\r\n      nameExtension ? usedName.toLowerCase().endsWith(nameExtension.toLowerCase()) : !getFileExtension(usedName)\r\n    )\r\n    .map((usedName) => usedName.slice(0, nameExtension && -nameExtension.length));\r\n  return `${getUniqueName(nameWithoutExtension, filteredUsedNamesWithoutExtension)}${nameExtension || ''}`;\r\n};\r\n","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 's2-icon',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './icon.component.html',\r\n  styleUrls: ['./icon.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: { class: 'material-symbols-outlined s2-icon' },\r\n})\r\nexport class IconComponent {}\r\n","<ng-content></ng-content>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'replace',\r\n  standalone: true,\r\n})\r\nexport class ReplacePipe implements PipeTransform {\r\n  transform(value: string, pattern: string | RegExp, replacement: string): unknown {\r\n    return value.replace(pattern, replacement);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface S2UiSettings {\r\n  dateFormat: string;\r\n  dateTimeFormat: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class S2UiSettingsService {\r\n  settings: S2UiSettings = {\r\n    dateFormat: 'yyyy-MM-dd',\r\n    dateTimeFormat: 'yyyy-MM-dd HH:mm:ss',\r\n  };\r\n\r\n  setSettings(settings: S2UiSettings): void {\r\n    this.settings = { ...this.settings, ...settings };\r\n  }\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { S2UiSettingsService } from '../services/s2-ui-settings.service';\r\n\r\n@Pipe({\r\n  name: 's2Date',\r\n  standalone: true,\r\n})\r\nexport class S2DatePipe implements PipeTransform {\r\n  constructor(private datePipe: DatePipe, private settingsService: S2UiSettingsService) {}\r\n\r\n  transform(value: Date | number | string, showTime = false, ...options: string[]): string {\r\n    return this.datePipe.transform(\r\n      value,\r\n      this.settingsService.settings[showTime ? 'dateTimeFormat' : 'dateFormat'],\r\n      ...options\r\n    );\r\n  }\r\n}\r\n","import { Directive, Input, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[s2Template]',\r\n  standalone: true,\r\n})\r\nexport class TemplateDirective<T = unknown> {\r\n  @Input() s2Template = '';\r\n  @Input() s2TemplateExtras: T;\r\n  constructor(public template: TemplateRef<unknown>) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface S2UiTranslations {\r\n  action: {\r\n    browse: string;\r\n    close: string;\r\n    dragFilesHere: string;\r\n    selectAll: string;\r\n  };\r\n  general: {\r\n    or: string;\r\n  };\r\n  errorMsg: {\r\n    invalidFileFormat: string;\r\n    maxFilesExceed: string;\r\n    maxFileSizeExceed: string;\r\n  };\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class S2UiTranslationsService {\r\n  translations: S2UiTranslations = {\r\n    action: {\r\n      browse: 'Browse',\r\n      close: 'Close',\r\n      dragFilesHere: 'Drag files here',\r\n      selectAll: 'Select all',\r\n    },\r\n    general: {\r\n      or: 'Or',\r\n    },\r\n    errorMsg: {\r\n      invalidFileFormat: 'Invalid file format! Allowed file types: {0}',\r\n      maxFilesExceed: 'Total number of files exceeded ({0})',\r\n      maxFileSizeExceed: 'Maximum file size exceeded ({0})',\r\n    },\r\n  };\r\n\r\n  setTranslations(translations: S2UiTranslations): void {\r\n    this.translations = { ...this.translations, ...translations };\r\n  }\r\n}\r\n","import { BytesToTextPipe } from '../../pipes/bytes-to-text.pipe';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  AfterContentInit,\r\n  Component,\r\n  ContentChildren,\r\n  DestroyRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { expandFromTop } from '../../animations/expand-from-top';\r\nimport { FileTypeToIconPipe } from '../../pipes/file-type-to-icon.pipe';\r\nimport { getFileExtension } from '../../utils/get-file-extension';\r\nimport { getMimeTypeClass } from '../../utils/get-mime-type-class';\r\nimport { getUniqueFileName } from '../../utils/get-unique-file-name';\r\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\r\nimport { IconComponent } from '../icon/icon.component';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { ReplacePipe } from '../../pipes/replace.pipe';\r\nimport { S2DatePipe } from '../../pipes/date.pipe';\r\nimport { S2UiTranslationsService } from '../../services/s2-ui-translations.service';\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { TemplateDirective } from '../../directives/template.directive';\r\n\r\nexport interface S2File<T = unknown> {\r\n  name: string;\r\n  type: string;\r\n  date?: Date;\r\n  size: number;\r\n  uploaded?: boolean;\r\n  uploadProgress?: number;\r\n  key?: string | number;\r\n  icon?: string;\r\n  extras?: T;\r\n  file?: File;\r\n}\r\n\r\nexport interface S2FileUploadError {\r\n  files: S2File[];\r\n  error: Error;\r\n}\r\n\r\n@Component({\r\n  selector: 's2-file-upload',\r\n  standalone: true,\r\n  imports: [CommonModule, IconComponent, BytesToTextPipe, ReplacePipe, S2DatePipe, FileTypeToIconPipe],\r\n  templateUrl: './file-upload.component.html',\r\n  styleUrls: ['./file-upload.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n  host: { class: 's2-file-upload' },\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      multi: true,\r\n      useExisting: FileUploadComponent,\r\n    },\r\n  ],\r\n  animations: [expandFromTop()],\r\n})\r\nexport class FileUploadComponent implements ControlValueAccessor, AfterContentInit {\r\n  static readonly S2_TEMPLATE_HEADER = 'header';\r\n  static readonly S2_TEMPLATE_HEADER_CONTENT = 'header-content';\r\n  static readonly S2_TEMPLATE_FILE_INFO = 'file-info';\r\n  readonly S2_TEMPLATE_HEADER = FileUploadComponent.S2_TEMPLATE_HEADER;\r\n  readonly S2_TEMPLATE_HEADER_CONTENT = FileUploadComponent.S2_TEMPLATE_HEADER_CONTENT;\r\n  readonly S2_TEMPLATE_FILE_INFO = FileUploadComponent.S2_TEMPLATE_FILE_INFO;\r\n\r\n  @Input() accept: string;\r\n  @Input() autoUploadMethod: (files: S2File[]) => Observable<HttpEvent<S2File[]>>;\r\n  @Input() browseButtonText: string;\r\n  @Input() errorDuration = 5000;\r\n  @Input() inputId: string;\r\n  @Input() maxFiles = 5;\r\n  @Input() maxFileSize: number = 10485760;\r\n  @Input() showDate = true;\r\n  @Input() showDragDropText: boolean | 'responsive' = 'responsive';\r\n  @Input() showHeaderIcon: boolean | 'responsive' = 'responsive';\r\n  @Output() clickDownload = new EventEmitter<S2File>();\r\n  @Output() clickRemove = new EventEmitter<S2File>();\r\n  @Output() autoUploadSuccess = new EventEmitter<S2File[]>();\r\n  @Output() autoUploadError = new EventEmitter<S2FileUploadError>();\r\n  @ContentChildren(TemplateDirective)\r\n  templatesQueryList: QueryList<TemplateDirective>;\r\n  templates: Record<string, TemplateRef<unknown>> = {};\r\n\r\n  files: S2File[] = [];\r\n  error: 'maxFiles' | 'maxFileSize' | 'accept';\r\n  errorClearTimeout: NodeJS.Timeout;\r\n\r\n  disabled = false;\r\n  onChange: (value: S2File[]) => void;\r\n  onTouched: () => void;\r\n\r\n  constructor(public translationsService: S2UiTranslationsService, private destroyRef: DestroyRef) {}\r\n\r\n  ngAfterContentInit(): void {\r\n    this.updateTemplates();\r\n    this.templatesQueryList.changes.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(() => {\r\n      this.updateTemplates();\r\n    });\r\n  }\r\n\r\n  writeValue(files: S2File[]): void {\r\n    if (Array.isArray(files)) {\r\n      this.files = files;\r\n    } else {\r\n      this.files = [];\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: (value: S2File[]) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  loadFiles(files: File[]): void {\r\n    if (files.length) {\r\n      if (files.length > this.maxFiles - this.files.length) {\r\n        this.showError('maxFiles');\r\n      } else if (typeof this.maxFileSize === 'number' && files.some((file) => file.size > this.maxFileSize)) {\r\n        this.showError('maxFileSize');\r\n      } else if (files.some((file) => !this.isFileTypeAccepted(file))) {\r\n        this.showError('accept');\r\n      } else {\r\n        this.showError(undefined);\r\n        const s2Files = files.map((file) => ({\r\n          name: getUniqueFileName(\r\n            file.name,\r\n            this.files.map((file) => file.name)\r\n          ),\r\n          type: file.type,\r\n          size: file.size,\r\n          uploaded: false,\r\n          date: new Date(),\r\n          file,\r\n        }));\r\n        this.files = [...this.files, ...s2Files];\r\n        this.autoUploadFiles(s2Files);\r\n        this.onChange?.(this.files);\r\n      }\r\n    }\r\n  }\r\n\r\n  autoUploadFiles(files: S2File[]): void {\r\n    this.autoUploadMethod?.(files)\r\n      .pipe(\r\n        catchError((error) => {\r\n          files?.forEach((file) => {\r\n            file.uploadProgress = undefined;\r\n          });\r\n          this.onChange?.(this.files);\r\n          this.autoUploadError.emit({ files, error: error as Error });\r\n          throw error;\r\n        })\r\n      )\r\n      .subscribe({\r\n        next: (event) => {\r\n          if (event.type === HttpEventType.UploadProgress) {\r\n            const progress = Math.round((event.loaded * 100) / event.total);\r\n            files?.forEach((file) => {\r\n              file.uploadProgress = progress;\r\n            });\r\n          } else if (event.type === HttpEventType.Response) {\r\n            if (event.status >= 200 && event.status < 300) {\r\n              files?.forEach((file) => {\r\n                file.uploadProgress = undefined;\r\n                file.uploaded = true;\r\n                const receivedFile = event.body?.find((responseFile) => responseFile?.name === file.name);\r\n                if (receivedFile) {\r\n                  Object.assign(file, receivedFile);\r\n                }\r\n              });\r\n              this.onChange?.(this.files);\r\n              this.autoUploadSuccess.emit(files);\r\n            } else {\r\n              throw new Error(`HttpResponse status ${event.status}`);\r\n            }\r\n          }\r\n        },\r\n      });\r\n  }\r\n\r\n  handleInputChange(event: Event): void {\r\n    event.preventDefault();\r\n    if (!this.disabled) {\r\n      this.onTouched?.();\r\n      this.loadFiles(Array.from((event.target as HTMLInputElement).files));\r\n    }\r\n  }\r\n\r\n  handleDropFile(event: DragEvent): void {\r\n    event.preventDefault();\r\n    if (!this.disabled) {\r\n      this.onTouched?.();\r\n      this.loadFiles(Array.from(event.dataTransfer.files));\r\n    }\r\n  }\r\n\r\n  handleDownloadFile(file: S2File): void {\r\n    this.clickDownload.emit(file);\r\n  }\r\n\r\n  handleRemoveFile(index: number): void {\r\n    this.clickRemove.emit(this.files[index]);\r\n    this.files.splice(index, 1);\r\n    this.onChange?.(this.files);\r\n  }\r\n\r\n  showError(error: typeof this.error): void {\r\n    clearTimeout(this.errorClearTimeout);\r\n    this.error = error;\r\n    if (error) {\r\n      this.errorClearTimeout = setTimeout(() => {\r\n        this.error = undefined;\r\n      }, this.errorDuration);\r\n    }\r\n  }\r\n\r\n  isFileTypeAccepted(file: File): boolean {\r\n    if (!this.accept || this.accept === '*') {\r\n      return true;\r\n    }\r\n    const acceptArray = this.accept\r\n      .split(',')\r\n      .map((type) => type.trim())\r\n      .filter((type) => type);\r\n    return acceptArray.some((acceptableType) => {\r\n      if (acceptableType.indexOf('*') !== -1) {\r\n        return getMimeTypeClass(file.type) === getMimeTypeClass(acceptableType);\r\n      } else {\r\n        return (\r\n          file.type === acceptableType || getFileExtension(file.name).toLowerCase() === acceptableType.toLowerCase()\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  updateTemplates(): void {\r\n    Object.keys(this.templates).forEach((templateKey) => {\r\n      if (!this.templatesQueryList.some((template) => template.s2Template === templateKey)) {\r\n        delete this.templates[templateKey];\r\n      }\r\n    });\r\n    this.templatesQueryList.forEach((template) => {\r\n      this.templates[template.s2Template] = template.template;\r\n    });\r\n  }\r\n}\r\n","<input\r\n  class=\"s2-file-upload__input\"\r\n  type=\"file\"\r\n  [id]=\"inputId\"\r\n  (change)=\"handleInputChange($event)\"\r\n  [multiple]=\"maxFiles > 1 && files.length < (maxFiles-1)\"\r\n  [accept]=\"accept\"\r\n  [disabled]=\"disabled\"\r\n  #inputFile\r\n/>\r\n\r\n<ng-template *ngIf=\"templates[S2_TEMPLATE_HEADER]\" [ngTemplateOutlet]=\"templates[S2_TEMPLATE_HEADER]\" />\r\n\r\n<div\r\n  *ngIf=\"!templates[S2_TEMPLATE_HEADER]\"\r\n  class=\"s2-file-upload-header\"\r\n  [ngClass]=\"{'s2-file-upload-header--disabled': disabled || files.length >= maxFiles}\"\r\n  (dragover)=\"$event.preventDefault(); $event.stopPropagation()\"\r\n  (dragleave)=\"$event.preventDefault(); $event.stopPropagation()\"\r\n  (drop)=\"handleDropFile($event)\"\r\n>\r\n  <ng-template\r\n    *ngIf=\"templates[S2_TEMPLATE_HEADER_CONTENT]\"\r\n    [ngTemplateOutlet]=\"templates[S2_TEMPLATE_HEADER_CONTENT]\"\r\n  />\r\n\r\n  <ng-container *ngIf=\"!templates[S2_TEMPLATE_HEADER_CONTENT]\">\r\n    <s2-icon\r\n      *ngIf=\"showHeaderIcon\"\r\n      class=\"s2-file-upload-header__icon\"\r\n      [ngClass]=\"{'s2-file-upload-header__icon--responsive': showHeaderIcon === 'responsive'}\"\r\n      >file_upload</s2-icon\r\n    >\r\n    <div class=\"s2-file-upload-header__content-wrapper\">\r\n      <ng-container *ngIf=\"!error\">\r\n        <ng-container *ngIf=\"showDragDropText\">\r\n          <span\r\n            class=\"s2-file-upload-header__text\"\r\n            [ngClass]=\"{'s2-file-upload-header__text--responsive': showDragDropText === 'responsive'}\"\r\n            >{{ translationsService.translations.action.dragFilesHere }}</span\r\n          >\r\n          <span\r\n            class=\"s2-file-upload-header__text\"\r\n            [ngClass]=\"{'s2-file-upload-header__text--responsive': showDragDropText === 'responsive'}\"\r\n            >{{ translationsService.translations.general.or | lowercase }}</span\r\n          >\r\n        </ng-container>\r\n        <button\r\n          type=\"button\"\r\n          class=\"s2-file-upload-header__choose\"\r\n          [disabled]=\"disabled || files.length >= maxFiles\"\r\n          (click)=\"inputFile.click()\"\r\n        >\r\n          {{ browseButtonText === undefined ? translationsService.translations.action.browse : browseButtonText }}\r\n        </button>\r\n      </ng-container>\r\n      <span *ngIf=\"error\" class=\"s2-file-upload-header__error\">\r\n        <ng-container\r\n          *ngIf=\"error === 'accept'\"\r\n          >{{ translationsService.translations.errorMsg.invalidFileFormat | replace:'{0}':accept }}</ng-container\r\n        >\r\n        <ng-container\r\n          *ngIf=\"error === 'maxFiles'\"\r\n          >{{ translationsService.translations.errorMsg.maxFilesExceed | replace:'{0}':maxFiles+'' }}</ng-container\r\n        >\r\n        <ng-container\r\n          *ngIf=\"error === 'maxFileSize'\"\r\n          >{{ translationsService.translations.errorMsg.maxFileSizeExceed | replace:'{0}':(maxFileSize | bytesToText)\r\n          }}</ng-container\r\n        >\r\n      </span>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n\r\n<ul class=\"s2-uploaded-files\">\r\n  <li *ngFor=\"let file of files; index as i\" class=\"s2-uploaded-file\" @expandFromTop>\r\n    <div class=\"s2-uploaded-file__icon-wrapper\">\r\n      <s2-icon\r\n        class=\"s2-uploaded-file__icon\"\r\n        [ngClass]=\"{'s2-uploaded-file__icon--uploaded': file.uploaded}\"\r\n        >{{ file.icon || (file.type | fileTypeToIcon) }}</s2-icon\r\n      >\r\n    </div>\r\n    <ng-container *ngTemplateOutlet=\"templates[S2_TEMPLATE_FILE_INFO]; context: {$implicit: file, index: i}\" />\r\n    <div *ngIf=\"!templates[S2_TEMPLATE_FILE_INFO]\" class=\"s2-uploaded-file__info\">\r\n      <span *ngIf=\"!file.uploaded\" class=\"s2-uploaded-file__info-name\" [title]=\"file.name\">{{ file.name }}</span>\r\n      <button\r\n        *ngIf=\"file.uploaded\"\r\n        type=\"button\"\r\n        class=\"s2-uploaded-file__info-name\"\r\n        [ngClass]=\"{'s2-uploaded-file__info-name--downloadable': true}\"\r\n        [title]=\"file.name\"\r\n        (click)=\"handleDownloadFile(file)\"\r\n      >\r\n        {{ file.name }}\r\n      </button>\r\n      <div\r\n        *ngIf=\"!file.uploaded && (file.uploadProgress || file.uploadProgress === 0)\"\r\n        class=\"s2-uploaded-file__info-progress\"\r\n      >\r\n        <div class=\"s2-uploaded-file__info-progress-background\">\r\n          <div\r\n            class=\"s2-uploaded-file__info-progress-line\"\r\n            [ngStyle]=\"{'width.%': file.uploadProgress}\"\r\n            role=\"progressbar\"\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n            [attr.aria-valuenow]=\"file.uploadProgress\"\r\n            [attr.aria-label]=\"file.name\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <span\r\n        *ngIf=\"file.uploaded || (!file.uploadProgress && file.uploadProgress !== 0)\"\r\n        class=\"s2-uploaded-file__info-details\"\r\n      >\r\n        <span *ngIf=\"showDate && file.date\" class=\"s2-uploaded-file__info-details-date\">\r\n          {{ file.date | s2Date }}\r\n        </span>\r\n        <span\r\n          class=\"s2-uploaded-file__info-details-size\"\r\n          [ngClass]=\"{'s2-uploaded-file__info-details-size--uploaded': file.uploaded}\"\r\n        >\r\n          {{ file.size | bytesToText }} <s2-icon *ngIf=\"file.uploaded\">check</s2-icon>\r\n        </span>\r\n      </span>\r\n    </div>\r\n    <button\r\n      type=\"button\"\r\n      class=\"s2-uploaded-file__remove\"\r\n      (click)=\"handleRemoveFile(i)\"\r\n      [disabled]=\"!file.uploaded && (file.uploadProgress || file.uploadProgress === 0)\"\r\n    >\r\n      <s2-icon class=\"s2-uploaded-file__remove-icon\">{{ file.uploaded ? 'delete' : 'close' }}</s2-icon>\r\n    </button>\r\n  </li>\r\n</ul>\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface S2UiPopupMessage<T = unknown> {\r\n  closable?: boolean;\r\n  containerKey?: string | number;\r\n  data?: T;\r\n  duration?: number;\r\n  heading?: string | null;\r\n  icon?: string;\r\n  key?: string | number;\r\n  severity: 'error' | 'info' | 'success' | 'warning' | null;\r\n  text?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class S2UiPopupMessagesService {\r\n  messages: S2UiPopupMessage[] = [];\r\n\r\n  add(message: S2UiPopupMessage): void {\r\n    this.messages.push(message);\r\n    if (message.duration === undefined || message.duration > 0) {\r\n      setTimeout(() => {\r\n        this.remove(message);\r\n      }, message.duration || 5000);\r\n    }\r\n  }\r\n\r\n  addAll(messages: S2UiPopupMessage[]): void {\r\n    messages.forEach((message) => {\r\n      this.add(message);\r\n    });\r\n  }\r\n\r\n  remove(message: S2UiPopupMessage): boolean {\r\n    if (message && this.messages.includes(message)) {\r\n      this.messages.splice(this.messages.indexOf(message), 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removeAt(index: number): boolean {\r\n    if (this.messages[index]) {\r\n      this.messages.splice(index, 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removeByKey(key: S2UiPopupMessage['key']): boolean {\r\n    const message = this.messages.find((message) => message.key === key);\r\n    if (message) {\r\n      this.messages.splice(this.messages.indexOf(message), 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  clear(): void {\r\n    this.messages.splice(0, this.messages.length);\r\n  }\r\n}\r\n","import { Component, HostBinding, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { S2UiPopupMessage, S2UiPopupMessagesService } from '../../services/s2-ui-popup-messages.service';\r\nimport { IconComponent } from '../icon/icon.component';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { S2UiTranslationsService } from '../../services/s2-ui-translations.service';\r\n\r\n@Component({\r\n  selector: 's2-popup-messages',\r\n  standalone: true,\r\n  imports: [CommonModule, IconComponent],\r\n  templateUrl: './popup-messages.component.html',\r\n  styleUrls: ['./popup-messages.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: { class: 's2-popup-messages' },\r\n  animations: [\r\n    trigger('showHide', [\r\n      state(\r\n        'visible',\r\n        style({\r\n          transform: 'translate(0, 0)',\r\n          opacity: 1,\r\n        })\r\n      ),\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n          transform: '{{transformValue}}',\r\n        }),\r\n        animate('0.2s ease'),\r\n      ]),\r\n      transition(':leave', [animate('0.2s ease', style({ opacity: 0, transform: '{{transformValue}}' }))]),\r\n    ]),\r\n  ],\r\n})\r\nexport class PopupMessagesComponent implements OnChanges {\r\n  @HostBinding('class') private hostPositionClass: string = 's2-popup-messages--position-top-center';\r\n  @Input() key: string | number;\r\n  @Input() position:\r\n    | 'top-center'\r\n    | 'top-left'\r\n    | 'top-right'\r\n    | 'bottom-center'\r\n    | 'bottom-left'\r\n    | 'bottom-right'\r\n    | 'center' = 'top-center';\r\n\r\n  @Input() fadeDirection: 'top' | 'left' | 'right' | 'bottom' = 'top';\r\n  readonly defaultFadeDirectionTransition = 'translateY(100%)';\r\n  fadeDirectionTransitions: Record<typeof this.fadeDirection, string> = {\r\n    top: 'translateY(-100%)',\r\n    left: 'translateX(-100%)',\r\n    right: 'translateX(100%)',\r\n    bottom: 'translateY(100%)',\r\n  };\r\n\r\n  icons: Record<S2UiPopupMessage['severity'], string> = {\r\n    error: 'error',\r\n    warning: 'warning',\r\n    success: 'check_circle',\r\n    info: 'info',\r\n  };\r\n\r\n  constructor(public service: S2UiPopupMessagesService, public translationsService: S2UiTranslationsService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.position) {\r\n      const currentValue = changes.position.currentValue as typeof this.position;\r\n      if (currentValue) {\r\n        this.hostPositionClass = 's2-popup-messages--position-' + currentValue;\r\n      } else {\r\n        this.hostPositionClass = '';\r\n      }\r\n    }\r\n  }\r\n}\r\n","<ng-container *ngFor=\"let message of service.messages; index as i\">\r\n  <div\r\n    [@showHide]=\"{ value: 'visible', params: {transformValue: fadeDirectionTransitions[fadeDirection] || defaultFadeDirectionTransition} }\"\r\n    *ngIf=\"(!key && !message.containerKey) || key === message.containerKey\"\r\n    class=\"s2-popup-message\"\r\n    [ngClass]=\"{'s2-popup-message--closable': message.closable === undefined || message.closable}\"\r\n    role=\"alertdialog\"\r\n    [attr.aria-labelledby]=\"'s2-popup-message-heading-' + i\"\r\n    [attr.aria-describedby]=\"'s2-popup-message-text-' + i\"\r\n  >\r\n    <div\r\n      class=\"s2-popup-message__border\"\r\n      [ngClass]=\"message.severity ? 's2-popup-message__border--' + message.severity : ''\"\r\n    ></div>\r\n    <s2-icon\r\n      *ngIf=\"message.icon || message.severity\"\r\n      class=\"s2-popup-message__icon\"\r\n      [ngClass]=\"message.severity ? 's2-popup-message__icon--' + message.severity : ''\"\r\n      >{{ message.icon || icons[message.severity] }}</s2-icon\r\n    >\r\n    <div class=\"s2-popup-message__texts\">\r\n      <div\r\n        *ngIf=\"message.heading\"\r\n        class=\"s2-popup-message__heading\"\r\n        [ngClass]=\"message.severity ? 's2-popup-message__heading--' + message.severity : ''\"\r\n        [id]=\"'s2-popup-message-heading-' + i\"\r\n      >\r\n        {{ message.heading }}\r\n      </div>\r\n      <div *ngIf=\"message.text\" class=\"s2-popup-message__text\" [id]=\"'s2-popup-message-text-' + i\">\r\n        {{ message.text }}\r\n      </div>\r\n    </div>\r\n    <button\r\n      *ngIf=\"message.closable === undefined || message.closable\"\r\n      type=\"button\"\r\n      class=\"s2-popup-message__close\"\r\n      (click)=\"service.remove(message)\"\r\n      [attr.aria-label]=\"translationsService.translations.action.close\"\r\n    >\r\n      <s2-icon class=\"s2-popup-message__close-icon\">close</s2-icon>\r\n    </button>\r\n  </div>\r\n</ng-container>\r\n","import {\r\n  AfterContentInit,\r\n  Component,\r\n  ContentChildren,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  QueryList,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { IconComponent } from '../icon/icon.component';\r\nimport { TemplateDirective } from '../../directives/template.directive';\r\nimport { S2UiTranslationsService } from '../../services/s2-ui-translations.service';\r\n\r\nexport type CheckboxTreeItemChecked = boolean | 'semi';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport interface CheckboxTreeItem<T = any> {\r\n  checked?: CheckboxTreeItemChecked;\r\n  children?: CheckboxTreeItem<T>[];\r\n  className?: string;\r\n  disabled?: boolean;\r\n  extras?: T;\r\n  hidden?: boolean;\r\n  key?: string;\r\n  label: string;\r\n  open?: boolean;\r\n  parent?: CheckboxTreeItem<T>[];\r\n}\r\n\r\n@Component({\r\n  selector: 's2-checkbox-tree',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, IconComponent],\r\n  templateUrl: './checkbox-tree.component.html',\r\n  styleUrls: ['./checkbox-tree.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: { class: 's2-checkbox-tree' },\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      multi: true,\r\n      useExisting: CheckboxTreeComponent,\r\n    },\r\n  ],\r\n})\r\nexport class CheckboxTreeComponent implements OnChanges, AfterContentInit, OnDestroy, ControlValueAccessor {\r\n  static readonly S2_TEMPLATE_ITEM_LABEL = 'item-label';\r\n\r\n  static getValues<T = never>(\r\n    items: CheckboxTreeItem<T>[],\r\n    valueProperty: keyof CheckboxTreeItem<T>,\r\n    state: 'checked' | 'uncheked' | 'any' = 'checked'\r\n  ): CheckboxTreeItem<T>[] | unknown[] {\r\n    return items.reduce((accumulator, item) => {\r\n      if (item.children?.length) {\r\n        accumulator.push(...CheckboxTreeComponent.getValues(item.children, valueProperty, state));\r\n      } else if (\r\n        state === 'any' ||\r\n        (state === 'checked' && item.checked === true) ||\r\n        (state === 'uncheked' && !item.checked)\r\n      ) {\r\n        accumulator.push(valueProperty ? item[valueProperty] : item);\r\n      }\r\n      return accumulator;\r\n    }, [] as unknown[]);\r\n  }\r\n\r\n  readonly destroy$ = new Subject<void>();\r\n\r\n  @ContentChildren(TemplateDirective)\r\n  templatesQueryList: QueryList<TemplateDirective>;\r\n  itemLabelTemplate: TemplateRef<unknown>;\r\n\r\n  @Input() items: CheckboxTreeItem[];\r\n  @Input() showSelectAll: boolean = true;\r\n  @Input() selectAllText: string;\r\n  @Input() inputsIdPrefix = '';\r\n  @Input() valueProperty: keyof CheckboxTreeItem;\r\n\r\n  selectAllChecked: CheckboxTreeItemChecked = false;\r\n\r\n  disabled = false;\r\n  touched = false;\r\n  onChange: (value: unknown[] | CheckboxTreeItem[]) => void;\r\n  onTouched: () => void;\r\n\r\n  constructor(public translationsService: S2UiTranslationsService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.items.currentValue) {\r\n      this.refreshCheckedValues();\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.updateTemplates();\r\n    this.templatesQueryList.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n      this.updateTemplates();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.unsubscribe();\r\n  }\r\n\r\n  writeValue(newValue: unknown[]): void {\r\n    if (this.onChange) {\r\n      const setValue = (items: CheckboxTreeItem[], value: unknown[]): void => {\r\n        items.forEach((item) => {\r\n          if (item.children?.length) {\r\n            setValue(item.children, value);\r\n          } else {\r\n            item.checked = value?.length\r\n              ? this.valueProperty\r\n                ? value.some((valueItem) => valueItem === item[this.valueProperty])\r\n                : value.includes(item)\r\n              : false;\r\n          }\r\n        });\r\n      };\r\n      setValue(this.items, newValue);\r\n      this.refreshCheckedValues();\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: (value: unknown[] | CheckboxTreeItem[]) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  markAsTouched(): void {\r\n    if (!this.touched) {\r\n      this.onTouched?.();\r\n      this.touched = true;\r\n    }\r\n  }\r\n\r\n  handleSelectAll(event: Event): void {\r\n    this.handleCheckboxChange({ children: this.items, checked: this.selectAllChecked } as CheckboxTreeItem, event);\r\n  }\r\n\r\n  handleCheckboxChange(item: CheckboxTreeItem, event: Event): void {\r\n    if (item.children?.length && event) {\r\n      const eventTarget = event.target as HTMLInputElement;\r\n      this.setChildrenCheckedValue(item, item.checked === 'semi' ? true : eventTarget.checked);\r\n    }\r\n    this.refreshCheckedValues();\r\n    this.markAsTouched();\r\n    this.onChange?.(this.getValues());\r\n  }\r\n\r\n  private getValues(\r\n    items = this.items,\r\n    valueProperty = this.valueProperty,\r\n    state: 'checked' | 'uncheked' | 'any' = 'checked'\r\n  ): CheckboxTreeItem[] | unknown[] {\r\n    return CheckboxTreeComponent.getValues(items, valueProperty, state);\r\n  }\r\n\r\n  private setChildrenCheckedValue(item: CheckboxTreeItem, value: boolean): void {\r\n    item.children?.forEach((child) => {\r\n      child.checked = value;\r\n      if (child.children?.length) {\r\n        this.setChildrenCheckedValue(child, value);\r\n      }\r\n    });\r\n  }\r\n\r\n  private isItemChecked(item: CheckboxTreeItem): CheckboxTreeItemChecked {\r\n    if (item.children?.length) {\r\n      const selectedCount = item.children.reduce((accumulator, child) => {\r\n        if (child.children?.length) {\r\n          const isChildChildrenSelected = this.isItemChecked(child);\r\n          child.checked = isChildChildrenSelected;\r\n          if (isChildChildrenSelected === true) {\r\n            return accumulator + 1;\r\n          } else if (isChildChildrenSelected === 'semi') {\r\n            return accumulator + 0.5;\r\n          }\r\n        } else if (child.checked === true) {\r\n          return accumulator + 1;\r\n        }\r\n        return accumulator;\r\n      }, 0);\r\n      if (selectedCount === item.children.length && item.children.length > 0) {\r\n        return true;\r\n      } else if (selectedCount > 0) {\r\n        return 'semi';\r\n      }\r\n      return false;\r\n    } else {\r\n      return item.checked === true;\r\n    }\r\n  }\r\n\r\n  private refreshCheckedValues(): void {\r\n    if (this.showSelectAll) {\r\n      this.selectAllChecked = this.isItemChecked({ children: this.items } as CheckboxTreeItem);\r\n    } else {\r\n      this.items.forEach((item) => {\r\n        item.checked = this.isItemChecked(item);\r\n      });\r\n    }\r\n  }\r\n\r\n  private updateTemplates(): void {\r\n    this.itemLabelTemplate = this.templatesQueryList.find(\r\n      (template) => template.s2Template === CheckboxTreeComponent.S2_TEMPLATE_ITEM_LABEL\r\n    )?.template;\r\n  }\r\n}\r\n","<div *ngIf=\"showSelectAll\" class=\"s2-ui-inline-input-label s2-checkbox-tree-item s2-checkbox-tree-item--select-all\">\r\n  <input\r\n    type=\"checkbox\"\r\n    id=\"select-all\"\r\n    [checked]=\"selectAllChecked\"\r\n    class=\"s2-ui-input-checkbox\"\r\n    [ngClass]=\"{'s2-ui-input-checkbox--semi-selected': selectAllChecked === 'semi'}\"\r\n    (change)=\"handleSelectAll($event)\"\r\n  />\r\n  <label class=\"s2-checkbox-tree-item__label\" for=\"select-all\">\r\n    {{ selectAllText || translationsService.translations.action.selectAll }}\r\n  </label>\r\n</div>\r\n\r\n<ul class=\"s2-checkbox-tree-items\">\r\n  <ng-container *ngTemplateOutlet=\"loop; context: {items: items, idPrefix: inputsIdPrefix}\"></ng-container>\r\n</ul>\r\n\r\n<ng-template #loop let-items=\"items\" let-idPrefix=\"idPrefix\">\r\n  <ng-container *ngFor=\"let item of items; index as i\">\r\n    <li *ngIf=\"!item.hidden\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"item.children?.length ? groupView : checkboxView; context: {item: item, idPrefix: ''+idPrefix+i}\"\r\n      ></ng-container>\r\n    </li>\r\n  </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #groupView let-group=\"item\" let-idPrefix=\"idPrefix\">\r\n  <div class=\"s2-ui-inline-input-label\">\r\n    <div class=\"s2-checkbox-tree-item__button-placeholder\">\r\n      <button type=\"button\" class=\"s2-checkbox-tree-item__chevron-button\" (click)=\"group.open = !group.open\">\r\n        <s2-icon>{{ group.open ? 'expand_more' : 'chevron_right'}} </s2-icon>\r\n      </button>\r\n    </div>\r\n    <input\r\n      type=\"checkbox\"\r\n      [id]=\"idPrefix + '-' + (group.key !== undefined ? group.key : group.label)\"\r\n      class=\"s2-ui-input-checkbox\"\r\n      [checked]=\"group.checked\"\r\n      [disabled]=\"disabled || group.disabled\"\r\n      [ngClass]=\"{'s2-ui-input-checkbox--semi-selected': group.checked === 'semi'}\"\r\n      (change)=\"handleCheckboxChange(group, $event)\"\r\n    />\r\n    <label\r\n      class=\"s2-checkbox-tree-item__label\"\r\n      [for]=\"idPrefix + '-' + (group.key !== undefined ? group.key : group.label)\"\r\n    >\r\n      <ng-container *ngIf=\"itemLabelTemplate\">\r\n        <ng-container *ngTemplateOutlet=\"itemLabelTemplate; context: {$implicit: group}\"></ng-container>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!itemLabelTemplate\">\r\n        {{ group.label }}\r\n      </ng-container>\r\n    </label>\r\n  </div>\r\n  <ul *ngIf=\"group.open\">\r\n    <ng-container *ngTemplateOutlet=\"loop; context: {items: group.children, idPrefix: idPrefix}\"></ng-container>\r\n  </ul>\r\n</ng-template>\r\n\r\n<ng-template #checkboxView let-checkbox=\"item\" let-idPrefix=\"idPrefix\">\r\n  <div class=\"s2-ui-inline-input-label\">\r\n    <div class=\"s2-checkbox-tree-item__button-placeholder\"></div>\r\n    <input\r\n      type=\"checkbox\"\r\n      [id]=\"idPrefix + '-' + (checkbox.key !== undefined ? checkbox.key : checkbox.label)\"\r\n      class=\"s2-ui-input-checkbox\"\r\n      [disabled]=\"disabled || checkbox.disabled\"\r\n      [(ngModel)]=\"checkbox.checked\"\r\n      (ngModelChange)=\"handleCheckboxChange(checkbox, null)\"\r\n    />\r\n    <label\r\n      class=\"s2-checkbox-tree-item__label\"\r\n      [for]=\"idPrefix + '-' + (checkbox.key !== undefined ? checkbox.key : checkbox.label)\"\r\n    >\r\n      <ng-container *ngIf=\"itemLabelTemplate\">\r\n        <ng-container *ngTemplateOutlet=\"itemLabelTemplate; context: {$implicit: checkbox}\"></ng-container>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!itemLabelTemplate\">\r\n        {{ checkbox.label }}\r\n      </ng-container>\r\n    </label>\r\n  </div>\r\n</ng-template>\r\n","/*\r\n * Public API Surface of ngx-s2-ui\r\n */\r\n\r\nexport * from './lib/animations/expand-from-top';\r\n\r\nexport * from './lib/components/file-upload/file-upload.component';\r\nexport * from './lib/components/icon/icon.component';\r\nexport * from './lib/components/popup-messages/popup-messages.component';\r\nexport * from './lib/components/checkbox-tree/checkbox-tree.component';\r\n\r\nexport * from './lib/directives/template.directive';\r\n\r\nexport * from './lib/pipes/bytes-to-text.pipe';\r\nexport * from './lib/pipes/date.pipe';\r\nexport * from './lib/pipes/file-type-to-icon.pipe';\r\nexport * from './lib/pipes/replace.pipe';\r\n\r\nexport * from './lib/services/s2-ui-popup-messages.service';\r\nexport * from './lib/services/s2-ui-settings.service';\r\nexport * from './lib/services/s2-ui-translations.service';\r\n\r\nexport * from './lib/utils/get-file-extension';\r\nexport * from './lib/utils/get-mime-type-class';\r\nexport * from './lib/utils/get-unique-file-name';\r\nexport * from './lib/utils/get-unique-name';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2.S2UiSettingsService","i1.S2UiTranslationsService","i1.S2UiPopupMessagesService","i2.S2UiTranslationsService","i3"],"mappings":"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"}