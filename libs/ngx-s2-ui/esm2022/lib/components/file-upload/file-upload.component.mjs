import { BytesToTextPipe } from '../../pipes/bytes-to-text.pipe';
import { CommonModule } from '@angular/common';
import { Component, ContentChildren, EventEmitter, Input, Output, ViewEncapsulation, } from '@angular/core';
import { catchError } from 'rxjs/operators';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { expandFromTop } from '../../animations/expand-from-top';
import { FileTypeToIconPipe } from '../../pipes/file-type-to-icon.pipe';
import { getFileExtension } from '../../utils/get-file-extension';
import { getMimeTypeClass } from '../../utils/get-mime-type-class';
import { getUniqueFileName } from '../../utils/get-unique-file-name';
import { HttpEventType } from '@angular/common/http';
import { IconComponent } from '../icon/icon.component';
import { ReplacePipe } from '../../pipes/replace.pipe';
import { S2DatePipe } from '../../pipes/date.pipe';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import { TemplateDirective } from '../../directives/template.directive';
import * as i0 from "@angular/core";
import * as i1 from "../../services/s2-ui-translations.service";
import * as i2 from "@angular/common";
class FileUploadComponent {
    translationsService;
    destroyRef;
    static S2_TEMPLATE_HEADER = 'header';
    static S2_TEMPLATE_HEADER_CONTENT = 'header-content';
    static S2_TEMPLATE_FILE_INFO = 'file-info';
    S2_TEMPLATE_HEADER = FileUploadComponent.S2_TEMPLATE_HEADER;
    S2_TEMPLATE_HEADER_CONTENT = FileUploadComponent.S2_TEMPLATE_HEADER_CONTENT;
    S2_TEMPLATE_FILE_INFO = FileUploadComponent.S2_TEMPLATE_FILE_INFO;
    accept;
    autoUploadMethod;
    browseButtonText;
    errorDuration = 5000;
    inputId;
    maxFiles = 5;
    maxFileSize = 10485760;
    showDate = true;
    showDragDropText = 'responsive';
    showHeaderIcon = 'responsive';
    clickDownload = new EventEmitter();
    clickRemove = new EventEmitter();
    autoUploadSuccess = new EventEmitter();
    autoUploadError = new EventEmitter();
    templatesQueryList;
    templates = {};
    files = [];
    error;
    errorClearTimeout;
    disabled = false;
    onChange;
    onTouched;
    constructor(translationsService, destroyRef) {
        this.translationsService = translationsService;
        this.destroyRef = destroyRef;
    }
    ngAfterContentInit() {
        this.updateTemplates();
        this.templatesQueryList.changes.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(() => {
            this.updateTemplates();
        });
    }
    writeValue(files) {
        if (Array.isArray(files)) {
            this.files = files;
        }
        else {
            this.files = [];
        }
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
    loadFiles(files) {
        if (files.length) {
            if (files.length > this.maxFiles - this.files.length) {
                this.showError('maxFiles');
            }
            else if (typeof this.maxFileSize === 'number' && files.some((file) => file.size > this.maxFileSize)) {
                this.showError('maxFileSize');
            }
            else if (files.some((file) => !this.isFileTypeAccepted(file))) {
                this.showError('accept');
            }
            else {
                this.showError(undefined);
                const s2Files = files.map((file) => ({
                    name: getUniqueFileName(file.name, this.files.map((file) => file.name)),
                    type: file.type,
                    size: file.size,
                    uploaded: false,
                    date: new Date(),
                    file,
                }));
                this.files = [...this.files, ...s2Files];
                this.autoUploadFiles(s2Files);
                this.onChange?.(this.files);
            }
        }
    }
    autoUploadFiles(files) {
        this.autoUploadMethod?.(files)
            .pipe(catchError((error) => {
            files?.forEach((file) => {
                file.uploadProgress = undefined;
            });
            this.onChange?.(this.files);
            this.autoUploadError.emit({ files, error: error });
            throw error;
        }))
            .subscribe({
            next: (event) => {
                if (event.type === HttpEventType.UploadProgress) {
                    const progress = Math.round((event.loaded * 100) / event.total);
                    files?.forEach((file) => {
                        file.uploadProgress = progress;
                    });
                }
                else if (event.type === HttpEventType.Response) {
                    if (event.status >= 200 && event.status < 300) {
                        files?.forEach((file) => {
                            file.uploadProgress = undefined;
                            file.uploaded = true;
                            const receivedFile = event.body?.find((responseFile) => responseFile?.name === file.name);
                            if (receivedFile) {
                                Object.assign(file, receivedFile);
                            }
                        });
                        this.onChange?.(this.files);
                        this.autoUploadSuccess.emit(files);
                    }
                    else {
                        throw new Error(`HttpResponse status ${event.status}`);
                    }
                }
            },
        });
    }
    handleInputChange(event) {
        event.preventDefault();
        if (!this.disabled) {
            this.onTouched?.();
            this.loadFiles(Array.from(event.target.files));
        }
    }
    handleDropFile(event) {
        event.preventDefault();
        if (!this.disabled) {
            this.onTouched?.();
            this.loadFiles(Array.from(event.dataTransfer.files));
        }
    }
    handleDownloadFile(file) {
        this.clickDownload.emit(file);
    }
    handleRemoveFile(index) {
        this.clickRemove.emit(this.files[index]);
        this.files.splice(index, 1);
        this.onChange?.(this.files);
    }
    showError(error) {
        clearTimeout(this.errorClearTimeout);
        this.error = error;
        if (error) {
            this.errorClearTimeout = setTimeout(() => {
                this.error = undefined;
            }, this.errorDuration);
        }
    }
    isFileTypeAccepted(file) {
        if (!this.accept || this.accept === '*') {
            return true;
        }
        const acceptArray = this.accept
            .split(',')
            .map((type) => type.trim())
            .filter((type) => type);
        return acceptArray.some((acceptableType) => {
            if (acceptableType.indexOf('*') !== -1) {
                return getMimeTypeClass(file.type) === getMimeTypeClass(acceptableType);
            }
            else {
                return (file.type === acceptableType || getFileExtension(file.name).toLowerCase() === acceptableType.toLowerCase());
            }
        });
    }
    updateTemplates() {
        Object.keys(this.templates).forEach((templateKey) => {
            if (!this.templatesQueryList.some((template) => template.s2Template === templateKey)) {
                delete this.templates[templateKey];
            }
        });
        this.templatesQueryList.forEach((template) => {
            this.templates[template.s2Template] = template.template;
        });
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: FileUploadComponent, deps: [{ token: i1.S2UiTranslationsService }, { token: i0.DestroyRef }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.2", type: FileUploadComponent, isStandalone: true, selector: "s2-file-upload", inputs: { accept: "accept", autoUploadMethod: "autoUploadMethod", browseButtonText: "browseButtonText", errorDuration: "errorDuration", inputId: "inputId", maxFiles: "maxFiles", maxFileSize: "maxFileSize", showDate: "showDate", showDragDropText: "showDragDropText", showHeaderIcon: "showHeaderIcon" }, outputs: { clickDownload: "clickDownload", clickRemove: "clickRemove", autoUploadSuccess: "autoUploadSuccess", autoUploadError: "autoUploadError" }, host: { classAttribute: "s2-file-upload" }, providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: FileUploadComponent,
            },
        ], queries: [{ propertyName: "templatesQueryList", predicate: TemplateDirective }], ngImport: i0, template: "<input\r\n  class=\"s2-file-upload__input\"\r\n  type=\"file\"\r\n  [id]=\"inputId\"\r\n  (change)=\"handleInputChange($event)\"\r\n  [multiple]=\"maxFiles > 1 && files.length < (maxFiles-1)\"\r\n  [accept]=\"accept\"\r\n  [disabled]=\"disabled\"\r\n  #inputFile\r\n/>\r\n\r\n<ng-template *ngIf=\"templates[S2_TEMPLATE_HEADER]\" [ngTemplateOutlet]=\"templates[S2_TEMPLATE_HEADER]\" />\r\n\r\n<div\r\n  *ngIf=\"!templates[S2_TEMPLATE_HEADER]\"\r\n  class=\"s2-file-upload-header\"\r\n  [ngClass]=\"{'s2-file-upload-header--disabled': disabled || files.length >= maxFiles}\"\r\n  (dragover)=\"$event.preventDefault(); $event.stopPropagation()\"\r\n  (dragleave)=\"$event.preventDefault(); $event.stopPropagation()\"\r\n  (drop)=\"handleDropFile($event)\"\r\n>\r\n  <ng-template\r\n    *ngIf=\"templates[S2_TEMPLATE_HEADER_CONTENT]\"\r\n    [ngTemplateOutlet]=\"templates[S2_TEMPLATE_HEADER_CONTENT]\"\r\n  />\r\n\r\n  <ng-container *ngIf=\"!templates[S2_TEMPLATE_HEADER_CONTENT]\">\r\n    <s2-icon\r\n      *ngIf=\"showHeaderIcon\"\r\n      class=\"s2-file-upload-header__icon\"\r\n      [ngClass]=\"{'s2-file-upload-header__icon--responsive': showHeaderIcon === 'responsive'}\"\r\n      >file_upload</s2-icon\r\n    >\r\n    <div class=\"s2-file-upload-header__content-wrapper\">\r\n      <ng-container *ngIf=\"!error\">\r\n        <ng-container *ngIf=\"showDragDropText\">\r\n          <span\r\n            class=\"s2-file-upload-header__text\"\r\n            [ngClass]=\"{'s2-file-upload-header__text--responsive': showDragDropText === 'responsive'}\"\r\n            >{{ translationsService.translations.action.dragFilesHere }}</span\r\n          >\r\n          <span\r\n            class=\"s2-file-upload-header__text\"\r\n            [ngClass]=\"{'s2-file-upload-header__text--responsive': showDragDropText === 'responsive'}\"\r\n            >{{ translationsService.translations.general.or | lowercase }}</span\r\n          >\r\n        </ng-container>\r\n        <button\r\n          type=\"button\"\r\n          class=\"s2-file-upload-header__choose\"\r\n          [disabled]=\"disabled || files.length >= maxFiles\"\r\n          (click)=\"inputFile.click()\"\r\n        >\r\n          {{ browseButtonText === undefined ? translationsService.translations.action.browse : browseButtonText }}\r\n        </button>\r\n      </ng-container>\r\n      <span *ngIf=\"error\" class=\"s2-file-upload-header__error\">\r\n        <ng-container\r\n          *ngIf=\"error === 'accept'\"\r\n          >{{ translationsService.translations.errorMsg.invalidFileFormat | replace:'{0}':accept }}</ng-container\r\n        >\r\n        <ng-container\r\n          *ngIf=\"error === 'maxFiles'\"\r\n          >{{ translationsService.translations.errorMsg.maxFilesExceed | replace:'{0}':maxFiles+'' }}</ng-container\r\n        >\r\n        <ng-container\r\n          *ngIf=\"error === 'maxFileSize'\"\r\n          >{{ translationsService.translations.errorMsg.maxFileSizeExceed | replace:'{0}':(maxFileSize | bytesToText)\r\n          }}</ng-container\r\n        >\r\n      </span>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n\r\n<ul class=\"s2-uploaded-files\">\r\n  <li *ngFor=\"let file of files; index as i\" class=\"s2-uploaded-file\" @expandFromTop>\r\n    <div class=\"s2-uploaded-file__icon-wrapper\">\r\n      <s2-icon\r\n        class=\"s2-uploaded-file__icon\"\r\n        [ngClass]=\"{'s2-uploaded-file__icon--uploaded': file.uploaded}\"\r\n        >{{ file.icon || (file.type | fileTypeToIcon) }}</s2-icon\r\n      >\r\n    </div>\r\n    <ng-container *ngTemplateOutlet=\"templates[S2_TEMPLATE_FILE_INFO]; context: {$implicit: file, index: i}\" />\r\n    <div *ngIf=\"!templates[S2_TEMPLATE_FILE_INFO]\" class=\"s2-uploaded-file__info\">\r\n      <span *ngIf=\"!file.uploaded\" class=\"s2-uploaded-file__info-name\" [title]=\"file.name\">{{ file.name }}</span>\r\n      <button\r\n        *ngIf=\"file.uploaded\"\r\n        type=\"button\"\r\n        class=\"s2-uploaded-file__info-name\"\r\n        [ngClass]=\"{'s2-uploaded-file__info-name--downloadable': true}\"\r\n        [title]=\"file.name\"\r\n        (click)=\"handleDownloadFile(file)\"\r\n      >\r\n        {{ file.name }}\r\n      </button>\r\n      <div\r\n        *ngIf=\"!file.uploaded && (file.uploadProgress || file.uploadProgress === 0)\"\r\n        class=\"s2-uploaded-file__info-progress\"\r\n      >\r\n        <div class=\"s2-uploaded-file__info-progress-background\">\r\n          <div\r\n            class=\"s2-uploaded-file__info-progress-line\"\r\n            [ngStyle]=\"{'width.%': file.uploadProgress}\"\r\n            role=\"progressbar\"\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n            [attr.aria-valuenow]=\"file.uploadProgress\"\r\n            [attr.aria-label]=\"file.name\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <span\r\n        *ngIf=\"file.uploaded || (!file.uploadProgress && file.uploadProgress !== 0)\"\r\n        class=\"s2-uploaded-file__info-details\"\r\n      >\r\n        <span *ngIf=\"showDate && file.date\" class=\"s2-uploaded-file__info-details-date\">\r\n          {{ file.date | s2Date }}\r\n        </span>\r\n        <span\r\n          class=\"s2-uploaded-file__info-details-size\"\r\n          [ngClass]=\"{'s2-uploaded-file__info-details-size--uploaded': file.uploaded}\"\r\n        >\r\n          {{ file.size | bytesToText }} <s2-icon *ngIf=\"file.uploaded\">check</s2-icon>\r\n        </span>\r\n      </span>\r\n    </div>\r\n    <button\r\n      type=\"button\"\r\n      class=\"s2-uploaded-file__remove\"\r\n      (click)=\"handleRemoveFile(i)\"\r\n      [disabled]=\"!file.uploaded && (file.uploadProgress || file.uploadProgress === 0)\"\r\n    >\r\n      <s2-icon class=\"s2-uploaded-file__remove-icon\">{{ file.uploaded ? 'delete' : 'close' }}</s2-icon>\r\n    </button>\r\n  </li>\r\n</ul>\r\n", styles: [".s2-file-upload{display:block;border-radius:.375rem;border-width:2px;--tw-border-opacity: 1;border-color:hsl(var(--s2-color-neutral-200) / var(--tw-border-opacity));padding:.5rem;container-type:inline-size}.s2-file-upload__input{display:none}.s2-file-upload .s2-file-upload-header{display:flex;flex-direction:column;align-items:center;justify-content:center;row-gap:.25rem;border-radius:.375rem;border-width:1px;border-style:dashed;--tw-border-opacity: 1;border-color:hsl(var(--s2-color-neutral-300) / var(--tw-border-opacity));padding-top:.5rem;padding-bottom:.5rem}.s2-file-upload .s2-file-upload-header__icon{font-size:var(--s2-font-size-4xl);line-height:var(--s2-font-size-4xl-line-height);--tw-text-opacity: 1;color:hsl(var(--s2-color-text-400) / var(--tw-text-opacity))}.s2-file-upload .s2-file-upload-header__icon--responsive{display:none}@container (min-width: 24rem){.s2-file-upload .s2-file-upload-header__icon--responsive{display:inline-block}}.s2-file-upload .s2-file-upload-header__content-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;column-gap:.375rem;row-gap:.125rem;padding-top:.125rem;padding-bottom:.125rem}@container (min-width: 24rem){.s2-file-upload .s2-file-upload-header__content-wrapper{flex-direction:row}}.s2-file-upload .s2-file-upload-header__text{display:inline}.s2-file-upload .s2-file-upload-header__text--responsive{display:none}@container (min-width: 24rem){.s2-file-upload .s2-file-upload-header__text--responsive{display:inline}}.s2-file-upload .s2-file-upload-header__choose{font-weight:500;--tw-text-opacity: 1;color:hsl(var(--s2-color-primary-500) / var(--tw-text-opacity))}.s2-file-upload .s2-file-upload-header__choose:hover{text-decoration-line:underline}.s2-file-upload .s2-file-upload-header__choose:disabled{--tw-text-opacity: 1;color:hsl(var(--s2-color-text-400) / var(--tw-text-opacity))}.s2-file-upload .s2-file-upload-header__choose:disabled:hover{text-decoration-line:none}.s2-file-upload .s2-file-upload-header__error{text-align:center;--tw-text-opacity: 1;color:hsl(var(--s2-color-risk-700) / var(--tw-text-opacity))}.s2-file-upload .s2-file-upload-header--disabled{--tw-bg-opacity: 1;background-color:hsl(var(--s2-color-neutral-050) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--s2-color-text-400) / var(--tw-text-opacity))}.s2-file-upload .s2-file-upload-header--disabled .s2-file-upload__icon{--tw-text-opacity: 1;color:hsl(var(--s2-color-text-300) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-files{display:flex;flex-direction:column;gap:.25rem}.s2-file-upload .s2-uploaded-file{display:flex;align-items:center;gap:.5rem;overflow:hidden;border-bottom-width:1px;--tw-border-opacity: 1;border-color:hsl(var(--s2-color-neutral-200) / var(--tw-border-opacity));padding:.25rem}.s2-file-upload .s2-uploaded-file:first-child{margin-top:.5rem}.s2-file-upload .s2-uploaded-file:last-child{border-bottom-width:0px}.s2-file-upload .s2-uploaded-file__icon-wrapper{display:flex;height:2rem;width:2rem;flex-shrink:0;align-items:center;justify-content:center;border-radius:.375rem;--tw-bg-opacity: 1;background-color:hsl(var(--s2-color-neutral-100) / var(--tw-bg-opacity))}@container (min-width: 24rem){.s2-file-upload .s2-uploaded-file__icon-wrapper{height:2.5rem;width:2.5rem}}.s2-file-upload .s2-uploaded-file__icon{flex-shrink:0;font-size:var(--s2-font-size-2xl);line-height:1;--tw-text-opacity: 1;color:hsl(var(--s2-color-text-500) / var(--tw-text-opacity))}@container (min-width: 24rem){.s2-file-upload .s2-uploaded-file__icon{font-size:var(--s2-font-size-3xl);line-height:1}}.s2-file-upload .s2-uploaded-file__icon--uploaded{--tw-text-opacity: 1;color:hsl(var(--s2-color-text-600) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__info{display:flex;flex-grow:1;flex-direction:column;overflow:hidden}.s2-file-upload .s2-uploaded-file__info-name{display:inline-block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;text-align:left;--tw-text-opacity: 1;color:hsl(var(--s2-color-text-700) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__info-name--downloadable{--tw-text-opacity: 1;color:hsl(var(--s2-color-text-900) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__info-name--downloadable:hover{text-decoration-line:underline}.s2-file-upload .s2-uploaded-file__info-progress{display:flex;width:100%;max-width:24rem;padding-top:.375rem;padding-bottom:.375rem}.s2-file-upload .s2-uploaded-file__info-progress-background{display:flex;height:.5rem;flex-grow:1;overflow:hidden;border-radius:9999px;--tw-bg-opacity: 1;background-color:hsl(var(--s2-color-neutral-100) / var(--tw-bg-opacity))}.s2-file-upload .s2-uploaded-file__info-progress-line{height:100%;--tw-bg-opacity: 1;background-color:hsl(var(--s2-color-primary-500) / var(--tw-bg-opacity));--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / .1), 0 2px 4px -2px rgb(0 0 0 / .1);--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.s2-file-upload .s2-uploaded-file__info-details{display:flex;flex-wrap:wrap;column-gap:.5rem}.s2-file-upload .s2-uploaded-file__info-details-date{font-size:var(--s2-font-size-sm);line-height:var(--s2-font-size-sm-line-height);--tw-text-opacity: 1;color:hsl(var(--s2-color-text-400) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__info-details-size{font-size:var(--s2-font-size-sm);line-height:var(--s2-font-size-sm-line-height);--tw-text-opacity: 1;color:hsl(var(--s2-color-text-500) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__info-details-size--uploaded{--tw-text-opacity: 1;color:hsl(var(--s2-color-success-500) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__remove{margin-left:auto;flex-shrink:0;padding:.25rem;--tw-text-opacity: 1;color:hsl(var(--s2-color-text-700) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__remove:hover{--tw-text-opacity: 1;color:hsl(var(--s2-color-risk-700) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__remove:disabled{--tw-text-opacity: 1;color:hsl(var(--s2-color-text-300) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__remove-icon{font-size:var(--s2-font-size-xl);line-height:var(--s2-font-size-xl-line-height)}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i2.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "pipe", type: i2.LowerCasePipe, name: "lowercase" }, { kind: "component", type: IconComponent, selector: "s2-icon" }, { kind: "pipe", type: BytesToTextPipe, name: "bytesToText" }, { kind: "pipe", type: ReplacePipe, name: "replace" }, { kind: "pipe", type: S2DatePipe, name: "s2Date" }, { kind: "pipe", type: FileTypeToIconPipe, name: "fileTypeToIcon" }], animations: [expandFromTop()], encapsulation: i0.ViewEncapsulation.None });
}
export { FileUploadComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.2", ngImport: i0, type: FileUploadComponent, decorators: [{
            type: Component,
            args: [{ selector: 's2-file-upload', standalone: true, imports: [CommonModule, IconComponent, BytesToTextPipe, ReplacePipe, S2DatePipe, FileTypeToIconPipe], encapsulation: ViewEncapsulation.None, host: { class: 's2-file-upload' }, providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            multi: true,
                            useExisting: FileUploadComponent,
                        },
                    ], animations: [expandFromTop()], template: "<input\r\n  class=\"s2-file-upload__input\"\r\n  type=\"file\"\r\n  [id]=\"inputId\"\r\n  (change)=\"handleInputChange($event)\"\r\n  [multiple]=\"maxFiles > 1 && files.length < (maxFiles-1)\"\r\n  [accept]=\"accept\"\r\n  [disabled]=\"disabled\"\r\n  #inputFile\r\n/>\r\n\r\n<ng-template *ngIf=\"templates[S2_TEMPLATE_HEADER]\" [ngTemplateOutlet]=\"templates[S2_TEMPLATE_HEADER]\" />\r\n\r\n<div\r\n  *ngIf=\"!templates[S2_TEMPLATE_HEADER]\"\r\n  class=\"s2-file-upload-header\"\r\n  [ngClass]=\"{'s2-file-upload-header--disabled': disabled || files.length >= maxFiles}\"\r\n  (dragover)=\"$event.preventDefault(); $event.stopPropagation()\"\r\n  (dragleave)=\"$event.preventDefault(); $event.stopPropagation()\"\r\n  (drop)=\"handleDropFile($event)\"\r\n>\r\n  <ng-template\r\n    *ngIf=\"templates[S2_TEMPLATE_HEADER_CONTENT]\"\r\n    [ngTemplateOutlet]=\"templates[S2_TEMPLATE_HEADER_CONTENT]\"\r\n  />\r\n\r\n  <ng-container *ngIf=\"!templates[S2_TEMPLATE_HEADER_CONTENT]\">\r\n    <s2-icon\r\n      *ngIf=\"showHeaderIcon\"\r\n      class=\"s2-file-upload-header__icon\"\r\n      [ngClass]=\"{'s2-file-upload-header__icon--responsive': showHeaderIcon === 'responsive'}\"\r\n      >file_upload</s2-icon\r\n    >\r\n    <div class=\"s2-file-upload-header__content-wrapper\">\r\n      <ng-container *ngIf=\"!error\">\r\n        <ng-container *ngIf=\"showDragDropText\">\r\n          <span\r\n            class=\"s2-file-upload-header__text\"\r\n            [ngClass]=\"{'s2-file-upload-header__text--responsive': showDragDropText === 'responsive'}\"\r\n            >{{ translationsService.translations.action.dragFilesHere }}</span\r\n          >\r\n          <span\r\n            class=\"s2-file-upload-header__text\"\r\n            [ngClass]=\"{'s2-file-upload-header__text--responsive': showDragDropText === 'responsive'}\"\r\n            >{{ translationsService.translations.general.or | lowercase }}</span\r\n          >\r\n        </ng-container>\r\n        <button\r\n          type=\"button\"\r\n          class=\"s2-file-upload-header__choose\"\r\n          [disabled]=\"disabled || files.length >= maxFiles\"\r\n          (click)=\"inputFile.click()\"\r\n        >\r\n          {{ browseButtonText === undefined ? translationsService.translations.action.browse : browseButtonText }}\r\n        </button>\r\n      </ng-container>\r\n      <span *ngIf=\"error\" class=\"s2-file-upload-header__error\">\r\n        <ng-container\r\n          *ngIf=\"error === 'accept'\"\r\n          >{{ translationsService.translations.errorMsg.invalidFileFormat | replace:'{0}':accept }}</ng-container\r\n        >\r\n        <ng-container\r\n          *ngIf=\"error === 'maxFiles'\"\r\n          >{{ translationsService.translations.errorMsg.maxFilesExceed | replace:'{0}':maxFiles+'' }}</ng-container\r\n        >\r\n        <ng-container\r\n          *ngIf=\"error === 'maxFileSize'\"\r\n          >{{ translationsService.translations.errorMsg.maxFileSizeExceed | replace:'{0}':(maxFileSize | bytesToText)\r\n          }}</ng-container\r\n        >\r\n      </span>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n\r\n<ul class=\"s2-uploaded-files\">\r\n  <li *ngFor=\"let file of files; index as i\" class=\"s2-uploaded-file\" @expandFromTop>\r\n    <div class=\"s2-uploaded-file__icon-wrapper\">\r\n      <s2-icon\r\n        class=\"s2-uploaded-file__icon\"\r\n        [ngClass]=\"{'s2-uploaded-file__icon--uploaded': file.uploaded}\"\r\n        >{{ file.icon || (file.type | fileTypeToIcon) }}</s2-icon\r\n      >\r\n    </div>\r\n    <ng-container *ngTemplateOutlet=\"templates[S2_TEMPLATE_FILE_INFO]; context: {$implicit: file, index: i}\" />\r\n    <div *ngIf=\"!templates[S2_TEMPLATE_FILE_INFO]\" class=\"s2-uploaded-file__info\">\r\n      <span *ngIf=\"!file.uploaded\" class=\"s2-uploaded-file__info-name\" [title]=\"file.name\">{{ file.name }}</span>\r\n      <button\r\n        *ngIf=\"file.uploaded\"\r\n        type=\"button\"\r\n        class=\"s2-uploaded-file__info-name\"\r\n        [ngClass]=\"{'s2-uploaded-file__info-name--downloadable': true}\"\r\n        [title]=\"file.name\"\r\n        (click)=\"handleDownloadFile(file)\"\r\n      >\r\n        {{ file.name }}\r\n      </button>\r\n      <div\r\n        *ngIf=\"!file.uploaded && (file.uploadProgress || file.uploadProgress === 0)\"\r\n        class=\"s2-uploaded-file__info-progress\"\r\n      >\r\n        <div class=\"s2-uploaded-file__info-progress-background\">\r\n          <div\r\n            class=\"s2-uploaded-file__info-progress-line\"\r\n            [ngStyle]=\"{'width.%': file.uploadProgress}\"\r\n            role=\"progressbar\"\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n            [attr.aria-valuenow]=\"file.uploadProgress\"\r\n            [attr.aria-label]=\"file.name\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <span\r\n        *ngIf=\"file.uploaded || (!file.uploadProgress && file.uploadProgress !== 0)\"\r\n        class=\"s2-uploaded-file__info-details\"\r\n      >\r\n        <span *ngIf=\"showDate && file.date\" class=\"s2-uploaded-file__info-details-date\">\r\n          {{ file.date | s2Date }}\r\n        </span>\r\n        <span\r\n          class=\"s2-uploaded-file__info-details-size\"\r\n          [ngClass]=\"{'s2-uploaded-file__info-details-size--uploaded': file.uploaded}\"\r\n        >\r\n          {{ file.size | bytesToText }} <s2-icon *ngIf=\"file.uploaded\">check</s2-icon>\r\n        </span>\r\n      </span>\r\n    </div>\r\n    <button\r\n      type=\"button\"\r\n      class=\"s2-uploaded-file__remove\"\r\n      (click)=\"handleRemoveFile(i)\"\r\n      [disabled]=\"!file.uploaded && (file.uploadProgress || file.uploadProgress === 0)\"\r\n    >\r\n      <s2-icon class=\"s2-uploaded-file__remove-icon\">{{ file.uploaded ? 'delete' : 'close' }}</s2-icon>\r\n    </button>\r\n  </li>\r\n</ul>\r\n", styles: [".s2-file-upload{display:block;border-radius:.375rem;border-width:2px;--tw-border-opacity: 1;border-color:hsl(var(--s2-color-neutral-200) / var(--tw-border-opacity));padding:.5rem;container-type:inline-size}.s2-file-upload__input{display:none}.s2-file-upload .s2-file-upload-header{display:flex;flex-direction:column;align-items:center;justify-content:center;row-gap:.25rem;border-radius:.375rem;border-width:1px;border-style:dashed;--tw-border-opacity: 1;border-color:hsl(var(--s2-color-neutral-300) / var(--tw-border-opacity));padding-top:.5rem;padding-bottom:.5rem}.s2-file-upload .s2-file-upload-header__icon{font-size:var(--s2-font-size-4xl);line-height:var(--s2-font-size-4xl-line-height);--tw-text-opacity: 1;color:hsl(var(--s2-color-text-400) / var(--tw-text-opacity))}.s2-file-upload .s2-file-upload-header__icon--responsive{display:none}@container (min-width: 24rem){.s2-file-upload .s2-file-upload-header__icon--responsive{display:inline-block}}.s2-file-upload .s2-file-upload-header__content-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;column-gap:.375rem;row-gap:.125rem;padding-top:.125rem;padding-bottom:.125rem}@container (min-width: 24rem){.s2-file-upload .s2-file-upload-header__content-wrapper{flex-direction:row}}.s2-file-upload .s2-file-upload-header__text{display:inline}.s2-file-upload .s2-file-upload-header__text--responsive{display:none}@container (min-width: 24rem){.s2-file-upload .s2-file-upload-header__text--responsive{display:inline}}.s2-file-upload .s2-file-upload-header__choose{font-weight:500;--tw-text-opacity: 1;color:hsl(var(--s2-color-primary-500) / var(--tw-text-opacity))}.s2-file-upload .s2-file-upload-header__choose:hover{text-decoration-line:underline}.s2-file-upload .s2-file-upload-header__choose:disabled{--tw-text-opacity: 1;color:hsl(var(--s2-color-text-400) / var(--tw-text-opacity))}.s2-file-upload .s2-file-upload-header__choose:disabled:hover{text-decoration-line:none}.s2-file-upload .s2-file-upload-header__error{text-align:center;--tw-text-opacity: 1;color:hsl(var(--s2-color-risk-700) / var(--tw-text-opacity))}.s2-file-upload .s2-file-upload-header--disabled{--tw-bg-opacity: 1;background-color:hsl(var(--s2-color-neutral-050) / var(--tw-bg-opacity));--tw-text-opacity: 1;color:hsl(var(--s2-color-text-400) / var(--tw-text-opacity))}.s2-file-upload .s2-file-upload-header--disabled .s2-file-upload__icon{--tw-text-opacity: 1;color:hsl(var(--s2-color-text-300) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-files{display:flex;flex-direction:column;gap:.25rem}.s2-file-upload .s2-uploaded-file{display:flex;align-items:center;gap:.5rem;overflow:hidden;border-bottom-width:1px;--tw-border-opacity: 1;border-color:hsl(var(--s2-color-neutral-200) / var(--tw-border-opacity));padding:.25rem}.s2-file-upload .s2-uploaded-file:first-child{margin-top:.5rem}.s2-file-upload .s2-uploaded-file:last-child{border-bottom-width:0px}.s2-file-upload .s2-uploaded-file__icon-wrapper{display:flex;height:2rem;width:2rem;flex-shrink:0;align-items:center;justify-content:center;border-radius:.375rem;--tw-bg-opacity: 1;background-color:hsl(var(--s2-color-neutral-100) / var(--tw-bg-opacity))}@container (min-width: 24rem){.s2-file-upload .s2-uploaded-file__icon-wrapper{height:2.5rem;width:2.5rem}}.s2-file-upload .s2-uploaded-file__icon{flex-shrink:0;font-size:var(--s2-font-size-2xl);line-height:1;--tw-text-opacity: 1;color:hsl(var(--s2-color-text-500) / var(--tw-text-opacity))}@container (min-width: 24rem){.s2-file-upload .s2-uploaded-file__icon{font-size:var(--s2-font-size-3xl);line-height:1}}.s2-file-upload .s2-uploaded-file__icon--uploaded{--tw-text-opacity: 1;color:hsl(var(--s2-color-text-600) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__info{display:flex;flex-grow:1;flex-direction:column;overflow:hidden}.s2-file-upload .s2-uploaded-file__info-name{display:inline-block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;text-align:left;--tw-text-opacity: 1;color:hsl(var(--s2-color-text-700) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__info-name--downloadable{--tw-text-opacity: 1;color:hsl(var(--s2-color-text-900) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__info-name--downloadable:hover{text-decoration-line:underline}.s2-file-upload .s2-uploaded-file__info-progress{display:flex;width:100%;max-width:24rem;padding-top:.375rem;padding-bottom:.375rem}.s2-file-upload .s2-uploaded-file__info-progress-background{display:flex;height:.5rem;flex-grow:1;overflow:hidden;border-radius:9999px;--tw-bg-opacity: 1;background-color:hsl(var(--s2-color-neutral-100) / var(--tw-bg-opacity))}.s2-file-upload .s2-uploaded-file__info-progress-line{height:100%;--tw-bg-opacity: 1;background-color:hsl(var(--s2-color-primary-500) / var(--tw-bg-opacity));--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / .1), 0 2px 4px -2px rgb(0 0 0 / .1);--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.s2-file-upload .s2-uploaded-file__info-details{display:flex;flex-wrap:wrap;column-gap:.5rem}.s2-file-upload .s2-uploaded-file__info-details-date{font-size:var(--s2-font-size-sm);line-height:var(--s2-font-size-sm-line-height);--tw-text-opacity: 1;color:hsl(var(--s2-color-text-400) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__info-details-size{font-size:var(--s2-font-size-sm);line-height:var(--s2-font-size-sm-line-height);--tw-text-opacity: 1;color:hsl(var(--s2-color-text-500) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__info-details-size--uploaded{--tw-text-opacity: 1;color:hsl(var(--s2-color-success-500) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__remove{margin-left:auto;flex-shrink:0;padding:.25rem;--tw-text-opacity: 1;color:hsl(var(--s2-color-text-700) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__remove:hover{--tw-text-opacity: 1;color:hsl(var(--s2-color-risk-700) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__remove:disabled{--tw-text-opacity: 1;color:hsl(var(--s2-color-text-300) / var(--tw-text-opacity))}.s2-file-upload .s2-uploaded-file__remove-icon{font-size:var(--s2-font-size-xl);line-height:var(--s2-font-size-xl-line-height)}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.S2UiTranslationsService }, { type: i0.DestroyRef }]; }, propDecorators: { accept: [{
                type: Input
            }], autoUploadMethod: [{
                type: Input
            }], browseButtonText: [{
                type: Input
            }], errorDuration: [{
                type: Input
            }], inputId: [{
                type: Input
            }], maxFiles: [{
                type: Input
            }], maxFileSize: [{
                type: Input
            }], showDate: [{
                type: Input
            }], showDragDropText: [{
                type: Input
            }], showHeaderIcon: [{
                type: Input
            }], clickDownload: [{
                type: Output
            }], clickRemove: [{
                type: Output
            }], autoUploadSuccess: [{
                type: Output
            }], autoUploadError: [{
                type: Output
            }], templatesQueryList: [{
                type: ContentChildren,
                args: [TemplateDirective]
            }] } });
//# sourceMappingURL=data:application/json;base64,